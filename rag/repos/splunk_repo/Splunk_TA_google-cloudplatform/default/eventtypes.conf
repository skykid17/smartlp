##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
# authentication
# Filtering the Authentication events based on serviceName
[gcp_pubsub_audit_log_auth]
search = sourcetype="google:gcp:pubsub:audit:data_access" AND NOT (protoPayload.methodName IN ("google.logging.v2.LoggingServiceV2.ListLogs", "google.iam.admin.v1.GetServiceAccountKey") OR data.protoPayload.methodName IN ("google.logging.v2.LoggingServiceV2.ListLogs", "google.iam.admin.v1.GetServiceAccountKey"))

[gcp_pubsub_audit_auth_account_change]
search = sourcetype="google:gcp:pubsub:audit:data_access" AND ((protoPayload.methodName="google.iam.admin.v1.GetServiceAccountKey") OR (data.protoPayload.methodName="google.iam.admin.v1.GetServiceAccountKey"))

[gcp_pubsub_audit_auth_logs_change]
search = sourcetype="google:gcp:pubsub:audit:data_access" AND ((protoPayload.methodName="google.logging.v2.LoggingServiceV2.ListLogs") OR (data.protoPayload.methodName="google.logging.v2.LoggingServiceV2.ListLogs"))

# authentication
# Filtering the gsuite Authentication events based on serviceName
[gsuite_pubsub_audit_log_auth]
search = sourcetype="google:gsuite:pubsub:audit:auth"

# Identities
# Filtering the gsuite users events
[gsuite_admin_directory_users]
search = sourcetype="google:gcp:gsuite:admin:directory:users"

# Assets
# Filtering the Assets  events
[gcp_compute_instance]
search = sourcetype="google:gcp:compute:instance"

# network traffic
[gcp_vpcflow_network_traffic]
search = sourcetype="google:gcp:compute:vpc_flows"

# alerts
[google_gcp_security_alerts]
search = sourcetype="google:gcp:security:alerts"

###################################
###   GCP Audit Logs - Change   ###
###################################

# sourcetype="google:gcp:pubsub:audit:change" has all the change events.
# Only the below eventtypes are mapped to the Change DM currently.
# Details here: https://confluence.splunk.com/display/PROD/GCP%3A+Change+Datamodel+CIM+Mapping#GCP:ChangeDatamodelCIMMapping-Eventtypes

[gcp_pubsub_audit_log_change_disks]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("*.compute.disks.insert", "*.compute.disks.delete") OR data.protoPayload.methodName IN ("*.compute.disks.insert", "*.compute.disks.delete"))
# Disk

# For every firewall action, gcp seems to generate 2 event logs. One with all the required information and
# one with just the basic information. Filtering out the later (it doesn't have a 'response' element) since it is a duplicate
[gcp_pubsub_audit_log_change_firewall]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("*.compute.firewalls.insert", "*.compute.firewalls.patch", "*.compute.firewalls.delete") OR data.protoPayload.methodName IN ("*.compute.firewalls.insert", "*.compute.firewalls.patch", "*.compute.firewalls.delete"))
# Firewall

[gcp_pubsub_audit_log_change_user_settings]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" AND ((protoPayload.metadata.event{}.eventType="USER_SETTINGS") OR (data.protoPayload.metadata.event{}.eventType="USER_SETTINGS"))

[gcp_pubsub_audit_log_change_iam]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" AND ((protoPayload.methodName="SetIamPolicy") OR (data.protoPayload.methodName="SetIamPolicy") OR (protoPayload.methodName="google.iam.admin.v1.SetIAMPolicy") OR (data.protoPayload.methodName="google.iam.admin.v1.SetIAMPolicy"))
# IAM

[gcp_pubsub_audit_log_change_instances]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" AND ((protoPayload.methodName IN ("*.compute.instances.insert", "*.compute.instances.delete", "*.compute.instances.start", "*.compute.instances.stop", "*.compute.instances.reset", "v1.compute.instances.attachDisk", "v1.compute.instances.detachDisk")) OR (data.protoPayload.methodName IN ("*.compute.instances.insert", "*.compute.instances.delete", "*.compute.instances.start", "*.compute.instances.stop", "*.compute.instances.reset", "v1.compute.instances.attachDisk", "v1.compute.instances.detachDisk")))
# VM Instances

[gcp_pubsub_audit_log_change_subscriptions]
#TODO Generate delete subscription event
search = (sourcetype="google:gcp:pubsub:audit:system_event" OR sourcetype="google:gcp:pubsub:audit:admin_activity") (protoPayload.methodName IN ("google.pubsub.*.Subscriber.DeleteSubscription", "Subscriber.InternalExpireInactiveSubscription") OR data.protoPayload.methodName IN ("google.pubsub.*.Subscriber.DeleteSubscription", "Subscriber.InternalExpireInactiveSubscription"))

[gcp_pubsub_audit_log_change_publisher]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" AND ((protoPayload.methodName="google.pubsub.v1.Publisher.CreateTopic") OR (data.protoPayload.methodName="google.pubsub.v1.Publisher.CreateTopic"))

[gcp_pubsub_audit_log_change_roles]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("google.iam.admin.*.CreateRole", "google.iam.admin.*.UpdateRole", "google.iam.admin.*.DeleteRole", "google.iam.admin.*.UndeleteRole") OR data.protoPayload.methodName IN ("google.iam.admin.*.CreateRole", "google.iam.admin.*.UpdateRole", "google.iam.admin.*.DeleteRole", "google.iam.admin.*.UndeleteRole"))
# Roles

[gcp_pubsub_audit_log_change_service_accounts]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("google.iam.admin.*.CreateServiceAccount", "google.iam.admin.*.DeleteServiceAccount", "google.iam.admin.*.DisableServiceAccount", "google.iam.admin.*.EnableServiceAccount", "google.iam.admin.*.PatchServiceAccount", "google.iam.admin.*.CreateServiceAccountKey") OR data.protoPayload.methodName IN ("google.iam.admin.*.CreateServiceAccount", "google.iam.admin.*.DeleteServiceAccount", "google.iam.admin.*.DisableServiceAccount", "google.iam.admin.*.EnableServiceAccount", "google.iam.admin.*.PatchServiceAccount", "google.iam.admin.*.CreateServiceAccountKey"))
# Service Accounts

[gcp_pubsub_audit_log_change_storage]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("storage.buckets.create", "storage.buckets.update", "storage.buckets.delete", "storage.objects.update") OR data.protoPayload.methodName IN ("storage.buckets.create", "storage.buckets.update", "storage.buckets.delete", "storage.objects.update"))
# Cloud Storage Buckets
[gcp_pubsub_audit_log_change_storage_iam]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("storage.setIamPermissions", "storage.buckets.setIamPolicy") OR protoPayload.methodName IN ("storage.setIamPermissions", "storage.buckets.setIamPolicy"))

[gcp_pubsub_audit_log_change_login_service]
search = sourcetype="google:gcp:pubsub:audit:admin_activity" (protoPayload.methodName IN ("google.login.LoginService.logout") OR data.protoPayload.methodName IN ("google.login.LoginService.logout"))

[google_gcp_buckets_accesslogs]
search = sourcetype="google:gcp:buckets:accesslogs"
#web
#storage

### Groups all Pub/Sub-based data sources together For backward compatibility
[google:gcp:pubsub:message]
search = (sourcetype=google:gcp:pubsub:audit:* OR sourcetype=google:gcp:pubsub:access_transparency OR sourcetype=google:gcp:pubsub:platform OR sourcetype=google:gcp:pubsub:message)
