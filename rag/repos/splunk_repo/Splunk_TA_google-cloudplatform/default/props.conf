##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_monitoring*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:monitoring:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_pubsub_lite*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:pubsublite:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_pubsub_based_bucket*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:pubsubbasedbucket:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_pubsub*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:pubsub:log

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_billing*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:billing:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_bucket_metadata*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:buckets:log

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_resource_metadata*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:resource_metadata:log
priority = 1

[source::...(/|\\)var(/|\\)log(/|\\)splunk(/|\\)*google_cloud_resthandler*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
sourcetype = google:gcp:resthandler:log
priority = 1


###########################################
###               Billing               ###
###########################################

[google:billing:json]

MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_PREFIX = "startTime":
FIELDALIAS-project_name = "projectName" as project_name
FIELDALIAS-line_item_id = "lineItemId" as line_item_id
FIELDALIAS-cost_amount = "cost.amount" as cost_amount

[google:billing:csv]

MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_PREFIX = "Start Time":
FIELDALIAS-project_name = "Project Name" as project_name
FIELDALIAS-line_item_id = "Line Item" as line_item_id
FIELDALIAS-cost_amount = "Cost" as cost_amount

[google:gcp:billing:report]

TIME_PREFIX = \"usage_start_time\":\s+
MAX_TIMESTAMP_LOOKAHEAD = 26

FIELDALIAS-project_name_json = "projectName" as project_name
FIELDALIAS-line_item_id_json = "lineItemId" as line_item_id
FIELDALIAS-cost_amount_json = "cost.amount" as cost_amount

FIELDALIAS-project_name_csv = "Project Name" as project_name
FIELDALIAS-line_item_id_csv = "Line Item" as line_item_id
FIELDALIAS-cost_amount_csv = "Cost" as cost_amount

###########################################
###               Pub/Sub               ###
###########################################

# Data Manager GCP
[source::gcp_cloud_logging...]
## Extraction ##
################
REPORT-extract_project_id=gcp_pubsub-extract_project_id
REPORT-extract_folder_id=gcp_pubsub-extract_folder_id
REPORT-extract_organization_id=gcp_pubsub-extract_organization_id
REPORT-extract_dm_input_id=gcp_pubsub-extract_data_manager_id

[google:gcp:pubsublite:message]
TRUNCATE = 9999999

[google:gcp:pubsub:message]
KV_MODE = json
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)\{
TRUNCATE = 999999
TIME_PREFIX = \"timestamp\"\s*\:\s*\"
MAX_TIMESTAMP_LOOKAHEAD = 30
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N%z

TRANSFORMS-sourcetype_gcp_pubsub_activity_sourcetype=gcp_pubsub_activity_sourcetype
TRANSFORMS-sourcetype_gcp_pubsub_system_event_sourcetype=gcp_pubsub_system_event_sourcetype
TRANSFORMS-sourcetype_gcp_pubsub_policy_sourcetype=gcp_pubsub_policy_sourcetype
TRANSFORMS-sourcetype_gcp_pubsub_data_access_sourcetype=gcp_pubsub_data_access_sourcetype
TRANSFORMS-sourcetype_gcp_pubsub_access_transparency_sourcetype=gcp_pubsub_access_transparency_sourcetype
TRANSFORMS-sourcetype_gcp_pubsub_platform_sourcetype=gcp_pubsub_platform_sourcetype


#TRANSFORMS-sourcetype_gcp_pubsub-audit_log_auth=gcp_pubsub-audit_log_auth
TRANSFORMS-sourcetype_gsuite_pubsub-audit_log_auth=gsuite_pubsub-audit_log_auth
TRANSFORMS-sourcetype_gsuite_pubsub-admin_directory_user=gsuite_pubsub-admin_directory_user
TRANSFORMS-gcp_pubsub-audit_log_change=gcp_pubsub-audit_log_change

# Change CIM
[google:gcp:pubsub:audit:admin_activity]
KV_MODE = json
TRUNCATE = 30000
## Extraction ##
################
REPORT-splunk_ta_gcp_audit_cim_change_updated_user = gcp_change_updated_user1, gcp_change_updated_user2
REPORT-splunk_ta_gcp_audit_cim_change_updated_value = gcp_change_updated_value1, gcp_change_updated_value2

## Aliases ##
#############
# updated_user extracted in REPORT-gcp_change_updated_user
FIELDALIAS-splunk_ta_gcp_audit_cim_change_dest_user=updated_user as dest_user


## Eval ##
##########
EVAL-command=coalesce('protoPayload.methodName','data.protoPayload.methodName')

EVAL-dvc=case('protoPayload.methodName'="SetIamPolicy", "iam.googleapis.com", \
              'data.protoPayload.methodName'="SetIamPolicy", "iam.googleapis.com", \
              true(), coalesce('protoPayload.serviceName', 'data.protoPayload.serviceName'))

EVAL-dest=case( \
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.request.resource', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.request.resource', \
    'protoPayload.methodName' in ("google.admin.AdminService.changeUserAddress", "google.iam.admin.v1.CreateServiceAccount"), mvindex(split('protoPayload.resourceName', "/"), 1), \
    'data.protoPayload.methodName' in ("google.admin.AdminService.changeUserAddress", "google.iam.admin.v1.CreateServiceAccount"), mvindex(split('data.protoPayload.resourceName', "/"), 1), \
    match('protoPayload.methodName', "^google\.iam\.admin\.v\d+\.(CreateServiceAccountKey|DeleteServiceAccount|PatchServiceAccount|DisableServiceAccount|SetIAMPolicy)$"), 'resource.labels.project_id', \
    match('data.protoPayload.methodName', "^google\.iam\.admin\.v\d+\.(CreateServiceAccountKey|DeleteServiceAccount|PatchServiceAccount|DisableServiceAccount|SetIAMPolicy)$"), 'data.resource.labels.project_id', \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(insert)"), if(severity="ERROR", mvindex(split('protoPayload.resourceName',"/"), -1), 'resource.labels.project_id'), \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(insert)"), if('data.severity'="ERROR", mvindex(split('data.protoPayload.resourceName',"/"), -1), 'data.resource.labels.project_id'), \
    match('protoPayload.methodName', "(v\d+)\.compute\.instances\.(start|reset|delete|attachDisk|detachDisk)"), mvindex(split('protoPayload.resourceName',"/"), -1), \
    match('data.protoPayload.methodName', "(v\d+)\.compute\.instances\.(start|reset|delete|attachDisk|detachDisk)"), mvindex(split('data.protoPayload.resourceName',"/"), -1), \
    true(), coalesce('resource.labels.project_id', 'data.resource.labels.project_id', mvindex(split('protoPayload.resourceName', "/"), 1), mvindex(split('data.protoPayload.resourceName', "/"), 1)) \
)

EVAL-object=case( \
    'protoPayload.methodName'="google.login.LoginService.logout", 'protoPayload.authenticationInfo.principalEmail',\
    'data.protoPayload.methodName'="google.login.LoginService.logout", 'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="storage.objects.update", 'resource.labels.bucket_name',\
    'data.protoPayload.methodName'="storage.objects.update", 'data.resource.labels.bucket_name',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService.%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService.%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    like('protoPayload.methodName',"google.iam.admin.v%") AND isnotnull('resource.labels.email_id'),'resource.labels.email_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v%") AND isnotnull('data.resource.labels.email_id'), 'data.resource.labels.email_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), -1),\
    isnotnull('data.protoPayload.resourceName'), mvindex(split('data.protoPayload.resourceName', "/"), -1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), -1) \
)

EVAL-object_id=case( \
    like('protoPayload.methodName',"google.iam.admin.%.CreateServiceAccount"), if(isnotnull('protoPayload.request.service_account.description'), 'resource.labels.unique_id', 'protoPayload.resourceName'),\
    like('data.protoPayload.methodName',"google.iam.admin.%.CreateServiceAccount"), if(isnotnull('data.protoPayload.request.service_account.description'), 'data.resource.labels.unique_id', 'data.protoPayload.resourceName'),\
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount|PatchServiceAccount)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount|PatchServiceAccount)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateServiceAccountKey)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateServiceAccountKey)"), 'data.protoPayload.resourceName',\
    like('protoPayload.methodName',"google.pubsub.%.Subscriber.DeleteSubscription"), 'protoPayload.resourceName',\
    like('data.protoPayload.methodName',"google.pubsub.%.Subscriber.DeleteSubscription"), 'data.protoPayload.resourceName',\
    like('protoPayload.methodName',"google.pubsub.%.Publisher.CreateTopic"), 'protoPayload.resourceName', \
    like('data.protoPayload.methodName',"google.pubsub.%.Publisher.CreateTopic"), 'data.protoPayload.resourceName', \
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(UndeleteRole|CreateRole|DeleteRole|UpdateRole)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(UndeleteRole|CreateRole|DeleteRole|UpdateRole)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"storage\.buckets\.(create|delete|update)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"storage\.buckets\.(create|delete|update)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"storage\.objects\.(update)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"storage\.objects\.(update)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), if(severity IN ("ERROR"), 'protoPayload.resourceName', 'resource.labels.instance_id'), \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), if('data.severity' IN ("ERROR"), 'data.protoPayload.resourceName', 'data.resource.labels.instance_id'), \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'resource.labels.disk_id', \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'data.resource.labels.disk_id', \
    'protoPayload.methodName'="Subscriber.InternalExpireInactiveSubscription", 'protoPayload.resourceName',\
    'data.protoPayload.methodName'="Subscriber.InternalExpireInactiveSubscription", 'data.protoPayload.resourceName',\
    'protoPayload.methodName'="storage.setIamPermissions", 'protoPayload.resourceName',\
    'data.protoPayload.methodName'="storage.setIamPermissions", 'data.protoPayload.resourceName',\
    'protoPayload.methodName'="SetIamPolicy", coalesce('resource.labels.unique_id', 'protoPayload.resourceName'),\
    'data.protoPayload.methodName'="SetIamPolicy", coalesce('data.resource.labels.unique_id', 'data.protoPayload.resourceName'),\
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    like('protoPayload.methodName',"google.admin.AdminService.%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService.%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    isnotnull('data.resource.labels.disk_id'),'data.resource.labels.disk_id',\
    like('protoPayload.methodName',"google.iam.admin.v1%") AND isnotnull('resource.labels.unique_id'),'resource.labels.unique_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v1%") AND isnotnull('data.resource.labels.unique_id'), 'data.resource.labels.unique_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), -1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), -1) \
)


EVAL-object_path=case( \
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount)"), mvjoin(mvindex(split('protoPayload.request.name', "/"), 0, 2), "/")+"/" , \
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount)"), mvjoin(mvindex(split('data.protoPayload.request.name', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), mvjoin(mvindex(split('protoPayload.request.resource', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), mvjoin(mvindex(split('data.protoPayload.request.resource', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.admin\.AdminService\.(changePassword|removeRecoveryPhone)"), 'protoPayload.resourceName', \
    match('data.protoPayload.methodName',"google\.admin\.AdminService\.(changePassword|removeRecoveryPhone)"), 'data.protoPayload.resourceName', \
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"Subscriber\.InternalExpireInactiveSubscription"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"Subscriber\.InternalExpireInactiveSubscription"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "storage\.buckets\.(create|delete|update)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.buckets\.(create|delete|update)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "storage\.objects\.(update)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.objects\.(update)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "storage\.(setIamPermissions)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.(setIamPermissions)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 3), "/")+"/" , \
    match('data.protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 3), "/")+"/" , \
    like('protoPayload.methodName',"google.iam.admin.%"), mvjoin(mvindex(split('protoPayload.response.name', "/"), 0, 2), "/")+"/" , \
    like('data.protoPayload.methodName',"google.iam.admin.%"), mvjoin(mvindex(split('data.protoPayload.response.name', "/"), 0, 2), "/")+"/" \
)

EVAL-result=case( \
    'severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), 'protoPayload.methodName', \
    'severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), coalesce('protoPayload.response.error.errors{}.reason', 'protoPayload.response.error.message', 'protoPayload.status.message'), \
    'data.severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), 'data.protoPayload.methodName', \
    'data.severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), coalesce('data.protoPayload.response.error.errors{}.reason', 'data.protoPayload.response.error.message', 'data.protoPayload.status.message') \
)

EVAL-result_id=coalesce( \
    'protoPayload.response.error.code',\
    'data.protoPayload.response.error.code',\
    'protoPayload.status.code',\
    'data.protoPayload.status.code' \
)

EVAL-src=coalesce('protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-src_ip=coalesce('protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-user_agent=coalesce('protoPayload.requestMetadata.callerSuppliedUserAgent','data.protoPayload.requestMetadata.callerSuppliedUserAgent')

EVAL-user_id=case( \
    match('resource.type',"service_account"),'resource.labels.unique_id',\
    match('data.resource.type',"service_account"),'data.resource.labels.unique_id',\
    isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail',\
    isnotnull('data.protoPayload.authenticationInfo.principalEmail'),'data.protoPayload.authenticationInfo.principalEmail' \
)

EVAL-user_type=case( \
    coalesce('protoPayload.methodName', 'data.protoPayload.methodName')="SetIamPolicy", "service_account", \
    match('resource.type',"pubsub_subscription"),"service_account",match('data.resource.type',"pubsub_subscription"),"service_account",\
    match('resource.type',"service_account"),"service_account",match('data.resource.type',"service_account"),"service_account" \
)

# mapping 'command' field values to prescribed 'action' field values
EVAL-action=case( \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.buckets.setIamPolicy","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.setIamPermissions","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="beta.compute.firewalls.insert","modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "setiampermissions") AND match('resource.type',"service_account"), "modified", \
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "setiampermissions"),"acl_modified",\
    like(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "%.createserviceaccountkey"),"modified",\
    like(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "%.disableserviceaccount"),"modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(create|insert|undelete)"),"created",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="Subscriber.InternalExpireInactiveSubscription","deleted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "delete"),"deleted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "reset"),"restarted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(start|enable)"),"started",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(stop|disable)"),"stopped",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(update|patch|attachdisk|detachdisk|set|change|remove|add)"), "modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "list"),"logs_read",\
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'), "google.login.LoginService.logout"),"logoff",\
    true(), "unknown" \
)

# extract change_type depending on the event
EVAL-change_type=case( \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Publisher\.CreateTopic"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"Subscriber\.InternalExpireInactiveSubscription"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "Virtual Server", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "Virtual Server", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "firewall", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage.%"), "storage", \
    true(), "AAA" \
)

# updated_value extracted in REPORT-gcp_change_updated_value
EVAL-object_attrs = case( \
    coalesce('protoPayload.methodName', 'data.protoPayload.methodName')="SetIamPolicy", "policy", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google.iam.admin.%.CreateServiceAccountKey"), "ServiceAccountKey", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.changePassword", "password", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.removeRecoveryPhone", "RECOVERY_PHONE", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.addRecoveryEmail", "RECOVERY_EMAIL", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.changeUserAddress", "USER_ADDRESS", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="login.googleapis.com", "login session",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.login.LoginService.logout", "login session",\
    true(), coalesce('resource.type', 'data.resource.type', "project") \
)

EVAL-object_category=case( \
    'protoPayload.methodName' in ("google.pubsub.v1.Publisher.CreateTopic", "Subscriber.InternalExpireInactiveSubscription"), 'resource.type', \
    'data.protoPayload.methodName' in ("google.pubsub.v1.Publisher.CreateTopic", "Subscriber.InternalExpireInactiveSubscription"), 'data.resource.type', \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.setIamPermissions", "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage\.objects\.(update)"), "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage\.buckets\.(create|delete|update)"), "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.iam\.admin\.v\d+\.(UndeleteRole|DeleteRole|CreateRole|UpdateRole)"), "role", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "firewall", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "disk", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "instance", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), "pubsub_subscription", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.iam\.admin\.v\d+\.CreateServiceAccountKey"), "user", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="SetIamPolicy", "user", \
    coalesce('resource.type', 'data.resource.type')="service_account", "user",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.login.LoginService.logout", "user",\
    coalesce('protoPayload.metadata.event{}.eventType', 'data.protoPayload.metadata.event{}.eventType')="USER_SETTINGS","user" \
)

#For iam_user events, resource.type doesn't have object_category information
EVAL-resource_type=case(match('protoPayload.metadata.event{}.eventType',"USER_SETTINGS"),"iam_user", \
                        match('data.protoPayload.metadata.event{}.eventType',"USER_SETTINGS"),"iam_user", \
                        true(), coalesce('resource.type', 'data.resource.type'))

# src_user only applicable to iam_user events where a user performs action on another user
EVAL-src_user=case( \
    ('protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'protoPayload.authenticationInfo.principalEmail',\
    ('data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'data.protoPayload.authenticationInfo.principalEmail', \
    match('resource.type',"service_account"),'protoPayload.authenticationInfo.principalEmail',\
    match('data.resource.type',"service_account"),'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), "No src_user" )

EVAL-src_user_name=case( \
    ('protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'protoPayload.authenticationInfo.principalEmail',\
    ('data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'data.protoPayload.authenticationInfo.principalEmail', \
    match('resource.type',"service_account"),'protoPayload.authenticationInfo.principalEmail',\
    match('data.resource.type',"service_account"),'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), "No src_user_name" \
)

# Change CIM will update 'status' field with value 'unknown', if its not either 'success' or 'failure'
EVAL-status=case( \
    coalesce('data.severity', 'severity') IN ("DEBUG","INFO","NOTICE","WARNING"), "success",\
    coalesce('data.severity', 'severity') IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), "failure" \
)

# iam_user events have user and src_user

EVAL-user=case( \
    'protoPayload.metadata.event{}.eventType'="USER_SETTINGS", updated_user,\
    'data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS", updated_user,\
    'protoPayload.methodName'="storage.setIamPermissions",'protoPayload.authenticationInfo.principalEmail',\
    'data.protoPayload.methodName'="storage.setIamPermissions",'data.protoPayload.authenticationInfo.principalEmail',\
    match(lower('protoPayload.methodName'), "(createserviceaccount|deleteserviceaccount|patchserviceaccount|disableserviceaccount)"), 'resource.labels.email_id',\
    match(lower('data.protoPayload.methodName'), "(createserviceaccount|deleteserviceaccount|patchserviceaccount|disableserviceaccount)"), 'data.resource.labels.email_id',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail',\
    isnotnull('data.protoPayload.authenticationInfo.principalEmail'),'data.protoPayload.authenticationInfo.principalEmail',\
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService%"),'protoPayload.metadata.event{}.parameter{}.value',\
    like('data.protoPayload.methodName',"google.admin.AdminService%"),'data.protoPayload.metadata.event{}.parameter{}.value',\
    like('protoPayload.methodName',"google.iam.admin.v%"),'resource.labels.email_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v%"),'data.resource.labels.email_id',\
    true(), 'data.resource.labels.email_id' \
)

EVAL-user_name=case( \
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateRole|UndeleteRole|DeleteRole|UpdateRole)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateRole|UndeleteRole|DeleteRole|UpdateRole)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.(DisableServiceAccount)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DisableServiceAccount)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"storage\.buckets\.(create|delete|update|setIamPolicy)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"storage\.buckets\.(create|delete|update|setIamPolicy)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"storage\.objects\.(update)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"storage\.objects\.(update)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "storage\.(setIamPermissions)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "storage\.(setIamPermissions)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    true(), coalesce('protoPayload.response.display_name','data.protoPayload.response.display_name', 'protoPayload.response.displayName', 'data.protoPayload.response.displayName', 'resource.labels.email_id', 'data.resource.labels.email_id') \
)

EVAL-vendor_account=case( \
    isnotnull('resource.labels.project_id'),'resource.labels.project_id',\
    isnotnull('data.resource.labels.project_id'),'data.resource.labels.project_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), 1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), 1) \
)

EVAL-vendor_product=case( \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "GCP Compute Engine", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'), "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "GCP Compute Engine", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "GCP Firewall", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"pubsub"), "GCP Cloud Pub/Sub", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage.%"), "GCP Cloud Storage", \
    true(), "GCP Identity Access Management" )

EVAL-vendor_region=case(isnotnull('resource.labels.zone'),'resource.labels.zone',\
                        isnotnull('data.resource.labels.zone'),'data.resource.labels.zone',\
                        isnotnull('resource.labels.location'),'resource.labels.location',\
                        isnotnull('data.resource.labels.location'),'data.resource.labels.location')

## Change_Instance mappings begin ##
EVAL-image_id=case(match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'resource.labels.instance_id', \
                   match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'data.resource.labels.instance_id', \
                   true(), coalesce('resource.labels.disk_id', 'data.resource.labels.disk_id'))

EVAL-instance_type = case(isnotnull('resource.type'),'resource.type',isnotnull('data.resource.type'),'data.resource.type')

## Network ACLs mappings begin ##

# For insert event, information comes in the 'request' element. For Delete event, information comes in
# 'resourceOriginalState' element. For patch event, information can come in either or both of those 2
# elements, but 'request' has the latest update and hence it should take precedence

# GCP firewall rules use port information to reference the destination port. So, no 'src_port_range'
# available. If port is not specified, the rule applies to all ports
EVAL-dest_port_range=coalesce('protoPayload.request.alloweds{}.ports{}',\
                              'protoPayload.request.denieds{}.ports{}',\
                              'protoPayload.resourceOriginalState.alloweds{}.ports{}',\
                              'protoPayload.resourceOriginalState.denieds{}.ports{}',\
                              'data.protoPayload.request.alloweds{}.ports{}',\
                              'data.protoPayload.request.denieds{}.ports{}',\
                              'data.protoPayload.resourceOriginalState.alloweds{}.ports{}',\
                              'data.protoPayload.resourceOriginalState.denieds{}.ports{}',\
                              "all")

EVAL-dest_ip_range=coalesce('protoPayload.request.destinationRanges{}',\
                            'protoPayload.resourceOriginalState.destinationRanges{}',\
                            'data.protoPayload.request.destinationRanges{}',\
                            'data.protoPayload.resourceOriginalState.destinationRanges{}',"Not outbound")

EVAL-direction=case('protoPayload.request.direction'="INGRESS", "inbound",\
                    'protoPayload.resourceOriginalState.direction'="INGRESS", "inbound",\
                    'data.protoPayload.request.direction'="INGRESS", "inbound",\
                    'data.protoPayload.resourceOriginalState.direction'="INGRESS", "inbound",\
                    true(),"outbound")

EVAL-network=coalesce('protoPayload.request.network',\
                      'protoPayload.resourceOriginalState.network',\
                      'data.protoPayload.request.network',\
                      'data.protoPayload.resourceOriginalState.network')

EVAL-protocol=coalesce('protoPayload.request.alloweds{}.IPProtocol',\
                       'protoPayload.request.denieds{}.IPProtocol',\
                       'protoPayload.resourceOriginalState.alloweds{}.IPProtocol',\
                       'protoPayload.resourceOriginalState.denieds{}.IPProtocol',\
                       'data.protoPayload.request.alloweds{}.IPProtocol',\
                       'data.protoPayload.request.denieds{}.IPProtocol',\
                       'data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol',\
                       'data.protoPayload.resourceOriginalState.denieds{}.IPProtocol')

# A rule can either be an 'Allow' or a 'Deny' rule. If 'Allow', then 'alloweds' element will be
# present in the event. If 'Deny', then 'denieds' element will be present in the event
EVAL-rule_action=case(isnotnull('protoPayload.request.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('protoPayload.request.denieds{}.IPProtocol'), "deny",\
                      isnotnull('protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny",\
                      isnotnull('data.protoPayload.request.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('data.protoPayload.request.denieds{}.IPProtocol'), "deny",\
                      isnotnull('data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('data.protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny")

EVAL-src_ip_range=coalesce('protoPayload.request.sourceRanges{}','protoPayload.resourceOriginalState.sourceRanges{}','data.protoPayload.request.sourceRanges{}',\
                           'data.protoPayload.resourceOriginalState.sourceRanges{}')
## Network ACLs mappings end ##

#Change DM
[google:gcp:pubsub:audit:system_event]
KV_MODE = json
TRUNCATE = 30000
## Extraction ##
################
REPORT-splunk_ta_gcp_audit_cim_change_updated_user = gcp_change_updated_user1, gcp_change_updated_user2
REPORT-splunk_ta_gcp_audit_cim_change_updated_value = gcp_change_updated_value1, gcp_change_updated_value2

## Aliases ##
#############
# updated_user extracted in REPORT-gcp_change_updated_user
FIELDALIAS-splunk_ta_gcp_audit_cim_change_dest_user=updated_user as dest_user


## Eval ##
##########
EVAL-command=coalesce('protoPayload.methodName','data.protoPayload.methodName')

EVAL-dvc=case('protoPayload.methodName'="SetIamPolicy", "iam.googleapis.com", \
              'data.protoPayload.methodName'="SetIamPolicy", "iam.googleapis.com", \
              true(), coalesce('protoPayload.serviceName', 'data.protoPayload.serviceName'))

EVAL-dest=case( \
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.request.resource', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.request.resource', \
    'protoPayload.methodName' in ("google.admin.AdminService.changeUserAddress", "google.iam.admin.v1.CreateServiceAccount"), mvindex(split('protoPayload.resourceName', "/"), 1), \
    'data.protoPayload.methodName' in ("google.admin.AdminService.changeUserAddress", "google.iam.admin.v1.CreateServiceAccount"), mvindex(split('data.protoPayload.resourceName', "/"), 1), \
    match('protoPayload.methodName', "^google\.iam\.admin\.v\d+\.(CreateServiceAccountKey|DeleteServiceAccount|PatchServiceAccount|DisableServiceAccount|SetIAMPolicy)$"), 'resource.labels.project_id', \
    match('data.protoPayload.methodName', "^google\.iam\.admin\.v\d+\.(CreateServiceAccountKey|DeleteServiceAccount|PatchServiceAccount|DisableServiceAccount|SetIAMPolicy)$"), 'data.resource.labels.project_id', \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(insert)"), if(severity="ERROR", mvindex(split('protoPayload.resourceName',"/"), -1), 'resource.labels.project_id'), \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(insert)"), if('data.severity'="ERROR", mvindex(split('data.protoPayload.resourceName',"/"), -1), 'data.resource.labels.project_id'), \
    match('protoPayload.methodName', "(v\d+)\.compute\.instances\.(start|reset|delete|attachDisk|detachDisk)"), mvindex(split('protoPayload.resourceName',"/"), -1), \
    match('data.protoPayload.methodName', "(v\d+)\.compute\.instances\.(start|reset|delete|attachDisk|detachDisk)"), mvindex(split('data.protoPayload.resourceName',"/"), -1), \
    true(), coalesce('resource.labels.project_id', 'data.resource.labels.project_id', mvindex(split('protoPayload.resourceName', "/"), 1), mvindex(split('data.protoPayload.resourceName', "/"), 1)) \
)

EVAL-object=case( \
    'protoPayload.methodName'="google.login.LoginService.logout", 'protoPayload.authenticationInfo.principalEmail',\
    'data.protoPayload.methodName'="google.login.LoginService.logout", 'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="storage.objects.update", 'resource.labels.bucket_name',\
    'data.protoPayload.methodName'="storage.objects.update", 'data.resource.labels.bucket_name',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService.%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService.%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    like('protoPayload.methodName',"google.iam.admin.v%") AND isnotnull('resource.labels.email_id'),'resource.labels.email_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v%") AND isnotnull('data.resource.labels.email_id'), 'data.resource.labels.email_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), -1),\
    isnotnull('data.protoPayload.resourceName'), mvindex(split('data.protoPayload.resourceName', "/"), -1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), -1) \
)

EVAL-object_id=case( \
    like('protoPayload.methodName',"google.iam.admin.%.CreateServiceAccount"), if(isnotnull('protoPayload.request.service_account.description'), 'resource.labels.unique_id', 'protoPayload.resourceName'),\
    like('data.protoPayload.methodName',"google.iam.admin.%.CreateServiceAccount"), if(isnotnull('data.protoPayload.request.service_account.description'), 'data.resource.labels.unique_id', 'data.protoPayload.resourceName'),\
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount|PatchServiceAccount)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount|PatchServiceAccount)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateServiceAccountKey)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateServiceAccountKey)"), 'data.protoPayload.resourceName',\
    like('protoPayload.methodName',"google.pubsub.%.Subscriber.DeleteSubscription"), 'protoPayload.resourceName',\
    like('data.protoPayload.methodName',"google.pubsub.%.Subscriber.DeleteSubscription"), 'data.protoPayload.resourceName',\
    like('protoPayload.methodName',"google.pubsub.%.Publisher.CreateTopic"), 'protoPayload.resourceName', \
    like('data.protoPayload.methodName',"google.pubsub.%.Publisher.CreateTopic"), 'data.protoPayload.resourceName', \
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(UndeleteRole|CreateRole|DeleteRole|UpdateRole)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(UndeleteRole|CreateRole|DeleteRole|UpdateRole)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"storage\.buckets\.(create|delete|update)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"storage\.buckets\.(create|delete|update)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"storage\.objects\.(update)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"storage\.objects\.(update)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), if(severity IN ("ERROR"), 'protoPayload.resourceName', 'resource.labels.instance_id'), \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), if('data.severity' IN ("ERROR"), 'data.protoPayload.resourceName', 'data.resource.labels.instance_id'), \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'resource.labels.disk_id', \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'data.resource.labels.disk_id', \
    'protoPayload.methodName'="Subscriber.InternalExpireInactiveSubscription", 'protoPayload.resourceName',\
    'data.protoPayload.methodName'="Subscriber.InternalExpireInactiveSubscription", 'data.protoPayload.resourceName',\
    'protoPayload.methodName'="storage.setIamPermissions", 'protoPayload.resourceName',\
    'data.protoPayload.methodName'="storage.setIamPermissions", 'data.protoPayload.resourceName',\
    'protoPayload.methodName'="SetIamPolicy", coalesce('resource.labels.unique_id', 'protoPayload.resourceName'),\
    'data.protoPayload.methodName'="SetIamPolicy", coalesce('data.resource.labels.unique_id', 'data.protoPayload.resourceName'),\
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    like('protoPayload.methodName',"google.admin.AdminService.%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService.%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    isnotnull('data.resource.labels.disk_id'),'data.resource.labels.disk_id',\
    like('protoPayload.methodName',"google.iam.admin.v1%") AND isnotnull('resource.labels.unique_id'),'resource.labels.unique_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v1%") AND isnotnull('data.resource.labels.unique_id'), 'data.resource.labels.unique_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), -1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), -1) \
)


EVAL-object_path=case( \
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount)"), mvjoin(mvindex(split('protoPayload.request.name', "/"), 0, 2), "/")+"/" , \
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount)"), mvjoin(mvindex(split('data.protoPayload.request.name', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), mvjoin(mvindex(split('protoPayload.request.resource', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), mvjoin(mvindex(split('data.protoPayload.request.resource', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.admin\.AdminService\.(changePassword|removeRecoveryPhone)"), 'protoPayload.resourceName', \
    match('data.protoPayload.methodName',"google\.admin\.AdminService\.(changePassword|removeRecoveryPhone)"), 'data.protoPayload.resourceName', \
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"Subscriber\.InternalExpireInactiveSubscription"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"Subscriber\.InternalExpireInactiveSubscription"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "storage\.buckets\.(create|delete|update)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.buckets\.(create|delete|update)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "storage\.objects\.(update)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.objects\.(update)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "storage\.(setIamPermissions)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.(setIamPermissions)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 3), "/")+"/" , \
    match('data.protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 3), "/")+"/" , \
    like('protoPayload.methodName',"google.iam.admin.%"), mvjoin(mvindex(split('protoPayload.response.name', "/"), 0, 2), "/")+"/" , \
    like('data.protoPayload.methodName',"google.iam.admin.%"), mvjoin(mvindex(split('data.protoPayload.response.name', "/"), 0, 2), "/")+"/" \
)

EVAL-result=case( \
    'severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), 'protoPayload.methodName', \
    'severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), coalesce('protoPayload.response.error.errors{}.reason', 'protoPayload.response.error.message', 'protoPayload.status.message'), \
    'data.severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), 'data.protoPayload.methodName', \
    'data.severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), coalesce('data.protoPayload.response.error.errors{}.reason', 'data.protoPayload.response.error.message', 'data.protoPayload.status.message') \
)

EVAL-result_id=coalesce( \
    'protoPayload.response.error.code',\
    'data.protoPayload.response.error.code',\
    'protoPayload.status.code',\
    'data.protoPayload.status.code' \
)

EVAL-src=coalesce('protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-src_ip=coalesce('protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-user_agent=coalesce('protoPayload.requestMetadata.callerSuppliedUserAgent','data.protoPayload.requestMetadata.callerSuppliedUserAgent')

EVAL-user_id=case( \
    match('resource.type',"service_account"),'resource.labels.unique_id',\
    match('data.resource.type',"service_account"),'data.resource.labels.unique_id',\
    isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail',\
    isnotnull('data.protoPayload.authenticationInfo.principalEmail'),'data.protoPayload.authenticationInfo.principalEmail' \
)

EVAL-user_type=case( \
    coalesce('protoPayload.methodName', 'data.protoPayload.methodName')="SetIamPolicy", "service_account", \
    match('resource.type',"pubsub_subscription"),"service_account",match('data.resource.type',"pubsub_subscription"),"service_account",\
    match('resource.type',"service_account"),"service_account",match('data.resource.type',"service_account"),"service_account" \
)

# mapping 'command' field values to prescribed 'action' field values
EVAL-action=case( \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.buckets.setIamPolicy","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.setIamPermissions","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="beta.compute.firewalls.insert","modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "setiampermissions") AND match('resource.type',"service_account"), "modified", \
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "setiampermissions"),"acl_modified",\
    like(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "%.createserviceaccountkey"),"modified",\
    like(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "%.disableserviceaccount"),"modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(create|insert|undelete)"),"created",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="Subscriber.InternalExpireInactiveSubscription","deleted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "delete"),"deleted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "reset"),"restarted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(start|enable)"),"started",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(stop|disable)"),"stopped",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(update|patch|attachdisk|detachdisk|set|change|remove|add)"), "modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "list"),"logs_read",\
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'), "google.login.LoginService.logout"),"logoff",\
    true(), "unknown" \
)

# extract change_type depending on the event
EVAL-change_type=case( \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Publisher\.CreateTopic"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"Subscriber\.InternalExpireInactiveSubscription"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "Virtual Server", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "Virtual Server", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "firewall", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage.%"), "storage", \
    true(), "AAA" \
)

# updated_value extracted in REPORT-gcp_change_updated_value
EVAL-object_attrs = case( \
    coalesce('protoPayload.methodName', 'data.protoPayload.methodName')="SetIamPolicy", "policy", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google.iam.admin.%.CreateServiceAccountKey"), "ServiceAccountKey", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.changePassword", "password", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.removeRecoveryPhone", "RECOVERY_PHONE", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.addRecoveryEmail", "RECOVERY_EMAIL", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.changeUserAddress", "USER_ADDRESS", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="login.googleapis.com", "login session",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.login.LoginService.logout", "login session",\
    true(), coalesce('resource.type', 'data.resource.type', "project") \
)

EVAL-object_category=case( \
    'protoPayload.methodName' in ("google.pubsub.v1.Publisher.CreateTopic", "Subscriber.InternalExpireInactiveSubscription"), 'resource.type', \
    'data.protoPayload.methodName' in ("google.pubsub.v1.Publisher.CreateTopic", "Subscriber.InternalExpireInactiveSubscription"), 'data.resource.type', \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.setIamPermissions", "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage\.objects\.(update)"), "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage\.buckets\.(create|delete|update)"), "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.iam\.admin\.v\d+\.(UndeleteRole|DeleteRole|CreateRole|UpdateRole)"), "role", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "firewall", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "disk", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "instance", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), "pubsub_subscription", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.iam\.admin\.v\d+\.CreateServiceAccountKey"), "user", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="SetIamPolicy", "user", \
    coalesce('resource.type', 'data.resource.type')="service_account", "user",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.login.LoginService.logout", "user",\
    coalesce('protoPayload.metadata.event{}.eventType', 'data.protoPayload.metadata.event{}.eventType')="USER_SETTINGS","user" \
)

#For iam_user events, resource.type doesn't have object_category information
EVAL-resource_type=case(match('protoPayload.metadata.event{}.eventType',"USER_SETTINGS"),"iam_user", \
                        match('data.protoPayload.metadata.event{}.eventType',"USER_SETTINGS"),"iam_user", \
                        true(), coalesce('resource.type', 'data.resource.type'))

# src_user only applicable to iam_user events where a user performs action on another user
EVAL-src_user=case( \
    ('protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'protoPayload.authenticationInfo.principalEmail',\
    ('data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'data.protoPayload.authenticationInfo.principalEmail', \
    match('resource.type',"service_account"),'protoPayload.authenticationInfo.principalEmail',\
    match('data.resource.type',"service_account"),'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), "No src_user" )

EVAL-src_user_name=case( \
    ('protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'protoPayload.authenticationInfo.principalEmail',\
    ('data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'data.protoPayload.authenticationInfo.principalEmail', \
    match('resource.type',"service_account"),'protoPayload.authenticationInfo.principalEmail',\
    match('data.resource.type',"service_account"),'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), "No src_user_name" \
)

# Change CIM will update 'status' field with value 'unknown', if its not either 'success' or 'failure'
EVAL-status=case( \
    coalesce('data.severity', 'severity') IN ("DEBUG","INFO","NOTICE","WARNING"), "success",\
    coalesce('data.severity', 'severity') IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), "failure" \
)

# iam_user events have user and src_user

EVAL-user=case( \
    'protoPayload.metadata.event{}.eventType'="USER_SETTINGS", updated_user,\
    'data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS", updated_user,\
    'protoPayload.methodName'="storage.setIamPermissions",'protoPayload.authenticationInfo.principalEmail',\
    'data.protoPayload.methodName'="storage.setIamPermissions",'data.protoPayload.authenticationInfo.principalEmail',\
    match(lower('protoPayload.methodName'), "(createserviceaccount|deleteserviceaccount|patchserviceaccount|disableserviceaccount)"), 'resource.labels.email_id',\
    match(lower('data.protoPayload.methodName'), "(createserviceaccount|deleteserviceaccount|patchserviceaccount|disableserviceaccount)"), 'data.resource.labels.email_id',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail',\
    isnotnull('data.protoPayload.authenticationInfo.principalEmail'),'data.protoPayload.authenticationInfo.principalEmail',\
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService%"),'protoPayload.metadata.event{}.parameter{}.value',\
    like('data.protoPayload.methodName',"google.admin.AdminService%"),'data.protoPayload.metadata.event{}.parameter{}.value',\
    like('protoPayload.methodName',"google.iam.admin.v%"),'resource.labels.email_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v%"),'data.resource.labels.email_id',\
    true(), 'data.resource.labels.email_id' \
)

EVAL-user_name=case( \
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateRole|UndeleteRole|DeleteRole|UpdateRole)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateRole|UndeleteRole|DeleteRole|UpdateRole)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.(DisableServiceAccount)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DisableServiceAccount)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"storage\.buckets\.(create|delete|update|setIamPolicy)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"storage\.buckets\.(create|delete|update|setIamPolicy)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"storage\.objects\.(update)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"storage\.objects\.(update)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "storage\.(setIamPermissions)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "storage\.(setIamPermissions)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    true(), coalesce('protoPayload.response.display_name','data.protoPayload.response.display_name', 'protoPayload.response.displayName', 'data.protoPayload.response.displayName', 'resource.labels.email_id', 'data.resource.labels.email_id') \
)

EVAL-vendor_account=case( \
    isnotnull('resource.labels.project_id'),'resource.labels.project_id',\
    isnotnull('data.resource.labels.project_id'),'data.resource.labels.project_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), 1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), 1) \
)

EVAL-vendor_product=case( \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "GCP Compute Engine", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'), "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "GCP Compute Engine", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "GCP Firewall", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"pubsub"), "GCP Cloud Pub/Sub", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage.%"), "GCP Cloud Storage", \
    true(), "GCP Identity Access Management" \
)

EVAL-vendor_region=case(isnotnull('resource.labels.zone'),'resource.labels.zone',\
                        isnotnull('data.resource.labels.zone'),'data.resource.labels.zone',\
                        isnotnull('resource.labels.location'),'resource.labels.location',\
                        isnotnull('data.resource.labels.location'),'data.resource.labels.location')

## Change_Instance mappings begin ##
EVAL-image_id=case(match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'resource.labels.instance_id', \
                   match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'data.resource.labels.instance_id', \
                   true(), coalesce('resource.labels.disk_id', 'data.resource.labels.disk_id'))

EVAL-instance_type = case(isnotnull('resource.type'),'resource.type',isnotnull('data.resource.type'),'data.resource.type')

## Network ACLs mappings begin ##

# For insert event, information comes in the 'request' element. For Delete event, information comes in
# 'resourceOriginalState' element. For patch event, information can come in either or both of those 2
# elements, but 'request' has the latest update and hence it should take precedence

# GCP firewall rules use port information to reference the destination port. So, no 'src_port_range'
# available. If port is not specified, the rule applies to all ports
EVAL-dest_port_range=coalesce('protoPayload.request.alloweds{}.ports{}',\
                              'protoPayload.request.denieds{}.ports{}',\
                              'protoPayload.resourceOriginalState.alloweds{}.ports{}',\
                              'protoPayload.resourceOriginalState.denieds{}.ports{}',\
                              'data.protoPayload.request.alloweds{}.ports{}',\
                              'data.protoPayload.request.denieds{}.ports{}',\
                              'data.protoPayload.resourceOriginalState.alloweds{}.ports{}',\
                              'data.protoPayload.resourceOriginalState.denieds{}.ports{}',\
                              "all")

EVAL-dest_ip_range=coalesce('protoPayload.request.destinationRanges{}',\
                            'protoPayload.resourceOriginalState.destinationRanges{}',\
                            'data.protoPayload.request.destinationRanges{}',\
                            'data.protoPayload.resourceOriginalState.destinationRanges{}',"Not outbound")

EVAL-direction=case('protoPayload.request.direction'="INGRESS", "inbound",\
                    'protoPayload.resourceOriginalState.direction'="INGRESS", "inbound",\
                    'data.protoPayload.request.direction'="INGRESS", "inbound",\
                    'data.protoPayload.resourceOriginalState.direction'="INGRESS", "inbound",\
                    true(),"outbound")

EVAL-network=coalesce('protoPayload.request.network',\
                      'protoPayload.resourceOriginalState.network',\
                      'data.protoPayload.request.network',\
                      'data.protoPayload.resourceOriginalState.network')

EVAL-protocol=coalesce('protoPayload.request.alloweds{}.IPProtocol',\
                       'protoPayload.request.denieds{}.IPProtocol',\
                       'protoPayload.resourceOriginalState.alloweds{}.IPProtocol',\
                       'protoPayload.resourceOriginalState.denieds{}.IPProtocol',\
                       'data.protoPayload.request.alloweds{}.IPProtocol',\
                       'data.protoPayload.request.denieds{}.IPProtocol',\
                       'data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol',\
                       'data.protoPayload.resourceOriginalState.denieds{}.IPProtocol')

# A rule can either be an 'Allow' or a 'Deny' rule. If 'Allow', then 'alloweds' element will be
# present in the event. If 'Deny', then 'denieds' element will be present in the event
EVAL-rule_action=case(isnotnull('protoPayload.request.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('protoPayload.request.denieds{}.IPProtocol'), "deny",\
                      isnotnull('protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny",\
                      isnotnull('data.protoPayload.request.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('data.protoPayload.request.denieds{}.IPProtocol'), "deny",\
                      isnotnull('data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('data.protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny")

EVAL-src_ip_range=coalesce('protoPayload.request.sourceRanges{}','protoPayload.resourceOriginalState.sourceRanges{}','data.protoPayload.request.sourceRanges{}',\
                           'data.protoPayload.resourceOriginalState.sourceRanges{}')
## Network ACLs mappings end ##

# This section is for CIM mapping of the Authentication Model to Authentication Audit Logs ingested via Google Pub Sub
[google:gcp:pubsub:audit:data_access]
KV_MODE = json

# CHANGE DM
TRUNCATE = 30000
## Extraction ##
################
REPORT-splunk_ta_gcp_audit_cim_change_updated_user = gcp_change_updated_user1, gcp_change_updated_user2
REPORT-splunk_ta_gcp_audit_cim_change_updated_value = gcp_change_updated_value1, gcp_change_updated_value2

## Aliases ##
#############
# updated_user extracted in REPORT-gcp_change_updated_user
FIELDALIAS-splunk_ta_gcp_audit_cim_change_dest_user=updated_user as dest_user


## Eval ##
##########
EVAL-command=coalesce('protoPayload.methodName','data.protoPayload.methodName')

EVAL-dest=case( \
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.request.resource', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.request.resource', \
    'protoPayload.methodName' in ("google.admin.AdminService.changeUserAddress", "google.iam.admin.v1.CreateServiceAccount"), mvindex(split('protoPayload.resourceName', "/"), 1), \
    'data.protoPayload.methodName' in ("google.admin.AdminService.changeUserAddress", "google.iam.admin.v1.CreateServiceAccount"), mvindex(split('data.protoPayload.resourceName', "/"), 1), \
    match('protoPayload.methodName', "^google\.iam\.admin\.v\d+\.(CreateServiceAccountKey|DeleteServiceAccount|PatchServiceAccount|DisableServiceAccount|SetIAMPolicy)$"), 'resource.labels.project_id', \
    match('data.protoPayload.methodName', "^google\.iam\.admin\.v\d+\.(CreateServiceAccountKey|DeleteServiceAccount|PatchServiceAccount|DisableServiceAccount|SetIAMPolicy)$"), 'data.resource.labels.project_id', \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(insert)"), if(severity="ERROR", mvindex(split('protoPayload.resourceName',"/"), -1), 'resource.labels.project_id'), \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(insert)"), if('data.severity'="ERROR", mvindex(split('data.protoPayload.resourceName',"/"), -1), 'data.resource.labels.project_id'), \
    match('protoPayload.methodName', "(v\d+)\.compute\.instances\.(start|reset|delete|attachDisk|detachDisk)"), mvindex(split('protoPayload.resourceName',"/"), -1), \
    match('data.protoPayload.methodName', "(v\d+)\.compute\.instances\.(start|reset|delete|attachDisk|detachDisk)"), mvindex(split('data.protoPayload.resourceName',"/"), -1), \
    true(), coalesce('resource.labels.project_id', 'data.resource.labels.project_id', mvindex(split('protoPayload.resourceName', "/"), 1), mvindex(split('data.protoPayload.resourceName', "/"), 1), \
    'resource.labels.project_id','data.resource.labels.project_id', \
    'protoPayload.resourceName', 'protoPayload.resourceName', \
    'protoPayload.serviceName','data.protoPayload.serviceName') \
)

EVAL-object=case( \
    'protoPayload.methodName'="google.login.LoginService.logout", 'protoPayload.authenticationInfo.principalEmail',\
    'data.protoPayload.methodName'="google.login.LoginService.logout", 'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="storage.objects.update", 'resource.labels.bucket_name',\
    'data.protoPayload.methodName'="storage.objects.update", 'data.resource.labels.bucket_name',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService.%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService.%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    like('protoPayload.methodName',"google.iam.admin.v%") AND isnotnull('resource.labels.email_id'),'resource.labels.email_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v%") AND isnotnull('data.resource.labels.email_id'), 'data.resource.labels.email_id',\
    'protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'protoPayload.resourceName', \
    'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'data.protoPayload.resourceName', \
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), -1),\
    isnotnull('data.protoPayload.resourceName'), mvindex(split('data.protoPayload.resourceName', "/"), -1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), -1), \
    'protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'resource.labels.email_id', \
    'data.protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'data.resource.labels.email_id' \
)

EVAL-object_id=case( \
    like('protoPayload.methodName',"google.iam.admin.%.CreateServiceAccount"), if(isnotnull('protoPayload.request.service_account.description'), 'resource.labels.unique_id', 'protoPayload.resourceName'),\
    like('data.protoPayload.methodName',"google.iam.admin.%.CreateServiceAccount"), if(isnotnull('data.protoPayload.request.service_account.description'), 'data.resource.labels.unique_id', 'data.protoPayload.resourceName'),\
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount|PatchServiceAccount)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount|PatchServiceAccount)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateServiceAccountKey)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateServiceAccountKey)"), 'data.protoPayload.resourceName',\
    like('protoPayload.methodName',"google.pubsub.%.Subscriber.DeleteSubscription"), 'protoPayload.resourceName',\
    like('data.protoPayload.methodName',"google.pubsub.%.Subscriber.DeleteSubscription"), 'data.protoPayload.resourceName',\
    like('protoPayload.methodName',"google.pubsub.%.Publisher.CreateTopic"), 'protoPayload.resourceName', \
    like('data.protoPayload.methodName',"google.pubsub.%.Publisher.CreateTopic"), 'data.protoPayload.resourceName', \
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(UndeleteRole|CreateRole|DeleteRole|UpdateRole)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(UndeleteRole|CreateRole|DeleteRole|UpdateRole)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"storage\.buckets\.(create|delete|update)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"storage\.buckets\.(create|delete|update)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName',"storage\.objects\.(update)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"storage\.objects\.(update)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), if(severity IN ("ERROR"), 'protoPayload.resourceName', 'resource.labels.instance_id'), \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), if('data.severity' IN ("ERROR"), 'data.protoPayload.resourceName', 'data.resource.labels.instance_id'), \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'resource.labels.disk_id', \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'data.resource.labels.disk_id', \
    'protoPayload.methodName'="Subscriber.InternalExpireInactiveSubscription", 'protoPayload.resourceName',\
    'data.protoPayload.methodName'="Subscriber.InternalExpireInactiveSubscription", 'data.protoPayload.resourceName',\
    'protoPayload.methodName'="storage.setIamPermissions", 'protoPayload.resourceName',\
    'data.protoPayload.methodName'="storage.setIamPermissions", 'data.protoPayload.resourceName',\
    'protoPayload.methodName'="SetIamPolicy", coalesce('resource.labels.unique_id', 'protoPayload.resourceName'),\
    'data.protoPayload.methodName'="SetIamPolicy", coalesce('data.resource.labels.unique_id', 'data.protoPayload.resourceName'),\
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    like('protoPayload.methodName',"google.admin.AdminService.%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService.%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    isnotnull('data.resource.labels.disk_id'),'data.resource.labels.disk_id',\
    'protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'protoPayload.resourceName', \
    'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'data.protoPayload.resourceName', \
    like('protoPayload.methodName',"google.iam.admin.v1%") AND isnotnull('resource.labels.unique_id'),'resource.labels.unique_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v1%") AND isnotnull('data.resource.labels.unique_id'), 'data.resource.labels.unique_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), -1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), -1), \
    'protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'resource.labels.unique_id', \
    'data.protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'data.resource.labels.unique_id', \
    true(), coalesce('protoPayload.resourceName','data.protoPayload.resourceName') \
)


EVAL-object_path=case( \
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount)"), mvjoin(mvindex(split('protoPayload.request.name', "/"), 0, 2), "/")+"/" , \
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DeleteServiceAccount|DisableServiceAccount)"), mvjoin(mvindex(split('data.protoPayload.request.name', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), mvjoin(mvindex(split('protoPayload.request.resource', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "google\.iam\.admin\.v\d+\.SetIAMPolicy"), mvjoin(mvindex(split('data.protoPayload.request.resource', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.admin\.AdminService\.(changePassword|removeRecoveryPhone)"), 'protoPayload.resourceName', \
    match('data.protoPayload.methodName',"google\.admin\.AdminService\.(changePassword|removeRecoveryPhone)"), 'data.protoPayload.resourceName', \
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"Subscriber\.InternalExpireInactiveSubscription"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"Subscriber\.InternalExpireInactiveSubscription"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.resourceName',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.resourceName',\
    match('protoPayload.methodName', "storage\.buckets\.(create|delete|update)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.buckets\.(create|delete|update)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "storage\.objects\.(update)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.objects\.(update)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "storage\.(setIamPermissions)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('data.protoPayload.methodName', "storage\.(setIamPermissions)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 2), "/")+"/", \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), mvjoin(mvindex(split('data.protoPayload.resourceName', "/"), 0, 4), "/")+"/" , \
    match('protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 3), "/")+"/" , \
    match('data.protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), mvjoin(mvindex(split('protoPayload.resourceName', "/"), 0, 3), "/")+"/" , \
    like('protoPayload.methodName',"google.iam.admin.%"), mvjoin(mvindex(split('protoPayload.response.name', "/"), 0, 2), "/")+"/" , \
    like('data.protoPayload.methodName',"google.iam.admin.%"), mvjoin(mvindex(split('data.protoPayload.response.name', "/"), 0, 2), "/")+"/", \
    'protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'protoPayload.request.parent', \
    'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'data.protoPayload.request.parent', \
    'protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", mvjoin(mvindex(split('protoPayload.request.name', "/"), 0, 2), "/")+"/", \
    'data.protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", mvjoin(mvindex(split('data.protoPayload.request.name', "/"), 0, 2), "/")+"/" \
)

EVAL-result=case( \
    'severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), 'protoPayload.methodName', \
    'severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), coalesce('protoPayload.response.error.errors{}.reason', 'protoPayload.response.error.message', 'protoPayload.status.message'), \
    'data.severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), 'data.protoPayload.methodName', \
    'data.severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), coalesce('data.protoPayload.response.error.errors{}.reason', 'data.protoPayload.response.error.message', 'data.protoPayload.status.message'), \
    'protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'protoPayload.status.message', \
    'data.protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'data.protoPayload.status.message' \
 )

EVAL-result_id=coalesce( \
    'protoPayload.response.error.code',\
    'data.protoPayload.response.error.code',\
    'protoPayload.status.code',\
    'data.protoPayload.status.code' \
)
EVAL-src_ip=coalesce('protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-user_agent=coalesce('protoPayload.requestMetadata.callerSuppliedUserAgent','data.protoPayload.requestMetadata.callerSuppliedUserAgent')

EVAL-user_id=case( \
    match('resource.type',"service_account"),'resource.labels.unique_id',\
    match('data.resource.type',"service_account"),'data.resource.labels.unique_id',\
    isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail',\
    isnotnull('data.protoPayload.authenticationInfo.principalEmail'),'data.protoPayload.authenticationInfo.principalEmail', \
    'protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), coalesce('resource.labels.unique_id','data.resource.labels.unique_id') \
)

EVAL-user_type=case( \
    coalesce('protoPayload.methodName', 'data.protoPayload.methodName')="SetIamPolicy", "service_account", \
    match('resource.type',"pubsub_subscription"),"service_account",match('data.resource.type',"pubsub_subscription"),"service_account",\
    match('resource.type',"service_account"),"service_account",match('data.resource.type',"service_account"),"service_account" )


# mapping 'command' field values to prescribed 'action' field values
EVAL-action=case( \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.buckets.setIamPolicy","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.setIamPermissions","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="beta.compute.firewalls.insert","modified",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.logging.v2.LoggingServiceV2.ListLogs", "read", \
     coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.iam.admin.v1.GetServiceAccountKey", "read", \
     severity in ("INFO", "NOTICE"), "success", \
     'data.severity' in ("INFO", "NOTICE"), "success", \
     severity="ERROR", "failure", \
     'data.severity'="ERROR", "failure",\
     isnotnull('protoPayload.request.alloweds{}.IPProtocol'), "allow",\
     isnotnull('protoPayload.request.denieds{}.IPProtocol'), "deny",\
     isnotnull('protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
     isnotnull('protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny",\
     isnotnull('data.protoPayload.request.alloweds{}.IPProtocol'), "allow",\
     isnotnull('data.protoPayload.request.denieds{}.IPProtocol'), "deny",\
     isnotnull('data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
     isnotnull('data.protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "setiampermissions") AND match('resource.type',"service_account"), "modified", \
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "setiampermissions"),"acl_modified",\
    like(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "%.createserviceaccountkey"),"modified",\
    like(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "%.disableserviceaccount"),"modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(create|insert|undelete)"),"created",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="Subscriber.InternalExpireInactiveSubscription","deleted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "delete"),"deleted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "reset"),"restarted",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(start|enable)"),"started",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(stop|disable)"),"stopped",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "(update|patch|attachdisk|detachdisk|set|change|remove|add)"), "modified",\
    match(lower(coalesce('protoPayload.methodName','data.protoPayload.methodName')), "list"),"logs_read",\
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'), "google.login.LoginService.logout"),"logoff",\
    true(), "unknown" )

# extract change_type depending on the event
EVAL-change_type=case( \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Publisher\.CreateTopic"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"Subscriber\.InternalExpireInactiveSubscription"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Subscriber\.(DeleteSubscription)"), "data", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "Virtual Server", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "Virtual Server", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "firewall", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage.%"), "storage", \
    true(), "AAA", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.logging.v2.LoggingServiceV2.ListLogs", "logging", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.iam.admin.v1.GetServiceAccountKey", "AAA" \
)

# updated_value extracted in REPORT-gcp_change_updated_value
EVAL-object_attrs = case( \
    coalesce('protoPayload.methodName', 'data.protoPayload.methodName')="SetIamPolicy", "policy", \
    like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google.iam.admin.%.CreateServiceAccountKey"), "ServiceAccountKey", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.changePassword", "password", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.removeRecoveryPhone", "RECOVERY_PHONE", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.addRecoveryEmail", "RECOVERY_EMAIL", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.admin.AdminService.changeUserAddress", "USER_ADDRESS", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="login.googleapis.com", "login session",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.login.LoginService.logout", "login session",\
    'protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", mvindex(split('protoPayload.resourceName', "/"),-1), \
    'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", mvindex(split('data.protoPayload.resourceName', "/"),-1), \
    true(), coalesce('resource.type', 'data.resource.type', "project") \
)

EVAL-object_category=case( \
    'protoPayload.methodName' in ("google.pubsub.v1.Publisher.CreateTopic", "Subscriber.InternalExpireInactiveSubscription"), 'resource.type', \
    'data.protoPayload.methodName' in ("google.pubsub.v1.Publisher.CreateTopic", "Subscriber.InternalExpireInactiveSubscription"), 'data.resource.type', \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="storage.setIamPermissions", "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage\.objects\.(update)"), "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage\.buckets\.(create|delete|update)"), "bucket", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.iam\.admin\.v\d+\.(UndeleteRole|DeleteRole|CreateRole|UpdateRole)"), "role", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "firewall", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "disk", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "instance", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), "pubsub_subscription", \
    match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"google\.iam\.admin\.v\d+\.CreateServiceAccountKey"), "user", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="SetIamPolicy", "user", \
    coalesce('resource.type', 'data.resource.type')="service_account", "user",\
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.login.LoginService.logout", "user",\
    coalesce('protoPayload.metadata.event{}.eventType', 'data.protoPayload.metadata.event{}.eventType')="USER_SETTINGS","user", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.logging.v2.LoggingServiceV2.ListLogs", "logs", \
    coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.iam.admin.v1.GetServiceAccountKey", "user" \
)

#For iam_user events, resource.type doesn't have object_category information
EVAL-resource_type=case(match('protoPayload.metadata.event{}.eventType',"USER_SETTINGS"),"iam_user", \
                        match('data.protoPayload.metadata.event{}.eventType',"USER_SETTINGS"),"iam_user", \
                        true(), coalesce('resource.type', 'data.resource.type'))

# src_user only applicable to iam_user events where a user performs action on another user
EVAL-src_user=case( \
    ('protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'protoPayload.authenticationInfo.principalEmail',\
    ('data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'data.protoPayload.authenticationInfo.principalEmail', \
    match('resource.type',"service_account"),'protoPayload.authenticationInfo.principalEmail',\
    match('data.resource.type',"service_account"),'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), "No src_user" )

EVAL-src_user_name=case( \
    ('protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'protoPayload.authenticationInfo.principalEmail',\
    ('data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS" OR match(lower(command), "setiampermissions")), 'data.protoPayload.authenticationInfo.principalEmail', \
    match('resource.type',"service_account"),'protoPayload.authenticationInfo.principalEmail',\
    match('data.resource.type',"service_account"),'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="SetIamPolicy", 'data.protoPayload.authenticationInfo.principalEmail', \
    true(), "No src_user_name" )


# Change CIM will update 'status' field with value 'unknown', if its not either 'success' or 'failure'

# iam_user events have user and src_user

EVAL-user=case( \
    'protoPayload.metadata.event{}.eventType'="USER_SETTINGS", updated_user,\
    'data.protoPayload.metadata.event{}.eventType'="USER_SETTINGS", updated_user,\
    'protoPayload.methodName'="storage.setIamPermissions",'protoPayload.authenticationInfo.principalEmail',\
    'data.protoPayload.methodName'="storage.setIamPermissions",'data.protoPayload.authenticationInfo.principalEmail',\
    match(lower('protoPayload.methodName'), "(createserviceaccount|deleteserviceaccount|patchserviceaccount|disableserviceaccount|getserviceaccountkey)"), 'resource.labels.email_id',\
    match(lower('data.protoPayload.methodName'), "(createserviceaccount|deleteserviceaccount|patchserviceaccount|disableserviceaccount|getserviceaccountkey)"), 'data.resource.labels.email_id',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail',\
    isnotnull('data.protoPayload.authenticationInfo.principalEmail'),'data.protoPayload.authenticationInfo.principalEmail',\
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('protoPayload.methodName',"google.admin.AdminService%"),'protoPayload.metadata.event{}.parameter{}.value',\
    like('data.protoPayload.methodName',"google.admin.AdminService%"),'data.protoPayload.metadata.event{}.parameter{}.value',\
    like('protoPayload.methodName',"google.iam.admin.v%"),'resource.labels.email_id',\
    like('data.protoPayload.methodName',"google.iam.admin.v%"),'data.resource.labels.email_id',\
    true(), coalesce('data.resource.labels.email_id','protoPayload.authenticationInfo.principalSubject') \
)

EVAL-user_name=case( \
    match('protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateRole|UndeleteRole|DeleteRole|UpdateRole)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(CreateRole|UndeleteRole|DeleteRole|UpdateRole)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "google\.iam\.admin\.v\d+\.(DisableServiceAccount)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.iam\.admin\.v\d+\.(DisableServiceAccount)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Publisher\.(CreateTopic)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.pubsub\.v\d+\.Subscriber\.DeleteSubscription"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"storage\.buckets\.(create|delete|update|setIamPolicy)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"storage\.buckets\.(create|delete|update|setIamPolicy)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"storage\.objects\.(update)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"storage\.objects\.(update)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "storage\.(setIamPermissions)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "storage\.(setIamPermissions)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"google\.login\.LoginService\.(logout)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.disks\.(delete|insert)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    match('protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), 'protoPayload.authenticationInfo.principalEmail',\
    match('data.protoPayload.methodName',"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), 'data.protoPayload.authenticationInfo.principalEmail',\
    'protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    'data.protoPayload.methodName'="SetIamPolicy", mvindex(split(mvindex('data.protoPayload.serviceData.policyDelta.bindingDeltas{}.member', 0), ":"), 1), \
    like('protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    like('data.protoPayload.methodName',"google.iam.admin.v%.SetIAMPolicy"), mvindex(split(mvindex(mvdedup(mvfilter(match('data.protoPayload.request.policy.bindings{}.members{}',"^user:"))), 0), ":"), 1),\
    'protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'protoPayload.authenticationInfo.principalEmail', \
    'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'data.protoPayload.authenticationInfo.principalEmail', \
    like('protoPayload.methodName',"google.admin.AdminService%"),mvindex('protoPayload.metadata.event{}.parameter{}.value',0),\
    like('data.protoPayload.methodName',"google.admin.AdminService%"),mvindex('data.protoPayload.metadata.event{}.parameter{}.value',0),\
    true(), coalesce('protoPayload.response.display_name','data.protoPayload.response.display_name', 'protoPayload.response.displayName', 'data.protoPayload.response.displayName', 'resource.labels.email_id', 'data.resource.labels.email_id'), \
    'protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'resource.labels.email_id', \
    'data.protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'data.resource.labels.email_id' \
)

EVAL-vendor_region=case(isnotnull('resource.labels.zone'),'resource.labels.zone',\
                        isnotnull('data.resource.labels.zone'),'data.resource.labels.zone',\
                        isnotnull('resource.labels.location'),'resource.labels.location',\
                        isnotnull('data.resource.labels.location'),'data.resource.labels.location')

## Change_Instance mappings begin ##
EVAL-image_id=case(match('protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'resource.labels.instance_id', \
                   match('data.protoPayload.methodName', "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), 'data.resource.labels.instance_id', \
                   true(), coalesce('resource.labels.disk_id', 'data.resource.labels.disk_id'))

EVAL-instance_type = case(isnotnull('resource.type'),'resource.type',isnotnull('data.resource.type'),'data.resource.type')

## Network ACLs mappings begin ##

# For insert event, information comes in the 'request' element. For Delete event, information comes in
# 'resourceOriginalState' element. For patch event, information can come in either or both of those 2
# elements, but 'request' has the latest update and hence it should take precedence

# GCP firewall rules use port information to reference the destination port. So, no 'src_port_range'
# available. If port is not specified, the rule applies to all ports
EVAL-dest_port_range=coalesce('protoPayload.request.alloweds{}.ports{}',\
                              'protoPayload.request.denieds{}.ports{}',\
                              'protoPayload.resourceOriginalState.alloweds{}.ports{}',\
                              'protoPayload.resourceOriginalState.denieds{}.ports{}',\
                              'data.protoPayload.request.alloweds{}.ports{}',\
                              'data.protoPayload.request.denieds{}.ports{}',\
                              'data.protoPayload.resourceOriginalState.alloweds{}.ports{}',\
                              'data.protoPayload.resourceOriginalState.denieds{}.ports{}',\
                              "all")

EVAL-dest_ip_range=coalesce('protoPayload.request.destinationRanges{}',\
                            'protoPayload.resourceOriginalState.destinationRanges{}',\
                            'data.protoPayload.request.destinationRanges{}',\
                            'data.protoPayload.resourceOriginalState.destinationRanges{}',"Not outbound")

EVAL-direction=case('protoPayload.request.direction'="INGRESS", "inbound",\
                    'protoPayload.resourceOriginalState.direction'="INGRESS", "inbound",\
                    'data.protoPayload.request.direction'="INGRESS", "inbound",\
                    'data.protoPayload.resourceOriginalState.direction'="INGRESS", "inbound",\
                    true(),"outbound")

EVAL-network=coalesce('protoPayload.request.network',\
                      'protoPayload.resourceOriginalState.network',\
                      'data.protoPayload.request.network',\
                      'data.protoPayload.resourceOriginalState.network')

EVAL-protocol=coalesce('protoPayload.request.alloweds{}.IPProtocol',\
                       'protoPayload.request.denieds{}.IPProtocol',\
                       'protoPayload.resourceOriginalState.alloweds{}.IPProtocol',\
                       'protoPayload.resourceOriginalState.denieds{}.IPProtocol',\
                       'data.protoPayload.request.alloweds{}.IPProtocol',\
                       'data.protoPayload.request.denieds{}.IPProtocol',\
                       'data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol',\
                       'data.protoPayload.resourceOriginalState.denieds{}.IPProtocol')

# A rule can either be an 'Allow' or a 'Deny' rule. If 'Allow', then 'alloweds' element will be
# present in the event. If 'Deny', then 'denieds' element will be present in the event
EVAL-rule_action=case(isnotnull('protoPayload.request.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('protoPayload.request.denieds{}.IPProtocol'), "deny",\
                      isnotnull('protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny",\
                      isnotnull('data.protoPayload.request.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('data.protoPayload.request.denieds{}.IPProtocol'), "deny",\
                      isnotnull('data.protoPayload.resourceOriginalState.alloweds{}.IPProtocol'), "allow",\
                      isnotnull('data.protoPayload.resourceOriginalState.denieds{}.IPProtocol'), "deny")

EVAL-src_ip_range=coalesce('protoPayload.request.sourceRanges{}','protoPayload.resourceOriginalState.sourceRanges{}','data.protoPayload.request.sourceRanges{}',\
                           'data.protoPayload.resourceOriginalState.sourceRanges{}')
## Network ACLs mappings end ##

# Authentication DM
## Aliases ##
#############

## Eval ##
##########
EVAL-app=coalesce('protoPayload.serviceName','data.protoPayload.serviceName')
EVAL-authentication_service=coalesce('protoPayload.serviceName','data.protoPayload.serviceName')

EVAL-dvc=case('protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'protoPayload.serviceName', \
              'data.protoPayload.methodName'="google.logging.v2.LoggingServiceV2.ListLogs", 'data.protoPayload.serviceName', \
              'protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'protoPayload.serviceName', \
              'data.protoPayload.methodName'="google.iam.admin.v1.GetServiceAccountKey", 'data.protoPayload.serviceName', \
              'protoPayload.methodName'="SetIamPolicy", "iam.googleapis.com", \
              'data.protoPayload.methodName'="SetIamPolicy", "iam.googleapis.com", \
              true(), coalesce('protoPayload.serviceName', 'data.protoPayload.serviceName') \
          )

EVAL-reason=coalesce('protoPayload.status.message','data.protoPayload.status.message')
EVAL-signature=coalesce('protoPayload.methodName','data.protoPayload.methodName')

EVAL-status=case('severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), "success",\
                 'severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), "failure",\
                 'data.severity' IN ("DEBUG","INFO","NOTICE", "WARNING"), "success",\
                 'data.severity' IN ("ERROR","CRITICAL","ALERT", "EMERGENCY"), "failure")

EVAL-src=coalesce('protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')

EVAL-vendor_account=case( \
    isnotnull('resource.labels.project_id'),'resource.labels.project_id',\
    isnotnull('data.resource.labels.project_id'),'data.resource.labels.project_id',\
    isnotnull('protoPayload.resourceName'), mvindex(split('protoPayload.resourceName', "/"), 1),\
    true(), mvindex(split('data.protoPayload.resourceName', "/"), 1) \
)

EVAL-vendor_product=case( \
                        coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.logging.v2.LoggingServiceV2.ListLogs", "GCP", \
                        coalesce('protoPayload.methodName','data.protoPayload.methodName')="google.iam.admin.v1.GetServiceAccountKey", "GCP Identity Access Management", \
                        match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.disks\.(delete|insert)"), "GCP Compute Engine", \
                        match(coalesce('protoPayload.methodName','data.protoPayload.methodName'), "(v\d+|beta)\.compute\.instances\.(start|reset|insert|delete|attachDisk|detachDisk)"), "GCP Compute Engine", \
                        match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"(v\d+|beta)\.compute\.firewalls\.(insert|patch|delete)"), "GCP Firewall", \
                        match(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"pubsub"), "GCP Cloud Pub/Sub", \
                        like(coalesce('protoPayload.methodName','data.protoPayload.methodName'),"storage.%"), "GCP Cloud Storage", \
                        true(), "GCP Identity Access Management" \
)

# This section is for GSuite login CIM mapping of the Authentication Model to Authentication Audit Logs ingested via Google Pub Sub
[google:gsuite:pubsub:audit:auth]

## Extraction ##
################
REPORT-splunk_ta_gcp_gsuite_audit_cim_authentication_gcp_gsuite_login_event_parameters = gcp_gsuite_login_parameters, gcp_gsuite_login_parameters_list, gcp_gsuite_login_parameters_list_single_value, gcp_gsuite_login_parameters_list_single_value_reverse, gcp_gsuite_login_parameters_list_multi_value, gcp_gsuite_login_parameters_list_multi_value_reverse
# This is to extract eventName from a nested json.
EXTRACT-eventName = "eventName"\:\s*"(?<eventName>([^"]\w*))

## Aliases ##
#############
FIELDALIAS-splunk_gsuite_pubsub_audit_auth_user_type = resource.type as user_type

## Eval ##
##########
EVAL-authentication_service=if(isnotnull('protoPayload.serviceName'),'protoPayload.serviceName','data.protoPayload.serviceName')
EVAL-signature=if(isnotnull('protoPayload.methodName'),'protoPayload.methodName','data.protoPayload.methodName')
EVAL-src=if(isnotnull('protoPayload.requestMetadata.callerIp'),'protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-src_ip=if(isnotnull('protoPayload.requestMetadata.callerIp'),'protoPayload.requestMetadata.callerIp','data.protoPayload.requestMetadata.callerIp')
EVAL-user=coalesce('protoPayload.authenticationInfo.principalEmail','data.protoPayload.authenticationInfo.principalEmail', 'protoPayload.authenticationInfo.principalSubject', 'data.protoPayload.authenticationInfo.principalSubject', 'actor.email')
EVAL-src_user=if(isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail','data.protoPayload.authenticationInfo.principalEmail')
EVAL-user_id=if(isnotnull('protoPayload.authenticationInfo.principalEmail'),'protoPayload.authenticationInfo.principalEmail','data.protoPayload.authenticationInfo.principalEmail')


EVAL-action=case(eventName="login_success" OR login_challenge_status="passed", "success", eventName="logout", "logoff", eventName="login_failure" OR login_challenge_status="failed", "failure")
EVAL-login_type=if(isnotnull('login_type'),'login_type',"google_password")
EVAL-authentication_method=if(isnotnull('login_type'),'login_type',"unknown")
EVAL-app=coalesce('protoPayload.serviceName', 'data.protoPayload.serviceName', "login.googleapis.com")
EVAL-dest=mvindex(split(coalesce('protoPayload.resourceName', 'data.protoPayload.resourceName'), "/"), -1)
EVAL-vendor_account=mvindex(split(coalesce('protoPayload.resourceName', 'data.protoPayload.resourceName'), "/"), 1)

# This section is for CIM mapping of the Assets and Identities Model to users ingested via Google Pub Sub
[google:gcp:gsuite:admin:directory:users]

## Extraction ##
################
EXTRACT-splunk_gsuite_identities_bunit = \"organizations":.*?{.*?"department":\s*"(?<bunit>([^"]+)).*?\}
EXTRACT-splunk_gsuite_identities_email = \"emails":.*?{.*?"address":\s*"(?<email>([^"]+)).*?\}
EXTRACT-splunk_gsuite_identities_phone = \"phones":.*?{.*?"value":\s*"(?<phone>([^"]+)).*?\}

## Aliases ##
#############
FIELDALIAS-splunk_gsuite_identities_identity = email as identity


## Eval ##
##########
EVAL-first=if(isnotnull('data.name.givenName'),'data.name.givenName','name.givenName')
EVAL-last=if(isnotnull('data.name.familyName'),'data.name.familyName','name.familyName')
EVAL-startdate=if(isnotnull('data.creationTime'),'data.creationTime','name.creationTime')


#####################################################
###               Resource Metadata               ###
#####################################################

[source::(*:disks|*:accelerator_types|*:instances|*:instance_group_managers|*:instance_groups|*:operation_resources|*:node_types|*:autoscalers|*:disk_types|*:machine_types|*:network_endpoint_groups|*:node_groups|*:reservations|*:target_instance|*:operation_resources|*:firewalls|*:buckets|*:bucket_access_controls|*:default_object_access_controls|*:object_access_controls|*:notifications|*:subnetworks|*:clusters|*:node_pools|*:locations|*:operations|*:connectors)]
DATETIME_CONFIG = CURRENT
priority = 1

#####################################################
###               Google Cloud Bucket             ###
#####################################################
[google:gcp:buckets:xmldata]
KV_MODE = xml
TRUNCATE = 9999999

[google:gcp:buckets:jsondata]
KV_MODE = json
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)\{
TRUNCATE = 9999999

[google:gcp:buckets:*data]
DATETIME_CONFIG = CURRENT
priority = 1
TRANSFORMS-sourcetype_splunk_gcp_compute_instance=gcp_compute_instance

## Non-CIM Aliases ##
FIELDALIAS-splunk_gcp_compute_instance_preemptible = "resource.data.scheduling.preemptible" as preemptible
FIELDALIAS-splunk_gcp_compute_instance_status = "resource.data.status" as status


# This section is for CIM mapping of Enterprise Security Assets and Identities Framework Interface
[google:gcp:compute:instance]

## Extraction ##
################
REPORT-splunk_gcp_compute_instance_name = gcp_compute_instance_name
EXTRACT-splunk_gcp_compute_instance_category = \"data":\{.*?"labels":\{"(?<category>[^"]+).*?\}
EXTRACT-splunk_gcp_compute_instance_image_id = \"data"\:{.*?disks":\[\{.*"source":\s*"(?<image_id>[^"]+).*?\}
EXTRACT-splunk_gcp_compute_instance_network_instance_type = \"machineType\":.+\/machineTypes\/(?<instance_type>[^\"]+)
EXTRACT-splunk_gcp_compute_instance_natIP = \"networkInterfaces":\[\{.*"natIP":\s*"(?<nat_ip>[^"]+).*?\}
EXTRACT-splunk_gcp_compute_instance_network_interface_id = \"networkInterfaces":\[\{.*"name":\s*"(?<network_interface_id>[^"]+).*?\}
EXTRACT-splunk_gcp_compute_instance_network_ip = \"networkInterfaces":\[\{.*"networkIP":\s*"(?<network_ip>[^"]+).*?\}
EXTRACT-splunk_gcp_compute_instance_subnet_id = \"networkInterfaces":\[\{.*"subnetwork":\s*"(?<subnet_id>[^"]+).*?\}
EXTRACT-splunk_gcp_compute_instance_vendor_region = \"zone\":.+\/zones\/(?<vendor_region>[^\"]+)
EXTRACT-splunk_gcp_compute_instance_network_vpc_id = \"networkInterfaces":\[\{.*"network":\s*"(?<vpc_id>[^"]+).*?\}

## Aliases ##
#############
# instance_name extracted in REPORT-splunk_gcp_compute_instance_name
FIELDALIAS-splunk_gcp_compute_instance_nt_host = instance_name as nt_host
FIELDALIAS-splunk_gcp_compute_instance_vendor_account = "customerId" as vendor_account

## Eval ##
##########
EVAL-ip = mvappend(if(network_ip=="null",null(), network_ip), if(nat_ip=="null",null(), nat_ip))

#####################################################
###                VPCFlow Logs                   ###
#####################################################
[google:gcp:compute:vpc_flows]

KV_MODE = json
TRUNCATE = 15000
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 30
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%6NZ
TIME_PREFIX = \"timestamp\"\s*\:\s*\"
LINE_BREAKER = ([\r\n]+)\{

## Aliases ##
#############

## Eval ##
##########

## Non-CIM ##
# InstanceDetails and VpcDetails
EVAL-dest_subnetwork_name=coalesce('jsonPayload.dest_vpc.subnetwork_name','data.jsonPayload.dest_vpc.subnetwork_name')
EVAL-dest_vendor_account=coalesce('jsonPayload.dest_instance.project_id','data.jsonPayload.dest_instance.project_id')
EVAL-dest_vendor_region=coalesce('jsonPayload.dest_instance.region','data.jsonPayload.dest_instance.region')
EVAL-dest_vm_name=coalesce('jsonPayload.dest_instance.vm_name','data.jsonPayload.dest_instance.vm_name')
EVAL-dest_vpc_name=coalesce('jsonPayload.dest_vpc.vpc_name','data.jsonPayload.dest_vpc.vpc_name')
EVAL-src_subnetwork_name=coalesce('jsonPayload.src_vpc.subnetwork_name','data.jsonPayload.src_vpc.subnetwork_name')
EVAL-src_vendor_account=coalesce('jsonPayload.src_instance.project_id','data.jsonPayload.src_instance.project_id')
EVAL-src_vendor_region=coalesce('jsonPayload.src_instance.region','data.jsonPayload.src_instance.region')
EVAL-src_vm_name=coalesce('jsonPayload.src_instance.vm_name','data.jsonPayload.src_instance.vm_name')
EVAL-src_vpc_name=coalesce('jsonPayload.src_vpc.vpc_name','data.jsonPayload.src_vpc.vpc_name')
EVAL-timestamp=coalesce('timestamp','data.timestamp')

# GeographicDetails
EVAL-dest_city=coalesce('jsonPayload.dest_location.city','data.jsonPayload.dest_location.city')
EVAL-dest_continent=coalesce('jsonPayload.dest_location.continent','data.jsonPayload.dest_location.continent')
EVAL-dest_country=coalesce('jsonPayload.dest_location.country','data.jsonPayload.dest_location.country')
EVAL-dest_region=coalesce('jsonPayload.dest_location.region','data.jsonPayload.dest_location.region')
EVAL-dest_asn=coalesce('jsonPayload.dest_location.asn','data.jsonPayload.dest_location.asn')
EVAL-src_city=coalesce('jsonPayload.src_location.city','data.jsonPayload.src_location.city')
EVAL-src_continent=coalesce('jsonPayload.src_location.continent','data.jsonPayload.src_location.continent')
EVAL-src_country=coalesce('jsonPayload.src_location.country','data.jsonPayload.src_location.country')
EVAL-src_region=coalesce('jsonPayload.src_location.region','data.jsonPayload.src_location.region')
EVAL-src_asn=coalesce('jsonPayload.src_location.asn','data.jsonPayload.src_location.asn')

# For evals/lookups/other
EVAL-end_time=coalesce('jsonPayload.end_time','data.jsonPayload.end_time')
EVAL-start_time=coalesce('jsonPayload.start_time','data.jsonPayload.start_time')
EVAL-protocol_code=coalesce('jsonPayload.connection.protocol','data.jsonPayload.connection.protocol')
EVAL-vpcflow_reporter=coalesce('jsonPayload.reporter','data.jsonPayload.reporter')

## CIM ##
EVAL-bytes=coalesce('jsonPayload.bytes_sent','data.jsonPayload.bytes_sent')
EVAL-dest_ip=coalesce('jsonPayload.connection.dest_ip','data.jsonPayload.connection.dest_ip')
EVAL-dest_port=coalesce('jsonPayload.connection.dest_port','data.jsonPayload.connection.dest_port')
EVAL-dest_zone=coalesce('jsonPayload.dest_instance.zone','data.jsonPayload.dest_instance.zone')
EVAL-packets=coalesce('jsonPayload.packets_sent','data.jsonPayload.packets_sent')

EVAL-protocol=case(isnotnull(coalesce('jsonPayload.connection.src_ip','data.jsonPayload.connection.dest_ip')), "ip")

EVAL-protocol_version=case(match(coalesce('jsonPayload.connection.src_ip','data.jsonPayload.connection.dest_ip'), "^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$"), "ipv4", \
                           match(coalesce('jsonPayload.connection.src_ip','data.jsonPayload.connection.dest_ip'), "^(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4}$"), "ipv6")

EVAL-response_time=coalesce('jsonPayload.rtt_msec','data.jsonPayload.rtt_msec')
EVAL-src_ip=coalesce('jsonPayload.connection.src_ip','data.jsonPayload.connection.src_ip')
EVAL-src_port=coalesce('jsonPayload.connection.src_port','data.jsonPayload.connection.src_port')

EVAL-action=if(coalesce('jsonPayload.bytes_sent','data.jsonPayload.bytes_sent', 0)>0 or coalesce('jsonPayload.packets_sent','data.jsonPayload.packets_sent', 0)>0,"allowed","blocked")

## For Network Traffic CIM, <bytes/packets>_in vs <bytes/packets>_out depends on whether reporter is SRC or DEST
EVAL-bytes_in=if(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="DEST",coalesce('jsonPayload.bytes_sent','data.jsonPayload.bytes_sent'),null())
EVAL-bytes_out=if(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="SRC",coalesce('jsonPayload.bytes_sent','data.jsonPayload.bytes_sent'),null())

# dest mapped from vm_name for ES A&I Asset enrichment when available, otherwise dest_ip
EVAL-dest=coalesce('jsonPayload.connection.dest_ip','data.jsonPayload.connection.dest_ip')

# Convert start_time and end_time to epoch format to calculate duration
EVAL-duration = round(strptime(coalesce('jsonPayload.end_time','data.jsonPayload.end_time'), "%Y-%m-%dT%H:%M:%S.%6NZ")-strptime(coalesce('jsonPayload.start_time','data.jsonPayload.start_time'), "%Y-%m-%dT%H:%M:%S.%6NZ"), 3)

# GCP records network flows send and received by VM instances so mapped 'src_ip' or 'dest_ip' based on 'reported' to 'dvc' field
EVAL-dvc=case(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="DEST", coalesce('jsonPayload.dest_instance.vm_name','data.jsonPayload.dest_instance.vm_name'), \
              coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="SRC", coalesce('jsonPayload.src_instance.vm_name','data.jsonPayload.src_instance.vm_name'))

EVAL-dvc_ip=case(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="DEST",coalesce('jsonPayload.connection.dest_ip','data.jsonPayload.connection.dest_ip'), \
                 coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="SRC",coalesce('jsonPayload.connection.src_ip','data.jsonPayload.connection.src_ip'))

EVAL-dvc_zone=case(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="DEST",coalesce('jsonPayload.dest_instance.zone','data.jsonPayload.dest_instance.zone'), \
                 coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="SRC",coalesce('jsonPayload.src_instance.zone','data.jsonPayload.src_instance.zone'))

EVAL-packets_in=if(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="DEST",coalesce('jsonPayload.packets_sent','data.jsonPayload.packets_sent'),null())
EVAL-packets_out=if(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')=="SRC",coalesce('jsonPayload.packets_sent','data.jsonPayload.packets_sent'),null())
# src mapped from vm_name for ES A&I Asset enrichment when available, otherwise src_ip
EVAL-src=coalesce('jsonPayload.connection.src_ip','data.jsonPayload.connection.src_ip','jsonPayload.src_instance.vm_name','data.jsonPayload.src_instance.vm_name')
EVAL-src_zone=coalesce('jsonPayload.src_instance.zone','data.jsonPayload.src_instance.zone')
EVAL-vendor_account=case(coalesce('jsonPayload.reporter','data.jsonPayload.reporter')="DEST",coalesce('jsonPayload.dest_instance.project_id','data.jsonPayload.dest_instance.project_id'), \
                         coalesce('jsonPayload.reporter','data.jsonPayload.reporter')="SRC",coalesce('jsonPayload.src_instance.project_id','data.jsonPayload.src_instance.project_id'))
EVAL-vendor_product="GCP VPC Flow Log"

## Lookups ##
#############
LOOKUP-splunk_ta_gcp_cim_network_traffic_app=gcp_protocol_numbers protocol_code OUTPUT keyword AS app
LOOKUP-splunk_ta_gcp_cim_network_traffic_direction=gcp_vpcflow_direction_lookup vpcflow_reporter OUTPUT direction
LOOKUP-splunk_ta_gcp_cim_network_traffic_transport=gcp_vpcflow_protocol_code_lookup protocol_code OUTPUT transport

[google:gcp:buckets:accesslogs]
SHOULD_LINEMERGE=false
TIME_FORMAT=%s
TIME_PREFIX=\s\[

REPORT-gcp_storage_buckets_accesslogs = gcp_storage_buckets_accesslogs

FIELDALIAS-bytes_in = cs_bytes as bytes_in
FIELDALIAS-bytes_out = sc_bytes as bytes_out
FIELDALIAS-dest = cs_host as dest
FIELDALIAS-http_method = cs_method as http_method
FIELDALIAS-http_referrer = cs_referer as http_referrer
FIELDALIAS-http_user_agent = cs_user_agent as http_user_agent
FIELDALIAS-operation = cs_operation as operation
FIELDALIAS-src = c_ip as src
FIELDALIAS-status = sc_status as status
FIELDALIAS-storage_name = cs_bucket as storage_name

EVAL-app = "GCP Google Cloud Storage"
# converting time_taken_micros micro seconds to milli seconds
EVAL-bytes = cs_bytes + sc_bytes
EVAL-category="GCP Google Cloud Storage"
EVAL-http_user_agent_length = len(cs_user_agent)
EVAL-http_referrer_domain= mvjoin(mvindex(split(mvindex(split(cs_referer, "/"),2), "."), -3,-1), ".")
EVAL-response_time = time_taken_micros / 1000
# spliting cs_uri(/path/to/file?param1=value1&param2=value2&param2=value2) with "?"
EVAL-uri_path = mvindex(split(cs_uri, "?"), 0)
EVAL-uri_query = mvindex(split(cs_uri, "?"), 1)
EVAL-url = "https://" . cs_host . cs_uri
EVAL-url_domain = cs_host
EVAL-url_length = len("https://" . cs_host . cs_uri)
EVAL-vendor_product="GCP Google Cloud Storage"

## Lookups ##
LOOKUP-gcp_httpstatus_lookup=gcp_httpstatus_lookup status OUTPUT status_description AS action


#####################################################
###                Alerts Logs                   ###
#####################################################

[google:gcp:security:alerts]

KV_MODE = json
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 30
TRUNCATE = 15000
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3NZ
LINE_BREAKER = ([\r\n]+)\{

## Extraction ##
################

## Aliases ##
#############
FIELDALIAS-splunk_ta_gcp_cim_alerts_body=finding.sourceProperties.Explanation as body
FIELDALIAS-splunk_ta_gcp_cim_alerts_description=finding.sourceProperties.Explanation AS description
FIELDALIAS-splunk_ta_gcp_cim_alerts_id=finding.name as id
FIELDALIAS-splunk_ta_gcp_cim_alerts_signature=finding.category as signature
FIELDALIAS-splunk_ta_gcp_cim_alerts_subject=finding.category as subject
FIELDALIAS-splunk_ta_gcp_cim_alerts_src_type= resource.type as src_type
FIELDALIAS-splunk_ta_gcp_cim_alerts_type=finding.category as type


## Eval ##
##########
EVAL-app = "GCP Security Command Center"
EVAL-a_project_id = coalesce('finding.sourceProperties.ProjectId',\
                     'data.finding.sourceProperties.ProjectId',\
                     'resource.projectDisplayName',\
                     'data.resource.projectDisplayName')

EVAL-dest = if(match(coalesce('finding.sourceProperties.ProjectId', 'data.finding.sourceProperties.ProjectId', 'resource.projectDisplayName', 'data.resource.projectDisplayName'), "(none)"), \
    mvindex(split('finding.name', "/"), 1), \
    coalesce('finding.sourceProperties.ProjectId', 'data.finding.sourceProperties.ProjectId', 'resource.projectDisplayName', 'data.resource.projectDisplayName'))

EVAL-dest_type = if(match(coalesce('finding.sourceProperties.ProjectId', 'data.finding.sourceProperties.ProjectId', 'resource.projectDisplayName', 'data.resource.projectDisplayName'), "(none)"), \
    lower(mvindex(split('resource.type', "."), -1)), "project")

EVAL-severity = if('finding.severity' == "SEVERITY_UNSPECIFIED", "unknown", lower('finding.severity'))
EVAL-signature_id = mvindex(split('finding.name', "/"), 5)
EVAL-vendor_account = mvindex(split('finding.name', "/"), 1)

## Lookups ##
LOOKUP-gcp_alerts_type_lookup=gcp_alerts_type_lookup severity OUTPUT type_description AS type
