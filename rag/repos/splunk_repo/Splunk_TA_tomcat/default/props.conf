##
## SPDX-FileCopyrightText: 2024 Splunk, Inc.
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
[tomcat:jmx]
KV_MODE = json
FIELDALIAS-jmx.jvm_description = jvmDescription AS jvm_description
EVAL-ip_address = replace(host,"\[([^\\]+)\]:\d+|([^:]+):(.*)","\1")
EVAL-product_family = "Apache Foundation Software"
EVAL-vendor_product = "Apache Tomcat"
#REPORT-tomcat_vendor_product = tomcat_vendor_product
FIELDALIAS-application_instance = host AS application_instance
# EVAL-application_server = host."|".vendor_product
# LOOKUP-tomcat_rootdir = tomcat_rootdir_jmxhost_lookup jmxhost AS host OUTPUT rootdir
LOOKUP-tomcat_version_number = tomcat_version_number_lookup jmxhost AS host OUTPUT version_number
LOOKUP-tomcat_appserver_port_number = tomcat_application_server_lookup jmxhost AS host OUTPUT appserver_port_number
LOOKUP-tomcat_application_server = tomcat_application_server_lookup jmxhost AS host OUTPUT application_server

[source::java.lang:type=ClassLoading...]
FIELDALIAS-jmx.current_loaded = LoadedClassCount AS current_loaded
FIELDALIAS-jmx.total_loaded = TotalLoadedClassCount AS total_loaded
FIELDALIAS-jmx.total_unloaded = UnloadedClassCount AS total_unloaded

[source::java.lang:type=Compilation...]
FIELDALIAS-jmx.compilation_time = TotalCompilationTime AS compilation_time

[source::java.lang:type=Memory...]
FIELDALIAS-jmx.heap_committed = HeapMemoryUsage.committed AS heap_committed
FIELDALIAS-jmx.heap_initial = HeapMemoryUsage.init AS heap_initial
FIELDALIAS-jmx.heap_max = HeapMemoryUsage.max AS heap_max
FIELDALIAS-jmx.heap_used = HeapMemoryUsage.used AS heap_used
FIELDALIAS-jmx.non_heap_committed = NonHeapMemoryUsage.committed AS non_heap_committed
FIELDALIAS-jmx.non_heap_initial = NonHeapMemoryUsage.init AS non_heap_initial
FIELDALIAS-jmx.non_heap_max = NonHeapMemoryUsage.max AS non_heap_max
FIELDALIAS-jmx.non_heap_used = NonHeapMemoryUsage.used AS non_heap_used
FIELDALIAS-jmx.objects_pending = ObjectPendingFinalizationCount AS objects_pending
EVAL-memory_heap_free_percent = round(if('HeapMemoryUsage.committed' == 0, 0, ('HeapMemoryUsage.committed' - 'HeapMemoryUsage.used') / 'HeapMemoryUsage.committed' * 100), 2)
EVAL-memory_used = round(('HeapMemoryUsage.used' + 'NonHeapMemoryUsage.used')/1024/1024, 2)
EVAL-memory_heap_used = round('HeapMemoryUsage.used'/1024/1024, 2)
EVAL-memory_heap_size = round('HeapMemoryUsage.committed'/1024/1024, 2)

[source::java.lang:type=OperatingSystem...]
FIELDALIAS-jmx.os_architecture = Arch AS os_architecture
FIELDALIAS-jmx.total_processors = AvailableProcessors AS total_processors
FIELDALIAS-jmx.os = Name AS os
FIELDALIAS-jmx.system_load = SystemLoadAverage AS system_load
FIELDALIAS-jmx.os_version = Version AS os_version
FIELDALIAS-jmx.committed_memory = CommittedVirtualMemorySize AS committed_memory
FIELDALIAS-jmx.cpu_time = ProcessCpuTime AS cpu_time
FIELDALIAS-jmx.free_physical_memory = FreePhysicalMemorySize AS free_physical_memory
FIELDALIAS-jmx.free_swap = FreeSwapSpaceSize AS free_swap
FIELDALIAS-jmx.max_file_descriptors = MaxFileDescriptorCount AS max_file_descriptors
FIELDALIAS-jmx.open_file_descriptors = OpenFileDescriptorCount AS open_file_descriptors
FIELDALIAS-jmx.physical_memory = TotalPhysicalMemorySize AS physical_memory
FIELDALIAS-jmx.swap_space = TotalSwapSpaceSize AS swap_space
EVAL-cpu_utilization_percent = ProcessCpuLoad * 100

[source::java.lang:type=Runtime...]
FIELDALIAS-jmx.process_name = Name AS process_name
FIELDALIAS-jmx.start_time = StartTime AS start_time
FIELDALIAS-jmx.uptime = Uptime AS uptime
FIELDALIAS-jmx.version = VmVersion AS version
FIELDALIAS-jmx.InputArguments = InputArguments{} AS InputArguments
EVAL-catalina_base = substr(mvindex(InputArguments, mvfind(InputArguments, "^-Dcatalina.base=")), 17)
# EVAL-full_host_name = replace(Name, "(\d+)@(.*)", "\2")
REPORT-tomcat_full_host_name = tomcat_full_host_name
# EVAL-application_server = full_host_name + " " + vendor_product
FIELDALIAS-jmx.vendor_product_runtime = VmName AS vendor_product_runtime
FIELDALIAS-jmx.runtime_vendor = SpecVendor AS runtime_vendor
FIELDALIAS-jmx.vendor_product_runtime_version = SpecVersion AS vendor_product_runtime_version

[source::java.lang:type=Threading...]
EVAL-current_cpu_time = CurrentThreadCpuTime/1000/1000/1000
EVAL-current_user_time = CurrentThreadUserTime/1000/1000/1000
FIELDALIAS-jmx.daemon_thread_count = DaemonThreadCount AS daemon_thread_count
FIELDALIAS-jmx.omu_supported = ObjectMonitorUsageSupported AS omu_supported
FIELDALIAS-jmx.peak_thread_count = PeakThreadCount AS peak_thread_count
FIELDALIAS-jmx.synch_supported = SynchronizerUsageSupported AS synch_supported
FIELDALIAS-jmx.cm_enabled = ThreadContentionMonitoringEnabled AS cm_enabled
FIELDALIAS-jmx.cm_supported = ThreadContentionMonitoringSupported AS cm_supported
FIELDALIAS-jmx.thread_count = ThreadCount AS thread_count
FIELDALIAS-jmx.cpu_time_enabled = ThreadCpuTimeEnabled AS cpu_time_enabled
FIELDALIAS-jmx.cpu_time_supported = ThreadCpuTimeSupported AS cpu_time_supported
FIELDALIAS-jmx.threads_started = TotalStartedThreadCount AS threads_started
EVAL-available_threads_count_percent = if(TotalStartedThreadCount == 0, 0, (TotalStartedThreadCount - ThreadCount) / TotalStartedThreadCount * 100)
FIELDALIAS-jmx.thread_id = threadId AS thread_id
LOOKUP-tomcat_thread_state = tomcat_thread_states threadState OUTPUT thread_state

[source::java.lang:type=MemoryPool,name=...]
EVAL-memory_pool_size = round('Usage.committed'/1024/1024, 2)

[source::java.lang:type=MemoryPool,name=...(Perm Gen|Metaspace)...]
EVAL-perm_gen_usage = round('Usage.used'/1024/1024, 2)

[source::java.lang:type=GarbageCollector,name=...]
FIELDALIAS-jmx.garbage_collection_count = CollectionCount AS garbage_collection_count
FIELDALIAS-jmx.garbage_collection_time = CollectionTime AS garbage_collection_time

[source::Catalina:type=WebappClassLoader,host=...,context=...]
FIELDALIAS-jmx.application_name = contextName AS application_name

[source::Catalina:type=GlobalRequestProcessor,name=...]
EVAL-response_time = if(requestCount==0, 0, processingTime/requestCount)
FIELDALIAS-request_count = requestCount as request_count

[source::Catalina:type=Connector,port=...]
EVAL-appserver_port_number_tmp = if(match(protocol, "^[Hh][Tt][Tt][Pp].*"), port, null())

[source::Catalina:type=Manager,host=...,context=...]
FIELDALIAS-active_sessions_count = activeSessions AS active_sessions_count
FIELDALIAS-rejected_sessions_count = rejectedSessions AS rejected_sessions_count
FIELDALIAS-expired_sessions_count = expiredSessions AS expired_sessions_count

[tomcat:runtime:log]
FIELDALIAS-body = message AS body
LOOKUP-tomcat_severity = tomcat_severity_lookup log_level OUTPUT severity
# appserver inventory
REPORT-runtime_log_extract = runtime_log_extract, tomcat_version_number_extract
# LOOKUP-tomcat_jmxhost = tomcat_rootdir_jmxhost_lookup rootdir AS source, ip_address AS host OUTPUT jmxhost
# LOOKUP-tomcat_rootdir = tomcat_rootdir_jmxhost_lookup rootdir AS source, ip_address AS host OUTPUT rootdir
LOOKUP-tomcat_version_number = tomcat_version_number_lookup rootdir AS source, ip_address AS host OUTPUT version_number
LOOKUP-tomcat_appserver_port_number = tomcat_application_server_lookup rootdir AS source, ip_address AS host OUTPUT appserver_port_number
LOOKUP-tomcat_application_server = tomcat_application_server_lookup rootdir AS source, ip_address AS host OUTPUT application_server

[tomcat:access:log]
SHOULD_LINEMERGE = false
# For Load Balancing on UF
EVENT_BREAKER_ENABLE = true
EXTRACT-access = ^(?P<ip>(?:\d{1,3}\.){3}\d{1,3}|(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}|(?:[A-Fa-f0-9]{1,4}:){1,6}::(?:[A-Fa-f0-9]{1,4})?|(?:[A-Fa-f0-9]{1,4}:){1,5}(:[A-Fa-f0-9]{1,4}){1,2}|(?:[A-Fa-f0-9]{1,4}:){1,4}(:[A-Fa-f0-9]{1,4}){1,3}|(?:[A-Fa-f0-9]{1,4}:){1,3}(:[A-Fa-f0-9]{1,4}){1,4}|(?:[A-Fa-f0-9]{1,4}:){1,2}(:[A-Fa-f0-9]{1,4}){1,5}|(?:[A-Fa-f0-9]{1,4}:){1,1}(:[A-Fa-f0-9]{1,4}){1,6}|::(?:[A-Fa-f0-9]{1,4}){0,1}(:[A-Fa-f0-9]{1,4}){0,7}|::(?:ffff:(?:\d{1,3}\.){3}\d{1,3}))\s-\s(?P<user>\S+)\s\[(?P<timestamp>\d+/\w+/\d{4}:\d{2}:\d{2}:\d{2}\s[\+\-]\d{4})\]\s\"(?P<method>[A-Z]{3,7})\s(?P<request_uri>[^\"]+)\s(?P<protocol>[^\"]+)\"\s(?P<status>\d{3})\s(?P<bytes_sent>\d+|-)$
FIELDALIAS-bytes_in = bytes_sent AS bytes_in
FIELDALIAS-http_method = method AS http_method
FIELDALIAS-uri_query = request_uri AS uri_query
FIELDALIAS-ip = ip AS src
EVAL-bytes_in = if(bytes_in=="-", 0, bytes_in)
EVAL-bytes_sent = if(bytes_sent=="-", 0, bytes_sent)
EVAL-vendor_product = "Apache Tomcat"
EVAL-product_family = "Apache Foundation Software"
EVAL-bytes = coalesce(bytes_in, 0)+coalesce(bytes_out, 0)
# appserver performance
FIELDALIAS-response_code = status AS response_code
# LOOKUP-tomcat_jmxhost = tomcat_rootdir_jmxhost_lookup rootdir AS source, ip_address AS host OUTPUT jmxhost
# LOOKUP-tomcat_rootdir = tomcat_rootdir_jmxhost_lookup rootdir AS source, ip_address AS host OUTPUT rootdir
LOOKUP-tomcat_version_number = tomcat_version_number_lookup rootdir AS source, ip_address AS host OUTPUT version_number
LOOKUP-tomcat_appserver_port_number = tomcat_application_server_lookup rootdir AS source, ip_address AS host OUTPUT appserver_port_number
LOOKUP-tomcat_application_server = tomcat_application_server_lookup rootdir AS source, ip_address AS host OUTPUT application_server

[tomcat:access:log:splunk]
SHOULD_LINEMERGE = false
# For Load Balancing on UF
EVENT_BREAKER_ENABLE = true
EVAL-vendor_product = "Apache Tomcat"
EVAL-bytes_in = 0
EVAL-bytes_out = if(bytes_sent=="-", 0, bytes_sent)
EVAL-bytes = if(bytes_sent=="-", 0, bytes_sent)
EVAL-src = if(x_forwarded_for=="-", remote_host, x_forwarded_for)
EVAL-src_ip = if(x_forwarded_for=="-", remote_ip, x_forwarded_for)
FIELDALIAS-dest = server AS dest
FIELDALIAS-dest_port = server_port AS dest_port
EVAL-url = case((server_port==443 OR server_port==8443), "https://", 1==1, "http://").url
EVAL-url_domain = case(match(url, "^(\d+\.\d+\.\d+\.\d+):?\d{0,5}\/"), null(), match(url, "^\[?([^\-\/]*:[^\-\/\]]*:[^\-\/\]]*)\]?:?\d{0,5}\/"), null(), match(url, "^(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*"), replace(url, "^(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*", "\1"), true(), replace(url, "^([^:\/]+\.?[^:\/]+):?\d{0,5}\/.*", "\1"))
EVAL-http_referrer_domain = case(match(http_referrer, ":\/\/(\d+\.\d+\.\d+\.\d+):?\d{0,5}\/"), null(), match(http_referrer, ".*:\/\/\[?([^\-\/]*:[^\-\/\]]*:[^\-\/\]]*)\]?:?\d{0,5}\/.*"), null(), http_referrer=="-", "-", match(http_referrer, "(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*"), replace(http_referrer, "(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*", "\1"), true(), replace(http_referrer, ".*:\/\/([^:\/]+\.?[^:\/]+):?\d{0,5}\/.*", "\1"))
EVAL-http_user_agent_length = if(http_user_agent=="" or http_user_agent=="-", 0, len(http_user_agent))
EVAL-category = if(http_content_type=="" or http_content_type=="-", null(), http_content_type)
LOOKUP-tomcat_http_status = tomcat_http_status status OUTPUT status_description as action

[source::...splunk_ta_tomcat_main.log*]
sourcetype = ta:tomcat:main:log

[source::...splunk_ta_tomcat_util.log*]
sourcetype = ta:tomcat:util:log

[source::...splunk_ta_tomcat_account_validation.log*]
sourcetype = ta:tomcat:account:validation
