#
# SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
# SPDX-License-Identifier: LicenseRef-Splunk-8-2021
#
#


[jira:datacenter:audit:log]
SHOULD_LINEMERGE=false
LINE_BREAKER=}(\s){
NO_BINARY_CHECK=true
TRUNCATE=0
TIME_PREFIX="epochSecond":

REPORT-jira_audit_log = jira_audit_log

EVAL-action = case( 'auditType.action' IN ("User created","Custom field created","Field Configuration scheme created","Global permission added","Group created","Notification scheme created","Permission scheme copied","Permission scheme created","Project component created","Project created","Project version created","Workflow created","Workflow scheme created","Board created","Field Configuration scheme copied","Filter created","Issue type created","New resolution created","Notification scheme copied","Personal access token created","Workflow scheme copied"), "created",   \
'auditType.action' IN ("User updated","Custom field updated","Field Configuration scheme added to project","Field Configuration scheme updated","Notification scheme added to project","Notification scheme updated","Permission scheme added to project","Permission scheme updated","Project archived","Project component updated","Project roles changed","Project updated","Project version archived","Project version released","Project version unarchived","Project version unreleased","Project version updated","User added to group","User removed from group","Workflow scheme added to project","Workflow scheme updated","Workflow updated","New license added","Notification scheme removed from project","Permission scheme removed from project","Project category changed","Project component archived","Project component restored","Project restored","Resolution set as default","Resolution updated","User anonymized"), "modified",  \
'auditType.action' IN ("Custom field deleted","Field Configuration scheme deleted","Global permission deleted","Group deleted","Notification scheme deleted","Permission scheme deleted","Project component deleted","Project deleted","Project role deleted","Project version deleted","Workflow deleted","Workflow scheme deleted","Personal access token deleted","Resolution deleted","User deleted"), "deleted", \
'auditType.action' IN ("Audit Log search performed"), "read", \
'auditType.action' IN ("User anonymization started"), "started"  )
EVAL-change_type = case( 'auditType.action' IN ("User created","User updated","User deleted","Personal access token created","Personal access token deleted","User anonymization started","User anonymized"), "AAA",  \
true(), "filesystem" )
EVAL-dest = if( isnull(dest), host, dest )
FIELDALIAS-dvc = host AS dvc

FIELDALIAS-object = affectedObjects{}.name AS object
EVAL-object_attrs = case( 'changedValues{}.key' != "" , mvzip(spath(_raw, "changedValues{}.key"), spath(_raw, "changedValues{}.to"),"=") )
FIELDALIAS-object_category = affectedObjects{}.type AS object_category
EVAL-object_category = if( isnull(object_category) AND 'auditType.action'=="Audit Log search performed", "Query", object_category )
FIELDALIAS-object_id = affectedObjects{}.id AS object_id

EVAL-result = if('auditType.action'="Audit Log search performed" AND 'extraAttributes{}.name' != "" , mvzip(spath(_raw, "extraAttributes{}.name"), spath(_raw, "extraAttributes{}.value"),"="), 'auditType.action')

EVAL-src = spath(_raw, "source")
EVAL-src_user = case( 'auditType.action' IN ("User created","User updated","User deleted","Personal access token created","Personal access token deleted","User anonymization started","User anonymized"), 'author.name')
EVAL-src_user_type = case( 'auditType.action' IN ("User created","User updated","User deleted","Personal access token created","Personal access token deleted","User anonymization started","User anonymized"), 'author.type')

EVAL-status = "success"

EVAL-user = if( 'auditType.action' IN ("User created","User updated","User deleted","Personal access token created","Personal access token deleted","User anonymization started","User anonymized"), 'affectedObjects{}.name', 'author.name')
EVAL-user_type = if( 'auditType.action' IN ("User created","User updated","User deleted","Personal access token created","Personal access token deleted","User anonymization started","User anonymized"), 'affectedObjects{}.type', 'author.type')

EVAL-vendor_product = "Jira Data Center"

[jira:datacenter:security:log]
REPORT-jira_security_log = jira_security_log,jira_security_log_message

EVAL-action=case( like(message, "%PASSED authentication%") OR like(message, "%HttpSession created%") , "success",   \
like(message, "%CAPTCHA%") OR like(message, "%FAILED authentication%") OR like(message, "%do not have % permission%") OR like(message,"The user '%' is NOT AUTHORIZED to perform this request"), "failure",   \
(like(url,"/secure/Logout%") AND (like(message, "The user '%' has logged out."))) OR like(message,"HttpSession % destroyed for '%'"), "logoff")
EVAL-app = case( like(message, "%PASSED authentication%") OR like(message, "%HttpSession created%") OR like(message, "%CAPTCHA%") OR like(message, "%FAILED authentication%") OR like(message, "%do not have % permission%") OR like(message,"The user '%' is NOT AUTHORIZED to perform this request"),  "jira" )
EVAL-change_type = case( (like(url,"/secure/Logout%") AND (like(message, "The user '%' has logged out.") OR like(message,"HttpSession % destroyed for '%'")) OR (like(url,"/secure/admin/WebSudoAuthenticate%") AND ( like(message,"HttpSession % destroyed for '%'") )) OR (like(message,"The user '%' is NOT AUTHORIZED to perform this request")) ), "AAA")

FIELDALIAS-dest = host AS dest
FIELDALIAS-dvc = host AS dvc

EVAL-object = case( (like(url,"/secure/Logout%") AND (like(message, "The user '%' has logged out."))) OR like(message,"HttpSession % destroyed for '%'"), "user session" )
EVAL-object_category = case( (like(url,"/secure/Logout%") AND (like(message, "The user '%' has logged out."))) OR like(message,"HttpSession % destroyed for '%'"), "session" )
EVAL-object_id = case( (like(url,"/secure/Logout%") AND (like(message, "The user '%' has logged out."))) OR like(message,"HttpSession % destroyed for '%'"), session )

EVAL-reason = case( like(message, "%CAPTCHA%") OR like(message, "%FAILED authentication%") OR like(message, "%do not have % permission%") OR like(message, "%PASSED authentication%") OR like(message, "%HttpSession created%") OR like(message,"The user '%' is NOT AUTHORIZED to perform this request"), message )
FIELDALIAS-result = message AS result
EVAL-src_user = case( like(message, "%CAPTCHA%") OR like(message, "%FAILED authentication%") OR like(message, "%do not have % permission%") OR like(message,"The user '%' is NOT AUTHORIZED to perform this request"), username )
EVAL-status = case(like(message,"The user '%' is NOT AUTHORIZED to perform this request"),"failure",    \
like(message, "The user '%' has logged out.") OR like(message,"HttpSession % destroyed for '%'"), "success" )

EVAL-user = if( isnull(user), username, user )
EVAL-user_type = case( like(url,"/secure/admin/WebSudoAuthenticate%") AND ( like(message,"HttpSession % destroyed for '%'") ), "admin" )

EVAL-vendor_product = "Jira Data Center"

[jira:datacenter:log]
REPORT-jira_log = jira_log

EVAL-action = case( result IN ("Re-indexing started"), "started",   \
result IN ("Re-indexing finished"), "modified" )
EVAL-change_type = case( result IN ("Re-indexing started","Re-indexing finished"), "filesystem" )

FIELDALIAS-dest = host AS dest
FIELDALIAS-dvc = host AS dvc

EVAL-object = case( result IN ("Re-indexing started","Re-indexing finished"), "index" )
EVAL-object_category = case( result IN ("Re-indexing started","Re-indexing finished"), "index" )

EVAL-status = case( result IN ("Re-indexing started","Re-indexing finished"), "success" )
EVAL-vendor_product = "Jira Data Center"
