##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
[o365:management:activity]
TRUNCATE = 10485760
TIME_PREFIX = "CreationTime":\s*"
TIME_FORMAT = %Y-%m-%dT%H:%M:%S
KV_MODE = json
TZ = UTC
SHOULD_LINEMERGE = false

## Field Extractions using Field Transform

# CIM Authentication
REPORT-splunk_ta_o365_cim_authentication_extended_properties = extended_properties, get_extended_properties_block, get_name_value_from_extended_properties, user_agent_for_change, user_agent_auth

# CIM Change
REPORT-splunk_ta_o365_cim_change_modified_properties = get_modified_properties, extract_name_and_new_value, extract_obj_id
REPORT-splunk_ta_o365_cim_change_extract_params = extract_params

# CIM Email Filtering
REPORT-splunk_ta_o365_cim_email_filtering_src_user_domain = extract_src_user_domain, extract_recipient_domain

## Field Aliases

# CIM Authentication
FIELDALIAS-splunk_ta_o365_cim_authentication_vendor_account = OrganizationId as vendor_account

# CIM Change
FIELDALIAS-splunk_ta_o365_cim_change_command = Operation as command
FIELDALIAS-splunk_ta_o365_cim_change_file_path = SourceRelativeUrl as file_path
FIELDALIAS-splunk_ta_o365_cim_change_src_name = env_cloud_role as src_name

# CIM Data Access
FIELDALIAS-splunk_ta_o365_cim_data_access_tenant_id = OrganizationId as tenant_id
FIELDALIAS-splunk_ta_o365_cim_data_access_object_size = FileSizeBytes as object_size

## Calculated Fields

# CIM Common Fields
# checking of operation on user ObjectId has user Id of the user where action is performed, else just mapping UserId
EVAL-dest = case(isnotnull(env_cloud_name),env_cloud_name, \
		Operation IN ("UserLoggedIn","UserLoginFailed"),"Microsoft Office 365 AzureActiveDirectory", \
		Workload IN ("SecurityComplianceCenter", "AzureActiveDirectory", "OneDrive", "SharePoint", "MicrosoftTeams", "Exchange", "SkypeForBusiness", "Yammer", "MicrosoftForms"), OrganizationId, \
		true(),ObjectId)
EVAL-dest_name = case(isnotnull(env_cloud_name),env_cloud_name, \
		Operation IN ("UserLoggedIn","UserLoginFailed"),"Microsoft Office 365 AzureActiveDirectory", \
		Workload IN ("SecurityComplianceCenter", "AzureActiveDirectory", "OneDrive", "SharePoint", "MicrosoftTeams", "Exchange", "SkypeForBusiness", "Yammer", "MicrosoftForms"), OrganizationId, \
		true(),ObjectId)
EVAL-src = case(isnotnull(ActorIpAddress) and ActorIpAddress!="",ActorIpAddress, \
		isnotnull(ClientIP) and ClientIP!="",ClientIP, \
		isnotnull(env_cloud_role) and env_cloud_role!="",env_cloud_role)
EVAL-src_ip = case(isnotnull(ActorIpAddress) and ActorIpAddress!="",ActorIpAddress, \
		isnotnull(ClientIP) and ClientIP!="",ClientIP)
EVAL-src_user = case(like(Operation, "% user%") AND UserId != "EMPTY.", UserId, \
		Operation="AddedToGroup" and TargetUserOrGroupType="Member", UserId, \
		Operation IN ("Add owner to application.","Add member to group.","Add member to role."), actorUPN, \
		Operation IN ("Add service principal."), UserId, \
		Operation IN ("RemovedFromSiteCollection","RemovedFromSecureLink","DLPRuleMatch","DlpRuleMatch","Remove-MailContact", "New-MailContact", "Set-Mailbox", "New-Mailbox", "Set-User", "Add-RecipientPermission", "Remove-RoleGroupMember", "Set-AdminAuditLogConfig") and Workload IN ("SharePoint","Exchange"), UserId, \
		Operation IN ("Add owner to group.","Disable account.","Remove member from group.","Change user password.","Update StsRefreshTokenValidFrom Timestamp.","Reset user password.","Remove owner from group.","Restore user.","Add eligible member to role.","Remove eligible member from role.","Remove member from role.","Remove owner from application.","Set user manager.", "Add service principal.", "Remove service principal.") and Workload IN ("AzureActiveDirectory"),mvindex('Actor{}.ID',coalesce(mvfind('Actor{}.Type',"^5$"), mvfind('Actor{}.Type',"^1$"))), \
		Workload="OneDrive" and Operation IN ("DLPRuleMatch","DLPRuleUndo"),'SharePointMetaData.From')
EVAL-src_user_type = case(isnotnull(UserType) and Operation IN ("AddedToGroup","RemovedFromSiteCollection","RemovedFromSecureLink","Add owner to group.","Disable account.","Remove member from group.","Change user password.","Update StsRefreshTokenValidFrom Timestamp.","Reset user password.","Remove owner from group.","Restore user.","Add eligible member to role.","Remove eligible member from role.","Remove member from role.","Remove owner from application.","Set user manager.","Remove-MailContact", "New-MailContact", "Set-Mailbox", "New-Mailbox", "Set-User", "Add-RecipientPermission", "Remove-RoleGroupMember", "Set-AdminAuditLogConfig", "Add service principal.", "Remove service principal.") and Workload IN ("OneDrive","SharePoint","AzureActiveDirectory","Exchange"), case(UserType==0, "Regular", \
        UserType==1, "Reserved", \
        UserType==2, "Admin", \
        UserType==3, "DcAdmin", \
        UserType==4, "System", \
        UserType==5, "Application", \
        UserType==6, "ServicePrincipal", \
        UserType==7, "CustomPolicy", \
        UserType==8, "SystemPolicy"))
EVAL-user = case(Operation IN ("Delete user.","Update user.","Add owner to group.","Disable account.","Remove member from group.","Change user password.","Update StsRefreshTokenValidFrom Timestamp.","Reset user password.","Remove owner from group.","Restore user.","Add eligible member to role.","Remove eligible member from role.","Remove member from role.","Remove owner from application.","Set user manager.","Add user.","Add member to group.", "Add service principal.", "Remove service principal.") and Workload="AzureActiveDirectory", mvindex('Target{}.ID',coalesce(mvfind('Target{}.Type',"^5$"), mvfind('Target{}.Type',"^1$"))), \
		Workload="AzureActiveDirectory" AND isnotnull(coalesce(mvfind('Actor{}.Type',"^5$"), mvfind('Actor{}.Type',"^1$"))), mvindex('Actor{}.ID',coalesce(mvfind('Actor{}.Type',"^5$"), mvfind('Actor{}.Type',"^1$"))), \
		Operation IN ("AddedToGroup","RemovedFromSecureLink","RemovedFromSiteCollection") and TargetUserOrGroupType=="Member" and Workload IN ("SharePoint","OneDrive"), TargetUserOrGroupName, \
		like(Operation, "% user%") or Operation IN ("Add owner to application."), ObjectId, \
		Operation IN ("Remove-MailContact", "New-MailContact", "Set-Mailbox", "New-Mailbox", "Set-User", "Add-RecipientPermission", "Remove-RoleGroupMember", "Set-AdminAuditLogConfig") and Workload="Exchange", ObjectId, \
		true(), UserId)
EVAL-user_type = case(Operation="AddedToGroup" and TargetUserOrGroupType="Member", null(), \
		isnotnull(UserType) and NOT Operation IN ("RemovedFromSiteCollection","RemovedFromSecureLink","Add owner to group.","Disable account.","Remove member from group.","Change user password.","Update StsRefreshTokenValidFrom Timestamp.","Reset user password.","Remove owner from group.","Restore user.","Add eligible member to role.","Remove eligible member from role.","Remove member from role.","Remove owner from application.","Set user manager.","Remove-MailContact", "New-MailContact", "Set-Mailbox", "New-Mailbox", "Set-User", "Add-RecipientPermission", "Remove-RoleGroupMember", "Set-AdminAuditLogConfig", "Add service principal.", "Remove service principal."), case(UserType==0, "Regular", \
        UserType==1, "Reserved", \
        UserType==2, "Admin", \
        UserType==3, "DcAdmin", \
        UserType==4, "System", \
        UserType==5, "Application", \
        UserType==6, "ServicePrincipal", \
        UserType==7, "CustomPolicy", \
        UserType==8, "SystemPolicy"))
EVAL-user_agent = coalesce(user_agent_change,UserAgent,client_info_str)
EVAL-vendor_product = "Microsoft Office 365 " + Workload

# CIM Authentication
# Evaluating null check for Client mapping to app to support backward compatibilty or use Workload
EVAL-app = if(isnull(Client),Workload,Client)
EVAL-reason = if(Operation="UserLoginFailed" and isnotnull(LogonError), LogonError, null())
EVAL-user_id = case(Operation IN ("UserLoginFailed","UserLoggedIn") AND isnotnull(mvfind('Actor{}.Type',"^3$")),mvindex('Actor{}.ID',mvfind('Actor{}.Type',"^3$")),true(),UserId)
EVAL-authentication_service = case(NOT Operation IN ("TeamsSessionStarted"), Workload)

#For AzureAD authentication events the failure is indicated by presence of LogonError field
EVAL-action=if(Operation="UserLoginFailed", "failure", case(Operation IN ("ForeignRealmIndexLogonInitialAuthUsingADFSFederatedToken","PasswordLogonCookieCopyUsingDAToken","PasswordLogonInitialAuthUsingADFSFederatedToken","PasswordLogonInitialAuthUsingPassword","UserLoggedIn"), case(isnull(LogonError), "success", true(), "failure")))

# CIM Change
EVAL-dvc = case(Workload="SharePoint",if(match(ObjectId, ".*https?:\/\/(.*?)\/.*"), replace(ObjectId,".*https?:\/\/(.*?)\/.*","\1"), Workload),true(),Workload)
EVAL-object = case(Workload="AzureActiveDirectory", case(Operation IN ("Add contact.", "Delete contact."), "contacts", \
			Operation IN ("Add owner to application.","Add member to role."), ObjectId, \
			true(), mvindex('Target{}.ID',coalesce(mvfind('Target{}.Type',"^5$"), mvfind('Target{}.Type',"^1$")))), \
		Workload="MicrosoftForms", FormName, \
		Workload="SkypeForBusiness" and Operation IN ("Get-CsTeamsUpgradeOverridePolicy"), ObjectName, \
		Workload="OneDrive", case(Operation IN ("PageViewed", "PageViewedExtended"), mvindex(split(ObjectId, "/"), -1), \
			Operation IN ("SharingInheritanceBroken"), case(ItemType="File", SourceFileName, ItemType="List", ListTitle), \
			Operation IN ("ListItemCreated", "ListColumnCreated", "ListCreated", "ListColumnDeleted", "ListViewed"), ListTitle, \
			Operation IN ("CompanyLinkCreated", "AnonymousLinkCreated"), SourceRelativeUrl, \
			Operation IN ("AddedToGroup", "SiteCollectionAdminAdded", "SiteCollectionAdminRemoved"), TargetUserOrGroupName, \
			Operation IN ("DLPRuleMatch", "DLPRuleUndo"), 'SharePointMetaData.FileName', \
			Operation IN ("SearchQueryPerformed"), null, \
			Operation IN ("GroupAdded"), "group", \
			true(), SourceFileName), \
		Workload="SharePoint", case(Operation IN ("AccessRequestRejected", "WebAccessRequestApproverModified", "AccessRequestApproved", "ClientViewSignaled", "AccessRequestCreated", "SiteCollectionCreated", "SiteCollectionQuotaModified", "SiteCollectionAdminRemoved", "SiteCollectionAdminAdded", "SharingPolicyChanged", "PermissionLevelAdded", "GroupAdded","GroupRemoved", "GroupUpdated", "WebMembersCanShareModified", "PageViewed", "PageViewedExtended", "PagePrefetched", "WebRequestAccessModified"), mvindex(split(ObjectId, "/"), -1), \
			Operation IN ("SharingInheritanceBroken"), case(ItemType="File", SourceFileName, ItemType="List", ListTitle), \
			Operation IN ("DLPRuleMatch", "DLPRuleUndo"), 'SharePointMetaData.FileName', \
			Operation IN ("AnonymousLinkCreated", "AnonymousLinkUpdated"), SourceRelativeUrl, \
			Operation IN ("RemovedFromGroup", "AddedToGroup"), TargetUserOrGroupName, \
			Operation IN ("SecureLinkUpdated","FolderCopied", "FolderMoved"), if(match(ObjectId, ".*\/Shared Documents\/(.*?)(?:\/|$)"), replace(ObjectId, ".*\/Shared Documents\/(.*?)(?:\/|$).*", "\1"), null), \
			Operation IN ("CompanyLinkCreated","SecureLinkCreated","SharingSet","FileCheckedOut","SharingRevoked","FolderDeleted","FolderModified","FolderRecycled", "FolderCopied", "FolderRenamed", "FolderDeletedFirstStageRecycleBin", "FolderRestored", "FileDeletedFirstStageRecycleBin", "FileRecycled", "FileTranscriptRequested", "AddedToSecureLink", "FolderCreated", "FileAccessed", "FileCheckOutDiscarded", "FileAccessedExtended", "FileCopied", "FileCheckedIn", "FileDownloaded", "FilePreviewed", "FileVersionsAllDeleted", "FileRestored", "FileMoved", "FileRenamed", "FileModified", "FileModifiedExtended", "FileUploaded", "FileDeleted"), SourceFileName, \
			Operation IN ("ListUpdated","ListColumnCreated","ListColumnUpdated","ListViewUpdated","ListViewed", "ListItemCreated", "ListRestored", "ListDeleted", "ListCreated", "ListColumnDeleted"), ListTitle, \
			Operation IN ("DLPRuleMatch", "DLPRuleUndo"), 'SharePointMetaData.FileName', \
			Operation IN ("SearchQueryPerformed"), null, \
			true(), if(match(ObjectId, ".*\/sites\/(.*?)(?:\/|$)"), replace(ObjectId, ".*\/sites\/(.*?)(?:\/|$).*", "\1"), null)), \
		Workload="MicrosoftTeams", case(Operation="CreatedApproval", ObjectId, \
			NOT Operation IN ("TeamsSessionStarted"), TeamName), \
		Workload="SecurityComplianceCenter" and Operation IN ("New-ProtectionAlert", "Remove-DlpCompliancePolicy", "Remove-DlpComplianceRule", "Set-DlpComplianceRule", "Set-DlpCompliancePolicy", "New-DlpComplianceRule", "New-DlpCompliancePolicy", "Get-DlpSensitiveInformationType"), "Microsoft 365 compliance center", \
		Workload="Exchange", case(Operation IN ("MailboxLogin"), 'MailboxOwnerUPN', \
			Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete"), coalesce('Item.Subject','AffectedItems{}.Subject'), \
			Operation IN ("ModifyFolderPermissions","AddFolderPermissions"), 'Item.ParentFolder.Name', \
			true(),ObjectId), \
		Workload="Yammer", ObjectId)
EVAL-object_attrs = case(Workload="AzureActiveDirectory", case(Operation IN ("Add contact.", "Delete contact."), mvindex('Target{}.ID',coalesce(mvfind('Target{}.Type',"^5$"), mvfind('Target{}.Type',"^1$"))), \
			Operation IN ("Update application.","Update group.","Delete user.","Set group license.","Update policy.","Add policy.","Update company settings","Create company settings","Update application – Certificates and secrets management ","Add role definition.","Set directory feature on tenant.","Add User","Update user.","Delete User","Add group.","Update group","Add device.","Add application.","Update application","Add Owner to application","Add Member to group","Add Member to Role","Add user.","Add owner to application.","Add member to group.","Add member to role."), modified_properties_name), \
		Workload="OneDrive" and Operation IN ("SharingPolicyChanged"), modified_properties_name, \
		Workload="Exchange", case(Operation IN ("Remove-MailContact"), ObjectId, \
			Operation IN ("New-MailContact"), mvindex('Parameters{}.Value',mvfind('Parameters{}.Name',"^DisplayName$"))), \
		Workload="SharePoint" and Operation IN ("AddedToGroup","RemovedFromGroup","RemovedFromSiteCollection", "RemovedFromSecureLink", "SiteCollectionAdminAdded", "SiteCollectionAdminRemoved", "AccessRequestCreated", "AccessRequestApproved", "AccessRequestRejected"), if(TargetUserOrGroupType="Member", "user", "group"), \
		true(),null)
EVAL-object_id = case(Workload="AzureActiveDirectory", case(Operation="Add owner to application.", mvindex('Actor{}.ID', mvfind('Actor{}.ID', "^([a-zA-Z]*_[a-z0-9-]+$)")), \
			true(), coalesce(mvindex('Target{}.ID', mvfind('Target{}.ID', "^([a-zA-Z]*_[A-Za-z0-9-]+$)")), targetObjectId)), \
		Workload="OneDrive", case(Operation IN ("SiteCollectionQuotaModified","PermissionLevelAdded", "SiteCollectionCreated", "SharingPolicyChanged", "SiteLocksChanged", "SearchQueryPerformed", "GroupAdded"), Site, \
			Operation IN ("SharingInheritanceBroken"), case(ItemType="File", SourceFileName, ItemType="List", ListId), \
			Operation IN ("ListViewed", "ListItemCreated", "ListColumnCreated", "ListCreated"), ListId, \
			true(), null), \
		Workload="SharePoint", case(Operation IN ("ListItemRestored", "ListItemRecycled"), ListItemUniqueId, \
			Operation IN ("SharingInheritanceBroken"), case(ItemType="File", SourceFileName, ItemType="List", ListId), \
			Operation IN ("ListUpdated","ListColumnCreated","ListColumnUpdated","ListViewUpdated","ListColumnDeleted", "ListItemCreated", "ListRestored", "ListDeleted", "ListCreated"), ListId, \
			NOT Operation IN ("AddedToGroup","CompanyLinkCreated","SharingSet","FileDeleted","FileUploaded","FileModifiedExtended","FileModified","FileRenamed","FileMoved","FileRestored","FileVersionsAllDeleted","SecureLinkCreated","FileCheckOutDiscarded","SharingRevoked","FolderModified","FolderDeleted", "FolderCreated", "FileAccessed", "FileAccessedExtended", "FileCopied", "PageViewedExtended", "FileCheckedIn", "FilePreviewed", "PageViewed"), Site), \
		Workload="MicrosoftTeams", case(Operation="ChannelDeleted", ChannelGuid, \
			Operation IN ("CreatedApproval"), ObjectId, \
			true(), TeamGuid), \
		Workload="MicrosoftForms", FormId, \
		Workload IN ("Yammer"), ObjectId, \
		Workload="SkypeForBusiness" and Operation IN ("Get-CsTeamsUpgradeOverridePolicy"), Id, \
		Workload IN ("MicrosoftTeams", "SecurityComplianceCenter") and isnotnull(ObjectId) and Operation IN ("CreatedApproval", "Set-DlpComplianceRule", "New-DlpCompliancePolicy", "New-DlpComplianceRule", "Set-DlpCompliancePolicy"), ObjectId, \
		Workload="Exchange", case(Operation IN ("MailboxLogin"), 'MailboxOwnerSid', \
			Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete","ModifyFolderPermissions","AddFolderPermissions"), coalesce('Item.Id','AffectedItems{}.Id'), \
			true(), coalesce(obj_id,'ObjectId')))
EVAL-object_category = case(Operation IN ("AddedToGroup"), if(TargetUserOrGroupType="Member", "user", "SecurityGroup"), \
							Operation IN ("SharingInheritanceBroken"), case(ItemType="File", "file", ItemType="List", "list"), \
							Operation IN ("AddedToSecureLink","SecureLinkCreated","SharingSet","SharingRevoked","AnonymousLinkCreated", "AnonymousLinkUpdated"), if(ItemType="Folder","directory", "file"), \
							true(), object_category)
EVAL-object_path = case(Workload IN ("SharePoint", "OneDrive") and Operation IN ("DLPRuleMatch", "DLPRuleUndo"), 'SharePointMetaData.FilePathUrl', \
		Workload="SharePoint" and NOT Operation IN ("SearchQueryPerformed"), ObjectId, \
		Workload="Exchange" and Operation IN ("Create", "MoveToDeletedItems", "Update", "Move"), coalesce('Item.ParentFolder.Path','AffectedItems{}.ParentFolder.Path'), \
		Workload="OneDrive" and Operation IN ("SharingPolicyChanged","SiteCollectionCreated","ListItemCreated","ListColumnCreated","PermissionLevelAdded","AnonymousLinkCreated"), ObjectId)
EVAL-result = case(isnotnull(ResultStatus) AND ResultStatus IN ("failed", "failure", "Failed", "Failure", "Error"), coalesce(resultDescription,ResultStatusDetail,ResultStatus), \
		true(), coalesce(ResultStatus, Operation))
EVAL-status = case(ResultStatus IN ("Failed","Failure","Error"),"failure", true(), "success")

# CIM Data Access
EVAL-email = case(Workload="Yammer", UserId)
EVAL-owner = case(Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete") and Workload="Exchange", 'MailboxOwnerUPN')
EVAL-owner_email = case(Workload="Yammer", UserId, \
		Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete") and Workload="Exchange", UserId)
EVAL-owner_id = case(Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete") and Workload="Exchange", 'MailboxOwnerSid')
EVAL-app_id = case(Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete") and Workload="Exchange", 'AppId')
EVAL-object_size = case(Operation IN ("Create", "Update") and Workload="Exchange", 'Item.SizeInBytes', true(), object_size)
EVAL-parent_object = case(Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete") and Workload="Exchange", coalesce('Item.ParentFolder.Id','AffectedItems{}.ParentFolder.Id'))
EVAL-parent_object_id = case(Operation IN ("Create", "MoveToDeletedItems", "Update", "Move", "SoftDelete") and Workload="Exchange", coalesce('Item.ParentFolder.Id','AffectedItems{}.ParentFolder.Id'))

# CIM DLP Incidents
EVAL-severity = case(Operation IN ("DLPRuleMatch", "DLPRuleUndo"), 'PolicyDetails{}.Rules{}.Severity', \
					Operation IN ("AlertEntityGenerated", "AlertTriggered", "InsightGenerated", "AlertUpdated") and Workload="SecurityComplianceCenter", Severity)
EVAL-category = case(Operation IN ("DLPRuleUndo"),"documentmodified", Operation="DLPRuleMatch", "SensitiveInformation")
EVAL-signature = case(isnotnull('PolicyDetails{}.PolicyName') and Operation IN ("DLPRuleMatch") and Workload IN ("SharePoint", "OneDrive"), 'PolicyDetails{}.PolicyName', \
		isnotnull('PolicyDetails{}.Rules{}.RuleName') and Operation IN ("DLPRuleUndo") and Workload IN ("OneDrive"), 'PolicyDetails{}.Rules{}.RuleName', \
		true(), Operation)

# CIM Alerts
EVAL-type = case(Operation IN ("AlertEntityGenerated", "AlertTriggered", "InsightGenerated", "AlertUpdated") and Workload="SecurityComplianceCenter", "alert")
EVAL-description = case(Operation IN ("AlertUpdated","InsightGenerated","AlertEntityGenerated", "AlertTriggered") and Workload="SecurityComplianceCenter", 'Name')
EVAL-body = case(Operation IN ("AlertUpdated","InsightGenerated","AlertEntityGenerated", "AlertTriggered") and Workload="SecurityComplianceCenter", 'Name')
EVAL-id = case(Operation IN ("AlertEntityGenerated", "AlertTriggered", "AlertUpdated", "InsightGenerated") and Workload="SecurityComplianceCenter", coalesce(AlertId, Id))
EVAL-signature_id = case(isnotnull(PolicyId) and Operation IN ("AlertEntityGenerated", "AlertTriggered", "AlertUpdated") and Workload="SecurityComplianceCenter", PolicyId)

# CIM Email Filtering
EVAL-file_name = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'PolicyDetails{}.Rules{}.ConditionsMatched.SensitiveInformation{}.Location',true(),SourceFileName)
EVAL-file_size = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.FileSize')
EVAL-internal_message_id = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.MessageID')
EVAL-message_id = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.UniqueID')
EVAL-orig_recipient = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.To{}')
EVAL-orig_src = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.From')
EVAL-recipient = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.To{}')
EVAL-recipient_count = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.RecipientCount')
EVAL-recipient_domain = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", mvdedup(RecipientDomain))
EVAL-size = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.FileSize')
EVAL-subject = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", 'ExchangeMetaData.Subject')
EVAL-src_user_domain = case(Operation IN ("DlpRuleMatch") and Workload="Exchange", SrcUserDomain)

## Field Lookups
# As we can see below multiple lookups has OUTPUT as same field, looks like we are overriding the value of these fields. But we are not.
#  For example LOOKUP-splunk_ta_o365_cim_change_analysis & LOOKUP-splunk_ta_o365_cim_authentication has action field as output.
#  The Authentication and Change Data models have different meanings for their action field.
#  Here we are not overriding the value of action because input value Operation in lookup files are mutually exclusive.

# Non CIM Fields
# Lookup to generate AzureActiveDirectoryEventType name from value
LOOKUP-splunk_ta_o365_cim_authentication_event_type = splunk_ta_o365_cim_authentication_AzureActiveDirectoryEvent AzureActiveDirectoryEventType OUTPUT event_type

# Lookup to generate RecordType name from value
LOOKUP-splunk_ta_o365_cim_authentication_record_type = splunk_ta_o365_cim_authentication_RecordType RecordType OUTPUT record_type


# CIM Authentication
# Lookup to generate dataset_name and action from Workload, Operation and ResultStatus for authentication events
LOOKUP-splunk_ta_o365_cim_authentication = splunk_ta_o365_cim_authentication Workload, Operation OUTPUTNEW dataset_name

# Lookup to generate action CIM field from ResultStatus and dataset_name as this is only applicable to authentication events
LOOKUP-splunk_ta_o365_cim_authentication_action = splunk_ta_o365_cim_authentication_ResultStatus ResultStatus, dataset_name OUTPUTNEW action

# Lookup to generate UserAuthenticationMethod name from value
LOOKUP-splunk_ta_o365_cim_authentication_authentication_method = splunk_ta_o365_cim_authentication_UserAuthenticationMethod UserAuthenticationMethod OUTPUT authentication_method

# CIM Change
# Lookup to generate dataset_name, action, change_type and object_category from Workload and Operation for account_management and endpoint_changes events
LOOKUP-splunk_ta_o365_cim_change_analysis_object = splunk_ta_o365_cim_change_analysis Workload, Operation OUTPUTNEW dataset_name, action, change_type, object_category, object_category as object_attrs
LOOKUP-splunk_ta_o365_cim_change_analysis_attrs = splunk_ta_o365_cim_change_object_attrs Workload, Operation OUTPUTNEW object_attrs

# CIM Data Access
# LOOKUP for CIM data model Data Access which outputs dataset_name, action and object_category based on Workload and Operation field
LOOKUP-splunk_ta_o365_cim_data_access = splunk_ta_o365_cim_data_access Workload, Operation OUTPUTNEW dataset_name, action, object_category

# CIM DLP Incidents
# LOOKUP for CIM data model Data Access which outputs dataset_name,action,object_category and dlp_type based on Workload and Operation field
LOOKUP-splunk_ta_o365_cim_dlp_incidents = splunk_ta_o365_cim_dlp_incidents Workload, Operation OUTPUTNEW dataset_name,action,object_category,dlp_type

# CIM Email Filtering
# LOOKUP for CIM data model Data Access which outputs dataset_name based on Workload and Operation field
LOOKUP-splunk_ta_o365_cim_email_filtering = splunk_ta_o365_cim_email_filtering Workload, Operation OUTPUTNEW dataset_name action

# CIM Alerts
# LOOKUP for CIM data model Data Access which outputs dataset_name based on Workload and Operation field
LOOKUP-splunk_ta_o365_cim_alerts = splunk_ta_o365_cim_alerts Workload, Operation OUTPUTNEW dataset_name

# CIM Authentication for MicrosoftTeams workload
LOOKUP-splunk_ta_o365_cim_microsoftteams_authentication = splunk_ta_o365_cim_microsoftteams_authentication Workload,Operation OUTPUTNEW dataset_name,action

# CIM Authentication for ErrorNumber in Reason
LOOKUP-splunk_ta_o365_cim_authentication_Reason = splunk_ta_o365_cim_authentication_Reason action, ErrorNumber OUTPUTNEW Description as reason

[o365:service:status]
TIME_PREFIX = "StatusTime":\s*"
KV_MODE = json
TZ = UTC

FIELDALIAS-splunk_ta_o365_cim_alerts_app = Workload as app
FIELDALIAS-splunk_ta_o365_cim_alerts_dest = host as dest
FIELDALIAS-splunk_ta_o365_cim_alerts_description = StatusDisplayName as description
FIELDALIAS-splunk_ta_o365_cim_alerts_id = IncidentIds{} as id
FIELDALIAS-splunk_ta_o365_cim_alerts_signature = StatusDisplayName as signature

EVAL-severity = case(Status IN ("ServiceDegradation", "ServiceOperational", "ServiceRestored"), "medium")
EVAL-type = case(Status IN ("ServiceDegradation", "ServiceOperational", "ServiceRestored"), "event")

[o365:service:message]
TIME_PREFIX = "LastUpdatedTime":\s*"
KV_MODE = json
TZ = UTC

FIELDALIAS-splunk_ta_o365_cim_alerts_body = ImpactDescription as body
FIELDALIAS-splunk_ta_o365_cim_alerts_dest = host as dest
FIELDALIAS-splunk_ta_o365_cim_alerts_description = ImpactDescription as description
FIELDALIAS-splunk_ta_o365_cim_alerts_id = Id as id
FIELDALIAS-splunk_ta_o365_cim_alerts_signature = Status as signature

EVAL-app = if(isnotnull(Workload) and Workload!="" and Workload!="null", Workload, "Microsoft Office 365")
EVAL-severity = case(Severity="Sev2", "medium", Severity="Normal", "low")
EVAL-type = "event"

[o365:graph:api]
TIME_PREFIX = "createdDateTime":\s*"
KV_MODE = json
TZ = UTC

[o365:cas:api]
TIMESTAMP_FIELDS = timestamp
TIME_FORMAT = %s%3N
TIME_PREFIX = timestamp
KV_MODE = json
TZ = UTC

EVAL-app = "Microsoft Cloud App Security"
EVAL-description = case(isnotnull(isSystemAlert), if(isnull(description) OR description="", title, description), true(), description)
EVAL-dest = case(isnotnull(isSystemAlert), URL)
EVAL-severity = case(isnotnull(isSystemAlert), \
		case(severityValue="0", "low", severityValue="1", "medium", severityValue="2", "high", severityValue="3", "informational"), \
		isnotnull(policyType), case('alertSeverity{}' IN ("0", "LOW"), "low", 'alertSeverity{}' IN ("1", "MEDIUM"), "medium", \
		'alertSeverity{}' IN ("2", "HIGH"), "high", 'alertSeverity{}' IN ("3", "INFORMATIONAL"), "informational"))
EVAL-severity_id = case(isnotnull(isSystemAlert), severityValue, \
		isnotnull(policyType), case('alertSeverity{}' IN ("0", "LOW"), "0", 'alertSeverity{}' IN ("1", "MEDIUM"), "1", \
		'alertSeverity{}' IN ("2", "HIGH"), "2", 'alertSeverity{}' IN ("3", "INFORMATIONAL"), "3"))
EVAL-signature = case(isnotnull(isSystemAlert), title, isnotnull(policyType), displayName)
EVAL-src = case(isnotnull(isSystemAlert), URL, isnotnull(policyType), "Cloud App Discovery Policy")
EVAL-type = "event"
EVAL-user = case(isnotnull(isSystemAlert), handledByUser)

[o365:service:healthIssue]
KV_MODE = json
TZ = UTC
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
description = "O365 service health issues"
TIME_PREFIX = "lastModifiedDateTime":\s*"

[o365:service:updateMessage]
KV_MODE = json
TZ = UTC
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
description = "O365 service update messages"
TIME_PREFIX = "lastModifiedDateTime":\s*"

[o365:reporting:messagetrace]
KV_MODE = json
MAX_TIMESTAMP_LOOKAHEAD = 30
SHOULD_LINEMERGE = 0
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%Q
TZ = UTC
TIME_PREFIX = "Received": "
REPORT-splunk_ta_o365_cim_all_email_domain = extract_messagetrace_src_user_domain, extract_messagetrace_recipient_domain
FIELDALIAS-o365_reporting_messagetrace_basic_alias_recipient = RecipientAddress AS recipient
FIELDALIAS-o365_reporting_messagetrace_basic_alias_src_user = SenderAddress AS src_user
FIELDALIAS-o365_reporting_messagetrace_basic_alias_dest = ToIP AS dest
FIELDALIAS-o365_reporting_messagetrace_basic_alias_src = FromIP AS src
FIELDALIAS-o365_reporting_messagetrace_basic_alias_message_id = MessageId AS message_id
FIELDALIAS-o365_reporting_messagetrace_basic_alias_subject = Subject AS subject
FIELDALIAS-o365_reporting_messagetrace_basic_alias_size = Size AS size
FIELDALIAS-o365_reporting_messagetrace_basic_alias_internal_message_id = MessageTraceId AS internal_message_id
FIELDALIAS-o365_reporting_messagetrace_basic_alias_status_code = Status AS status_code
EVAL-vendor_product = "Microsoft Office 365 MessageTrace"
EVAL-recipient_count = "1"
LOOKUP-splunk_ta_o365_cim_messagetrace_action = splunk_ta_o365_cim_messagetrace_action Status OUTPUT action

[source::...splunk_ta_o365_*.log*]
sourcetype= splunk:ta:o365:log

[o365:metadata]
SHOULD_LINEMERGE = 0
TRUNCATE = 0
EVAL-user = if(match(source, "^ms_eid_users:tenant_id:.*"), displayName, null())
EVAL-user_id = if(match(source, "^ms_eid_users:tenant_id:.*"), userPrincipalName, null())
EVAL-vendor_product = "Microsoft Entra ID"
DATETIME_CONFIG = CURRENT
