##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##

[oracle:database]
description = Collect Oracle database information
interval = 7200
index_time_mode = current
mode = batch
query = SELECT * FROM V$DATABASE
sourcetype = oracle:database

[oracle:instance]
description = Collect Oracle instance information
interval = 7200
index_time_mode = current
mode = batch
query = SELECT * FROM v$instance \
CROSS JOIN (SELECT VALUE as NLS_CHARACTERSET FROM nls_database_parameters WHERE parameter='NLS_CHARACTERSET') \
CROSS JOIN (SELECT VALUE as NLS_LANGUAGE FROM nls_database_parameters WHERE parameter='NLS_LANGUAGE')  \
CROSS JOIN (SELECT VALUE as NLS_TERRITORY FROM nls_database_parameters WHERE parameter='NLS_TERRITORY') \
CROSS JOIN (SELECT VALUE as NLS_SORT FROM nls_database_parameters WHERE parameter='NLS_SORT')
sourcetype = oracle:instance

[oracle:session]
description = Collect Oracle session information
interval = 900
index_time_mode = current
mode = batch
query = SELECT * FROM V$SESSION CROSS JOIN \
(SELECT instance_name, host_name FROM v$instance)
sourcetype = oracle:session

[oracle:tablespace]
description = Collect Oracle tablespace information
interval = 3600
index_time_mode = current
mode = batch
query = SELECT * FROM DBA_TABLESPACES
sourcetype = oracle:tablespace

[oracle:tablespaceMetrics]
description = Collect Oracle tablespace metrics
interval = 900
index_time_mode = current
mode = batch
query = select a.tablespace_name,\
       TOTAL_BYTES,\
       TOTAL_BLOCKS,\
       FREE_BYTES,\
       (a.TOTAL_BYTES - nvl(b.FREE_BYTES, 0)) USED_BYTES\
from  ( select  f.tablespace_name,\
               sum(f.bytes) TOTAL_BYTES,\
               sum(f.blocks) TOTAL_BLOCKS\
        from dba_data_files f\
        group by tablespace_name) a,\
      ( select  f.tablespace_name,\
               sum(f.bytes)  FREE_BYTES\
        from dba_free_space f\
        group by tablespace_name) b\
where a.tablespace_name = b.tablespace_name (+)\
union all\
select\
       h.tablespace_name as tablespace_name,\
       sum(h.bytes_free + h.bytes_used) TOTAL_BYTES,\
       sum(h.blocks_free + h.blocks_used) TOTAL_BLOCKS,\
       sum((h.bytes_free + h.bytes_used) - nvl(p.bytes_used, 0)) FREE_BYTES,\
       sum(nvl(p.bytes_used, 0)) USED_BYTES\
from   sys.v_$TEMP_SPACE_HEADER h, sys.v_$Temp_extent_pool p, dba_temp_files f\
where  p.file_id(+) = h.file_id\
and    p.tablespace_name(+) = h.tablespace_name\
and    f.file_id = h.file_id\
and    f.tablespace_name = h.tablespace_name\
group by h.tablespace_name
sourcetype = oracle:tablespaceMetrics

[oracle:sga]
description = Collect Oracle System Global Area (SGA) information
interval = 300
index_time_mode = current
mode = batch
query = SELECT NAME, TOTAL, FREE \
FROM ( \
  SELECT 'SGA' NAME,  (SELECT SUM(VALUE) FROM V$SGA) TOTAL,  (\
      SELECT SUM(BYTES) FROM V$SGASTAT \
      WHERE NAME = 'free memory') FREE  FROM DUAL  ) \
      UNION \
      SELECT NAME, TOTAL, TOTAL - USED FREE \
      FROM ( SELECT 'PGA' NAME,  (\
        SELECT VALUE FROM V$PGASTAT \
        WHERE NAME = 'aggregate PGA target parameter') TOTAL, \
        (SELECT VALUE FROM V$PGASTAT WHERE NAME = 'total PGA allocated') USED  FROM DUAL  ) \
        UNION \
        SELECT NAME, TOTAL, FREE  FROM (\
          SELECT 'Shared pool' NAME,  \
          (SELECT SUM(BYTES) FROM V$SGASTAT WHERE POOL = 'shared pool' GROUP BY POOL) TOTAL,  \
          (SELECT BYTES FROM V$SGASTAT WHERE NAME = 'free memory' and POOL = 'shared pool') FREE  FROM DUAL  )  \
          UNION  \
          SELECT NAME, TOTAL, FREE  FROM (\
            SELECT 'Large pool' NAME,  \
            (SELECT SUM(BYTES) FROM V$SGASTAT WHERE POOL = 'large pool' GROUP BY POOL) TOTAL,  \
            (SELECT BYTES FROM V$SGASTAT WHERE POOL = 'large pool' AND NAME = 'free memory') FREE  FROM DUAL  )
sourcetype = oracle:sga

[oracle:libraryCachePerf]
description = Collect Oracle cache metrics
interval = 60
index_time_mode = current
mode = batch
query = SELECT NAMESPACE, GETS, GETHITS, GETHITRATIO, PINS, PINHITS, PINHITRATIO, \
RELOADS, INVALIDATIONS, DLM_LOCK_REQUESTS, DLM_PIN_REQUESTS, DLM_PIN_RELEASES, \
DLM_INVALIDATION_REQUESTS, DLM_INVALIDATIONS \
FROM V$LIBRARYCACHE
sourcetype = oracle:libraryCachePerf

[oracle:dbFileIoPerf]
description = Collect Oracle I/O performance metrics
interval = 120
index_time_mode = current
mode = batch
query = SELECT 'DB_FILE' TYPE, D.NAME FILE_NAME, F.PHYRDS, F.PHYWRTS, F.AVGIOTIM, F.MINIOTIM, F.MAXIOWTM, F.MAXIORTM \
FROM V$FILESTAT F, V$DATAFILE D WHERE F.FILE# = D.FILE#  \
UNION \
SELECT 'TEMP_DB_FILE' TYPE, T.NAME FILE_NAME,  F.PHYRDS, F.PHYWRTS, F.AVGIOTIM, F.MINIOTIM, F.MAXIOWTM, F.MAXIORTM \
FROM V$FILESTAT F, V$TEMPFILE T  WHERE F.FILE# = T.FILE#  ORDER BY 1
sourcetype = oracle:dbFileIoPerf

[oracle:osPerf]
description = Collect Oracle host performance metrics
interval = 300
index_time_mode = current
mode = batch
query = SELECT STAT_NAME, VALUE, CUMULATIVE FROM V$OSSTAT
sourcetype = oracle:osPerf

[oracle:sysPerf]
description = Collect Oracle system performance metrics
interval = 60
index_time_mode = current
mode = rising
query = SELECT * FROM V$SYSMETRIC_HISTORY \
CROSS JOIN (SELECT instance_name, HOST_NAME FROM v$instance) \
WHERE END_TIME > ? \
ORDER BY END_TIME ASC
rising_column_index = 2
sourcetype = oracle:sysPerf

[oracle:connections]
description = Collect Oracle connections performance metrics
interval = 300
index_time_mode = current
mode = batch
query = SELECT instance_name, HOST_NAME, connections FROM v$instance \
CROSS JOIN (SELECT count(*) as connections FROM v$session WHERE username is NOT null)
sourcetype = oracle:connections

[oracle:connections:pool]
description = Collect Oracle connections pool performance metrics
interval = 300
index_time_mode = current
mode = batch
query = SELECT host_name, instance_name, active_pooled_connections, total_pooled_connections \
FROM v$instance \
CROSS JOIN (\
  SELECT count(case when status='ACTIVE' then 1 end) active_pooled_connections, count(*) total_pooled_connections \
  FROM DBA_CPOOL_INFO)
sourcetype = oracle:pool:connections

[oracle:table]
description = Collect Oracle tables information
interval = 300
index_time_mode = current
mode = batch
query = SELECT host_name, instance_name, all_tables.*, dba_segments.bytes, All_TAB_MODIFICATIONS.timestamp as last_update_time \
FROM all_tables \
LEFT JOIN All_TAB_MODIFICATIONS on all_tables.table_name=All_TAB_MODIFICATIONS.table_name \
LEFT JOIN dba_segments on dba_segments.segment_name=all_tables.table_name  \
CROSS JOIN (SELECT host_name, instance_name FROM v$instance) WHERE dba_segments.segment_type='TABLE'
sourcetype = oracle:table

[oracle:database:size]
description = Collect Oracle database size metrics
interval = 300
index_time_mode = current
mode = batch
query = SELECT HOST_NAME, instance_name,current_size FROM v$instance \
CROSS JOIN (SELECT round((sum(bytes)/1024/1024),2) as current_size FROM v$datafile)
sourcetype = oracle:database:size

[oracle:user]
description = Collect Oracle users metrics
interval = 900
index_time_mode = current
mode = batch
query = SELECT * FROM ALL_USERS CROSS JOIN (SELECT host_name, instance_name FROM v$instance)
sourcetype = oracle:user

[oracle:query]
description = Collect Oracle queries performance metrics
interval = 600
index_time_mode = current
mode = batch
query = SELECT\
   instance_name,   host_name,   all_users.username,   all_users.user_id,\
sql_id, sql_fulltext, plan_hash_value, DECODE(command_type,11,'ALTERINDEX',15,'ALTERTABLE',170,'CALLMETHOD',9,'CREATEINDEX',1,'CREATETABLE',7,'DELETE' ,50,'EXPLAIN',2,'INSERT',26,'LOCKTABLE',47,'PL/SQLEXECUTE',3,'SELECT',6,'UPDATE',189,'UPSERT') command_name,\
    CASE\
        WHEN executions > 0\
        THEN ROUND(elapsed_time/executions,3)\
        ELSE NULL\
    END elap_per_exec,\
    parsing_schema_name,    module,    elapsed_time,\
    executions,\
    PHYSICAL_READ_BYTES/1024 read_kb,\
    buffer_gets,\
    rows_processed\
FROM v$sqlarea,all_users \
CROSS JOIN (SELECT instance_name,host_name FROM v$instance) \
WHERE v$sqlarea.PARSING_USER_ID = all_users.user_id
sourcetype = oracle:query

[oracle:audit:unified]
description = Collect Oracle Audit Unified. It can be used only with Oracle versions 12 and above.
interval = 300
mode = rising
query = SELECT * FROM ( \
SELECT \
(CAST((event_timestamp at TIME zone 'UTC') AS TIMESTAMP))EVENT_TIMESTAMP_UTC, \
AUDIT_TYPE, \
SESSIONID, \
PROXY_SESSIONID, \
OS_USERNAME, \
USERHOST, \
TERMINAL, \
INSTANCE_ID, \
DBID, \
AUTHENTICATION_TYPE, \
DBUSERNAME, \
DBPROXY_USERNAME, \
EXTERNAL_USERID, \
GLOBAL_USERID, \
CLIENT_PROGRAM_NAME, \
DBLINK_INFO, \
XS_USER_NAME, \
XS_SESSIONID, \
ENTRY_ID, \
STATEMENT_ID, \
EVENT_TIMESTAMP, \
ACTION_NAME, \
RETURN_CODE, \
OS_PROCESS, \
TRANSACTION_ID, \
SCN, \
EXECUTION_ID, \
OBJECT_SCHEMA, \
OBJECT_NAME, \
SQL_TEXT, \
SQL_BINDS, \
APPLICATION_CONTEXTS, \
CLIENT_IDENTIFIER, \
NEW_SCHEMA, \
NEW_NAME, \
OBJECT_EDITION, \
SYSTEM_PRIVILEGE_USED, \
SYSTEM_PRIVILEGE, \
AUDIT_OPTION, \
OBJECT_PRIVILEGES, \
ROLE, \
TARGET_USER, \
EXCLUDED_USER, \
EXCLUDED_SCHEMA, \
EXCLUDED_OBJECT, \
ADDITIONAL_INFO, \
UNIFIED_AUDIT_POLICIES, \
FGA_POLICY_NAME, \
XS_INACTIVITY_TIMEOUT, \
XS_ENTITY_TYPE, \
XS_TARGET_PRINCIPAL_NAME, \
XS_PROXY_USER_NAME, \
XS_DATASEC_POLICY_NAME, \
XS_SCHEMA_NAME, \
XS_CALLBACK_EVENT_TYPE, \
XS_PACKAGE_NAME, \
XS_PROCEDURE_NAME, \
XS_ENABLED_ROLE, \
XS_COOKIE, \
XS_NS_NAME, \
XS_NS_ATTRIBUTE, \
XS_NS_ATTRIBUTE_OLD_VAL, \
XS_NS_ATTRIBUTE_NEW_VAL, \
DV_ACTION_CODE, \
DV_ACTION_NAME, \
DV_EXTENDED_ACTION_CODE, \
DV_GRANTEE, \
DV_RETURN_CODE, \
DV_ACTION_OBJECT_NAME, \
DV_RULE_SET_NAME, \
DV_COMMENT, \
DV_FACTOR_CONTEXT, \
DV_OBJECT_STATUS, \
OLS_POLICY_NAME, \
OLS_GRANTEE, \
OLS_MAX_READ_LABEL, \
OLS_MAX_WRITE_LABEL, \
OLS_MIN_WRITE_LABEL, \
OLS_PRIVILEGES_GRANTED, \
OLS_PROGRAM_UNIT_NAME, \
OLS_PRIVILEGES_USED, \
OLS_STRING_LABEL, \
OLS_LABEL_COMPONENT_TYPE, \
OLS_LABEL_COMPONENT_NAME, \
OLS_PARENT_GROUP_NAME, \
OLS_OLD_VALUE, \
OLS_NEW_VALUE, \
RMAN_SESSION_RECID, \
RMAN_SESSION_STAMP, \
RMAN_OPERATION, \
RMAN_OBJECT_TYPE, \
RMAN_DEVICE_TYPE, \
DP_TEXT_PARAMETERS1, \
DP_BOOLEAN_PARAMETERS1, \
DIRECT_PATH_NUM_COLUMNS_LOADED \
FROM UNIFIED_AUDIT_TRAIL ) \
WHERE EVENT_TIMESTAMP_UTC > ? \
ORDER BY EVENT_TIMESTAMP_UTC ASC
rising_column_index = 1
index_time_mode = dbColumn
input_timestamp_column_index = 1
sourcetype = oracle:audit:unified

[oracle:sqlMonitor]
description = Collect Oracle SQL Monitor. It can be used only with Oracle versions 19c and above.
interval = 300
mode = rising
query = select V$SQL_MONITOR.SQL_EXEC_START, V$SQL_MONITOR.SQL_ID, V$SQL_MONITOR.SQL_EXEC_ID, \
V$SQL_MONITOR.KEY, \
V$SQL_MONITOR.USERNAME, \
( \
select listagg(DISTINCT HOST_NAME,', ') within group(order by HOST_NAME) \
from V$INSTANCE \
where INSTANCE_NUMBER in  \
( \
select INSTANCE_NUMBER \
FROM DBA_HIST_ACTIVE_SESS_HISTORY \
where SESSION_SERIAL# = V$SQL_MONITOR.SESSION_SERIAL# \
) \
) HOST_NAME, \
( \
select listagg(DISTINCT MACHINE,', ') within group(order by MACHINE) \
FROM DBA_HIST_ACTIVE_SESS_HISTORY \
where SESSION_SERIAL# = V$SQL_MONITOR.SESSION_SERIAL# \
) MACHINE, \
( \
SELECT NAME FROM V$DATABASE \
) DATABASE_NAME, \
( \
SELECT \
CASE \
   WHEN executions > 0 \
   THEN ROUND(elapsed_time/executions,3) \
   ELSE NULL \
END \
FROM V$SQLAREA \
Where SQL_ID = V$SQL_MONITOR.SQL_ID \
) elap_per_exec, \
V$SQL_MONITOR.SQL_TEXT,  \
( \
select max(OUTPUT_ROWS) \
from V$SQL_PLAN_MONITOR \
where KEY=V$SQL_MONITOR.KEY \
) records_affected, \
( \
select listagg(DISTINCT PLAN_OBJECT_NAME,', ') within group(order by PLAN_OBJECT_NAME) \
from V$SQL_PLAN_MONITOR \
where KEY=V$SQL_MONITOR.KEY and PLAN_OBJECT_TYPE like 'TABLE%' \
) tables_hit, \
( \
select listagg(DISTINCT PLAN_OBJECT_NAME,', ') within group(order by PLAN_OBJECT_NAME) \
from V$SQL_PLAN_MONITOR \
where KEY=V$SQL_MONITOR.KEY and PLAN_OBJECT_TYPE like 'INDEX%' \
) indexes_hit, \
cpu_time, \
fetches, \
buffer_gets, \
disk_reads, \
direct_writes, \
application_wait_time, \
concurrency_wait_time, \
cluster_wait_time, \
user_io_wait_time, \
plsql_exec_time, \
java_exec_time, \
( \
select BANNER_FULL from V$VERSION \
) BANNER_FULL \
FROM V$SQL_MONITOR WHERE SQL_EXEC_START > ? \
AND PROCESS_NAME not like 'p00%' \
ORDER BY SQL_EXEC_START ASC
rising_column_index = 1
index_time_mode = dbColumn
input_timestamp_column_index = 1
sourcetype = oracle:sqlMonitor

[oracle:connections:poolStats]
description = Collect Oracle connections pool statistics. It can be used only with Oracle versions 12.2 and above.
interval = 600
index_time_mode = current
mode = batch
query = SELECT \
V$INSTANCE.HOST_NAME, \
V$INSTANCE.INSTANCE_NAME, \
DBA_CPOOL_INFO.CONNECTION_POOL, \
DBA_CPOOL_INFO.STATUS, \
DBA_CPOOL_INFO.MAXSIZE, \
V$CPOOL_STATS.NUM_REQUESTS , \
V$CPOOL_STATS.NUM_HITS , \
V$CPOOL_STATS.NUM_MISSES , \
V$CPOOL_STATS.NUM_WAITS , \
V$CPOOL_STATS.CON_ID, \
V$VERSION.BANNER_FULL \
FROM V$INSTANCE, DBA_CPOOL_INFO, V$CPOOL_STATS, V$VERSION \
WHERE DBA_CPOOL_INFO.STATUS='ACTIVE' AND DBA_CPOOL_INFO.CONNECTION_POOL=V$CPOOL_STATS.POOL_NAME AND DBA_CPOOL_INFO.CON_ID=V$CPOOL_STATS.CON_ID
sourcetype = oracle:connections:poolStats
