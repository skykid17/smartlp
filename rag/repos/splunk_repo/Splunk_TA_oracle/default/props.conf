##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##


########## Oracle 10g/11g/12c #########

### Audit log in text format ###

[oracle:audit:text]
REPORT-ACTION_NUMBER_text = ACTION_NUMBER_text
EVAL-action = case(ACTION_NUMBER=43, if(match(ACTION, "account unlock"), "unlocked", "locked"), ACTION_NUMBER IN (17,67), "modified", ACTION_NUMBER=51, "created", ACTION_NUMBER=53, "deleted", ACTION_NUMBER=100, if(STATUS=0 OR RETURNCODE=0, "success", "failure"))
EVAL-change_type = "AAA"
FIELDALIAS-ACTION = ACTION as command
FIELDALIAS-host = host as dest host as dvc
REPORT-object_text = object_text
EVAL-object_attrs = case(ACTION_NUMBER=43 AND like(command,"%account%"), "account", ACTION_NUMBER=17 AND match(command, "(?i)unlimited tablespace"), "unlimited tablespace")
EVAL-object_category = case(ACTION_NUMBER IN (17,43,51,53), "USER", ACTION_NUMBER=67, "PROFILE")
REPORT-STATUS_text = STATUS_text
FIELDALIAS-STATUS = STATUS as result_id
REPORT-USERHOST_text = USERHOST_text
FIELDALIAS-USERHOST = USERHOST as src
EVAL-status = case(isnull(STATUS), null(), STATUS="0", "success", true(), "failure")
EVAL-user = case(ACTION_NUMBER IN (43,51,53), replace(ACTION, "(?i)(?:alter|create|drop)\s+user\s+[\"']?([^\"'\s]+).*", "\1"), ACTION_NUMBER=17 AND match(ACTION, "(?i)grant.*to"), replace(ACTION, "(?i).*to\s+[\"']?([^\"']+)[\"']?", "\1"), true(), DATABASE_USER)
EVAL-user_name = case(ACTION_NUMBER IN (43,51,53), case(match(ACTION, "(?i)(alter|create|drop)\s+user\s+[\"']?\w+[\"']?"), replace(ACTION, "(?i)(?:alter|create|drop)\s+user\s+[\"']?([^\"'\s]+).*", "\1")), ACTION_NUMBER=17, case(match(ACTION, "(?i)grant.*to\s+[\"']?\w+[\"']?"), replace(ACTION, "(?i).*to\s+[\"']?([^\"']+)[\"']?", "\1")), match(DATABASE_USER, "\w+"), DATABASE_USER)
EVAL-vendor_product = "Oracle Database Server"
EVAL-src_user = case(ACTION_NUMBER IN (43,51,53,17,67), DATABASE_USER)
FIELDALIAS-signature_id = ACTION_NUMBER as signature_id

# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)\w{3}\s+\w{3}\s+\d+\s+\d+\:\d+\:\d+\s+\d{4}
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)\w{3}\s+\w{3}\s+\d+\s+\d+\:\d+\:\d+\s+\d{4}
KV_MODE = None
EXTRACT-DB_UNIQUE_NAME = [\\|\/]admin[\\|\/](?<DB_UNIQUE_NAME>.*)[\\|\/]adump[\\|\/] in source


EVAL-app = "oracle"
REPORT-SESSIONID_text = SESSIONID_text
REPORT-ACTION_text = ACTION_text
REPORT-ORACLE_AUDIT_ACTION_text = ORACLE_AUDIT_ACTION_text
REPORT-CLIENT_TERMINAL_text = CLIENT_TERMINAL_text
REPORT-CLIENT_USER_text = CLIENT_USER_text
REPORT-DATABASE_USER_text = DATABASE_USER_text
REPORT-PRIVILEGE_text = PRIVILEGE_text
REPORT-ENTRYID_text = ENTRYID_text
REPORT-STATEMENT_text = STATEMENT_text
REPORT-USERID_text = USERID_text
REPORT-RETURNCODE_text = RETURNCODE_text
EVAL-RETURNCODE = if(isnotnull(RETURNCODE), RETURNCODE, STATUS)
REPORT-OBJNAME_text = OBJNAME_text
REPORT-OBJCREATOR_text = OBJCREATOR_text
REPORT-OSUSREID_text = OSUSERID_text
REPORT-PRIVUSED_text = PRIVUSED_text

REPORT-LOGOFFPREAD_text = LOGOFFPREAD_text
REPORT-LOGOFFLWRITE_text = LOGOFFLWRITE_text
REPORT-LOGOFFDEAD_text = LOGOFFDEAD_text
REPORT-SESSIONCPU_text = SESSIONCPU_text
REPORT-DBID_text = DBID_text


REPORT-COMMENTTEXT_text = COMMENTTEXT_text
REPORT-CLIENTIP_text = CLIENTIP_text
REPORT-CLIENTPORT_text = CLIENTPORT_text

# LOOKUP-vendor_action = oracle_action_lookup ACTION OUTPUTNEW NAME as vendor_action, NAME as command
LOOKUP-returncode = oracle_returncode_lookup RETURNCODE OUTPUTNEW result
LOOKUP-privilege_used = oracle_privilege_lookup PRIVUSED OUTPUTNEW privilege as privused
LOOKUP-login_failure_reason = oracle_login_failure_reason_lookup RETURN_CODE AS RETURNCODE OUTPUTNEW REASON as reason
LOOKUP-signature = oracle_action_lookup ACTION AS ACTION_NUMBER OUTPUTNEW NAME AS signature


EVAL-user_id = case(isnotnull(USERID), USERID)


### 10g/12g/12c Mandatory/SYS/Standard/Fine Grained Audit trail in xml format ###

[oracle:audit:xml]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)<AuditRecord>
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)<AuditRecord>
TIME_PREFIX= <Extended_Timestamp>
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%6N%Z
KV_MODE = None
EXTRACT-DB_UNIQUE_NAME = [\\|/]admin[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/]adump[\\|/] in source

EVAL-app = "oracle"
REPORT-AUDITTYPE_xml = AUDITTYPE_xml
REPORT-SESSIONID_xml = SESSIONID_xml
REPORT-STATEMENT_xml = STATEMENT_xml
REPORT-ENTRYID_xml = ENTRYID_xml
REPORT-USERID_xml = USERID_xml
FIELDALIAS-userid = USERID AS DATABASE_USER
REPORT-CLIENT_USER_xml = CLIENT_USER_xml
REPORT-OSUSERID_xml = OSUSERID_xml
REPORT-USERHOST_xml = USERHOST_xml
REPORT-OSPROCESS_xml = OSPROCESS_xml
REPORT-CLIENT_TERMINAL_xml = CLIENT_TERMINAL_xml
REPORT-INSTANCE_xml = INSTANCE_xml
REPORT-OBJCREATOR_xml = OBJCREATOR_xml
REPORT-OBJNAME_xml = OBJNAME_xml
REPORT-POLICYNAME_xml = POLICYNAME_xml
REPORT-NEWOWNER_xml = NEWOWNER_xml
REPORT-ACTION_xml = ACTION_xml
REPORT-ORACLE_AUDIT_ACTION_xml = ORACLE_AUDIT_ACTION_xml
REPORT-STMTTYPE_xml = STMTTYPE_xml
REPORT-RETURNCODE_xml = RETURNCODE_xml
REPORT-AUTHPRIVILEGE_xml = AUTHPRIVILEGE_xml
REPORT-OSPRIVILEGE_xml = OSPRIVILEGE_xml
REPORT-GRANTEE_xml = GRANTEE_xml
REPORT-PRIVUSED_xml = PRIVUSED_xml
REPORT-PRIVGRANTED_xml = PRIVGRANTED_xml
REPORT-DBID_xml = DBID_xml
REPORT-SQLTEXT_xml = SQLTEXT_xml
REPORT-CURRENT_USER_xml = CURRENT_USER_xml

REPORT-COMMENTTEXT_xml = COMMENTTEXT_xml
REPORT-CLIENTIP_xml = CLIENTIP_xml
REPORT-CLIENTPORT_xml = CLIENTPORT_xml

# NAME as command is for backward compatibility
LOOKUP-command-vendor_action-signature = oracle_action_lookup ACTION OUTPUTNEW NAME as vendor_action, NAME as signature, NAME as command
LOOKUP-privilege_used = oracle_privilege_lookup PRIVUSED OUTPUTNEW privilege as privused
LOOKUP-privilege_granted = oracle_privilege_lookup PRIVGRANTED OUTPUTNEW privilege as privgranted
LOOKUP-returncode = oracle_returncode_lookup RETURNCODE OUTPUTNEW result
LOOKUP-audittype = oracle_audit_type_lookup AUDITTYPE OUTPUTNEW audit

LOOKUP-fga_statement_type = oracle_statementtype_lookup STMTTYPE OUTPUTNEW statementtype as vendor_action

EVAL-src = case(isnotnull(USERHOST), if(like(USERHOST, "%\\%"), mvindex(split(USERHOST,"\\"),1),USERHOST), isnotnull(CLIENT_TERMINAL), CLIENT_TERMINAL)
EVAL-src_user = case(ACTION IN ("43", "51", "53", "65", "66", "67", "108") AND isnotnull(CURRENT_USER), CURRENT_USER, ACTION IN ("101"), DATABASE_USER, isnotnull(OSUSERID), OSUSERID, isnotnull(CLIENT_USER), CLIENT_USER)
EVAL-user = case(AUDITTYPE=8 AND SQLTEXT="CONNECT" AND isnotnull(CURRENT_USER), CURRENT_USER, ACTION IN ("43", "51", "53") AND isnotnull(SQLTEXT), replace(SQLTEXT, "(?i)(?:alter|create|drop)\s+user\s+[\"']?([^\"'\s]+).*", "\1"), ACTION IN ("17", "108") AND match(SQLTEXT, "(?i)grant.*to"), replace(SQLTEXT, "(?i).*to\s+[\"']?([^\"']+)[\"']?", "\1"), true(), DATABASE_USER)
EVAL-user_name = case(ACTION IN (43,51,53), case(match(SQLTEXT, "(?i)(alter|create|drop)\s+user\s+[\"']?\w+[\"']?"), replace(SQLTEXT, "(?i)(?:alter|create|drop)\s+user\s+[\"']?([^\"'\s]+).*", "\1")), ACTION IN ("17", "108"), case(match(SQLTEXT, "(?i)grant.*to\s+[\"']?\w+[\"']?"), replace(SQLTEXT, "(?i).*to\s+[\"']?([^\"']+)[\"']?", "\1")), match(DATABASE_USER, "\w+"), DATABASE_USER)
EVAL-vendor_product = "Oracle Database Server"

EVAL-action = case((oracle_audit_action IN (100, 102) OR SQLTEXT="CONNECT"), if(RETURNCODE=0, "success", "failure"), oracle_audit_action IN (101), "logoff", oracle_audit_action IN (43, 55, 67, 79, 108), "modified", oracle_audit_action IN (51, 52, 65, 114), "created", oracle_audit_action IN (53, 54, 66, 109, 115), "deleted")
EVAL-change_type = case(oracle_audit_action IN (55, 79), "update", oracle_audit_action IN (52, 114), "create", oracle_audit_action IN (54, 109, 115), "delete", oracle_audit_action IN (43, 51, 53, 65, 66, 67, 101, 108), "AAA")
EVAL-status = case(oracle_audit_action IN (43, 51, 52, 53, 54, 55, 65, 66, 67, 79, 101, 108, 109, 114, 115) AND RETURNCODE=0, "success", oracle_audit_action IN (43, 51, 52, 53, 54, 55, 65, 66, 67, 79, 101, 108, 109, 114, 115), "failure")

FIELDALIAS-result_id = RETURNCODE as result_id
EVAL-command = if(ACTION="101", "LOGOFF", SQLTEXT)
FIELDALIAS-dest_xml = host as dest, host as dvc
FIELDALIAS-obj = OBJNAME as object, OBJCREATOR as object_category
EVAL-object_category = case(ACTION IN ("43", "51", "53", "101"), "USER", ACTION IN ("65", "66", "67"), "PROFILE", true(), object_category)
FIELDALIAS-signature_id = ACTION as signature_id
LOOKUP-login_failure_reason = oracle_login_failure_reason_lookup RETURN_CODE AS RETURNCODE OUTPUTNEW REASON as reason

TRANSFORMS-null= setnull

### Alert log in text format ###

[oracle:alert:text]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)(\w{3}\s+\w{3}\s+\d+\s+\d+:\d+:\d+\s+\d{4}|\d+-\d+-\d+T\d+:\d+:\d+\.\d+[+-]\d+:\d+)
SHOULD_LINEMERGE = false
# Updated the condition as the 2nd format is seen in Oracle 21c
LINE_BREAKER = ([\r\n]+)(\w{3}\s+\w{3}\s+\d+\s+\d+:\d+:\d+\s+\d{4}|\d+-\d+-\d+T\d+:\d+:\d+\.\d+[+-]\d+:\d+)
KV_MODE = None
EVAL-DB_UNIQUE_NAME = case(like(source, "%admin%bdump%"), replace(source, ".*[\\|/]admin[\\|/](.*)[\\|/]bdump[\\|/].*", "\1"), like(source, "%rdbms%trace%"), replace(source, ".*[\\|/]rdbms[\\|/](.*)[\\|/].*[\\|/]trace[\\|/].*", "\1"))
REPORT-ORACODE = ORACODE
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION as oracle_alert_action
EVAL-app = "oracle"

### Alert log in xml format ###

[oracle:alert:xml]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)<msg
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)<msg
TIME_PREFIX= time='
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N%:z
KV_MODE = None
EXTRACT-DB_UNIQUE_NAME = [\\|/]rdbms[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/].*[\\|/]alert[\\|/] in source

EVAL-app = "oracle"
REPORT-ALERTORGID_xml = ALERTORGID_xml
REPORT-ALERTCOMPID_xml = ALERTCOMPID_xml
REPORT-ALERTTYPE_xml = ALERTTYPE_xml
REPORT-ALERTLEVEL_xml = ALERTLEVEL_xml
REPORT-ALERTHOST_xml = ALERTHOST_xml
REPORT-ALERTMSG_xml = ALERTMSG_xml
REPORT-ALERTMSGID_xml = ALERTMSGID_xml
REPORT-ORACODE = ORACODE
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION as oracle_alert_action

### Listener log in xml format ###

[oracle:listener:text]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)\d+-\w{3}-\d{4}\s+\d+\:\d+\:\d+
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)\d+-\w{3}-\d{4}\s+\d+\:\d+\:\d+
KV_MODE = None
TIME_PREFIX = ^
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %d-%b-%Y %H:%M:%S

EVAL-app = "oracle"
REPORT-ORACODE = ORACODE
REPORT-CLIENTIP_listener = CLIENTIP_listener
REPORT-DESTIP_listener = DESTIP_listener
REPORT-DESTPORT_listener = DESTPORT_listener
REPORT-CLIENTUSER_listener = CLIENTUSER_listener
REPORT-USER_listener = USER_listener
REPORT-PROGRAM_listener = PROGRAM_listener
REPORT-STATUS_listener = STATUS_listener
EVAL-action = if(STATUS=0, "success", "failure")
FIELDALIAS-dest = DESTIP as dest
FIELDALIAS-src = CLIENTIP as src
FIELDALIAS-src_user = CLIENT_USER as src_user, CLIENT_USER as user
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION as oracle_listener_action
FIELDALIAS-port = DESTPORT as port


### Listener log in xml format ###

[oracle:listener:xml]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)<msg
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)<msg
TIME_PREFIX = time='
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%3N%:z
KV_MODE = None


EVAL-app = "oracle"
REPORT-ORGID_xml = ALERTORGID_xml
REPORT-COMPID_xml = ALERTCOMPID_xml
REPORT-TYPE_xml = ALERTTYPE_xml
REPORT-LEVEL_xml = ALERTLEVEL_xml
REPORT-HOST_xml = ALERTHOST_xml
REPORT-MSG_xml = ALERTMSG_xml
REPORT-ORACODE = ORACODE
REPORT-CLIENTIP_listener = CLIENTIP_listener
REPORT-DESTIP_listener = DESTIP_listener
REPORT-DESTPORT_listener = DESTPORT_listener
REPORT-CLIENTUSER_listener = CLIENTUSER_listener
REPORT-USER_listener = USER_listener
REPORT-PROGRAM_listener = PROGRAM_listener
REPORT-STATUS_listener = STATUS_listener
EVAL-action = if(STATUS=0, "success", "failure")
FIELDALIAS-dest = DESTIP as dest
FIELDALIAS-src = CLIENTIP as src
FIELDALIAS-src_user = CLIENT_USER as src_user, CLIENT_USER as user
FIELDALIAS-port = DESTPORT as port

LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION as oracle_listener_action

[oracle:trace]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)(?=\*\*\* \d+-\d+-\d+[\sT]*\d+:\d+:\d+\.\d+\d+([+-]\d+:\d+)?|Trace file *.+\.trc|Dump file *.+\.trc)
SHOULD_LINEMERGE = false
# The `Dump file` and `T` is for Oracle version 19c and higher
LINE_BREAKER = ([\r\n]+)(?=\*\*\* \d+-\d+-\d+[\sT]*\d+:\d+:\d+\.\d+\d+([+-]\d+:\d+)?|Trace file *.+\.trc|Dump file *.+\.trc)
TRUNCATE = 0
MAX_EVENTS = 999999
EVAL-app = "oracle"
EXTRACT-DB_UNIQUE_NAME = [\\|/]rdbms[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/].*[\\|/]trace[\\|/] in source
REPORT-ORACODE = ORACODE
LOOKUP-ORACODE = oracle_ora_code_lookup ORACODE OUTPUTNEW DESCRIPTION, CAUSE, ACTION as oracle_trace_action
TRANSFORMS-null= setnull

TIME_PREFIX = \*\*\*

[oracle:incident]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
EVENT_BREAKER = ([\r\n]+)Dump file *.+\.trc
SHOULD_LINEMERGE = false
LINE_BREAKER = ([\r\n]+)Dump file *.+\.trc
TRUNCATE = 0
MAX_EVENTS = 9999
KV_MODE = None

EVAL-app = "oracle"
EXTRACT-DB_UNIQUE_NAME = [\\|/]rdbms[\\|/](?<DB_UNIQUE_NAME>.*)[\\|/].*[\\|/]incident[\\|/] in source
EXTRACT-INCIDENT = (?<INCIDENTID>\d+)\.trc$ in source

TIME_PREFIX = \*\*\*

### The following metrics are collected from DB Connect
[oracle:database]
FIELDALIAS-dest = host as dest
FIELDALIAS-object = NAME as object
EVAL-product = "Oracle Database"
EVAL-vendor = "Oracle"
EVAL-app = "oracle"
EVAL-vendor_product = "Oracle Database Server"

[oracle:instance]
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
FIELDALIAS-instance_name = INSTANCE_NAME as instance_name
EVAL-product = "Oracle Database"
EVAL-vendor = "Oracle"
EVAL-start_time = round((now()-strptime(STARTUP_TIME, "%Y-%m-%d %H:%M:%S.%1Q")),2)
EVAL-availability = case(STATUS="OPEN", "Available", 1=1, "Not Available")
EVAL-app = "oracle"
EVAL-instance_role = "database_instance"
EVAL-vendor_product = "Oracle Database Server"
FIELDALIAS-version = VERSION as version
FIELDALIAS-database_name = INSTANCE_NAME as database_name
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
FIELDALIAS-character_set = NLS_CHARACTERSET as character_set
EVAL-collation = mvappend(NLS_LANGUAGE,NLS_TERRITORY,NLS_SORT)

[oracle:sga]
FIELDALIAS-host = host as dest
EVAL-sga_buffer_cache_size = case(NAME="SGA", TOTAL)
EVAL-sga_free_memory = case(NAME="SGA", FREE)
EVAL-sga_shared_memory = case(NAME="Shared pool", TOTAL)
EVAL-sga_shared_free_memory = case(NAME="Shared pool", FREE)
EVAL-app = "oracle"
EVAL-vendor_product = "Oracle Database Server"

[oracle:tablespaceMetrics]
FIELDALIAS-host = host as dest
FIELDALIAS-tablespace_name = TABLESPACE_NAME as tablespace_name
FIELDALIAS-free_bytes = FREE_BYTES as free_bytes
EVAL-storage = round(TOTAL_BYTES/1024.0/1024.0, 2)
EVAL-storage_free = round(FREE_BYTES/1024.0/1024.0, 2)
EVAL-storage_used = round(USED_BYTES/1024.0/1024.0, 2)
EVAL-storage_used_percent = round(USED_BYTES * 100 / TOTAL_BYTES, 2)
EVAL-storage_free_percent = round(FREE_BYTES * 100 / TOTAL_BYTES, 2)
EVAL-app = "oracle"
EVAL-current_size = round(TOTAL_BYTES/1024.0/1024.0, 2)
EVAL-vendor_product = "Oracle Database Server"

[oracle:session]
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
FIELDALIAS-instance_name = INSTANCE_NAME as instance_name
FIELDALIAS-session_id = SID as session_id
FIELDALIAS-session_status = STATUS as session_status
EVAL-database_name = INSTANCE_NAME
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME

FIELDALIAS-user = USERNAME as user
FIELDALIAS-wait_time = WAIT_TIME as wait_time
FIELDALIAS-seconds_in_wait = SECONDS_IN_WAIT as seconds_in_wait
FIELDALIAS-wait_state = STATE as wait_state
FIELDALIAS-last_call_minute = LAST_CALL_ET as last_call_minute
FIELDALIAS-machine = MACHINE as machine
EVAL-app = "oracle"
EVAL-vendor_product = "Oracle Database Server"

REPORT-ORACLE_SUFFIX = ORACLE_SUFFIX

[oracle:sysPerf]
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
FIELDALIAS-INSTANCE_NAME = INSTANCE_NAME as instance_name , INSTANCE_NAME as database_name
SHOULD_LINEMERGE = false
EVAL-instance_reads = case(METRIC_NAME="Physical Read Total IO Requests Per Sec", VALUE)
EVAL-instance_writes = case(METRIC_NAME="Physical Write Total IO Requests Per Sec", VALUE)
EVAL-avg_executions = case(METRIC_NAME="Executions Per Sec", VALUE)
EVAL-cpu_load_percent = case(METRIC_NAME="Host CPU Utilization (%)" OR METRIC_NAME="Database CPU Time Ratio", VALUE)
EVAL-cpu_time = case(METRIC_NAME="Host CPU Usage Per Sec" OR METRIC_NAME="CPU Usage Per Sec" OR METRIC_NAME="CPU Usage Per Txn", VALUE/100)
EVAL-mem_committed = case(METRIC_NAME="Total PGA Allocated", VALUE/1024.0/1024.0)
EVAL-mem_used = case(METRIC_NAME="Total PGA Used by SQL Workareas", VALUE/1024.0/1024.0)
EVAL-thruput = case(METRIC_NAME="Network Traffic Volume Per Sec", VALUE/1024.0)
EVAL-read_ops = case(METRIC_NAME="Physical Read IO Requests Per Sec" OR METRIC_NAME="Physical Read Total IO Requests Per Sec" OR METRIC_NAME="Physical Reads Direct Lobs Per Sec" OR METRIC_NAME="Physical Reads Direct Lobs Per Txn" OR METRIC_NAME="Physical Reads Direct Per Sec" OR METRIC_NAME="Physical Reads Direct Per Txn" OR METRIC_NAME="Physical Reads Per Sec" OR METRIC_NAME="Physical Reads Per Txn", VALUE)
EVAL-write_ops = case(METRIC_NAME="Physical Write IO Requests Per Sec" OR METRIC_NAME="Physical Write Total IO Requests Per Sec" OR METRIC_NAME="Physical Writes Direct Lobs Per Sec" OR METRIC_NAME="Physical Writes Direct Lobs Per Txn" OR METRIC_NAME="Physical Writes Direct Per Sec" OR METRIC_NAME="Physical Writes Direct Per Txn" OR METRIC_NAME="Physical Writes Per Sec" OR METRIC_NAME="Physical Writes Per Txn", VALUE)
EVAL-read_blocks = case(METRIC_NAME="Physical Read Bytes Per Sec" OR METRIC_NAME="Physical Read Total Bytes Per Sec", VALUE/4096)
EVAL-write_blocks = case(METRIC_NAME="Physical Write Bytes Per Sec" OR METRIC_NAME="Physical Write Total Bytes Per Sec", VALUE/4096)
EVAL-app = "oracle"
EVAL-transaction_rate = case(METRIC_NAME=="User Transaction Per Sec", VALUE)
EVAL-deadlock_rate = case(METRIC_NAME=="Enqueue Deadlocks Per Sec", VALUE)
EVAL-instance_read_iops = case(METRIC_NAME="Physical Reads Per Sec", VALUE)
EVAL-instance_write_iops = case(METRIC_NAME="Physical Writes Per Sec", VALUE)
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
EVAL-vendor_product = "Oracle Database Server"


[oracle:osPerf]
# Uncomment this line if you are using DBX 1.0
# REPORT-ORACLE_OS_PERF = ORACLE_OS_PERF
SHOULD_LINEMERGE = false
EVAL-app = "oracle"

[oracle:audit:unified]
TZ = UTC
SHOULD_LINEMERGE = false
EXTRACT-SQL_TEXT = SQL_TEXT="(?<SQL_TEXT>(?:.|\n)*?)(?=(?:",\s\S+=|"$))
EVAL-app = "Oracle Database Server"

EVAL-action = case(ACTION_NAME="LOGON" AND RETURN_CODE=0, "success", ACTION_NAME="LOGON", "failure", ACTION_NAME="LOGOFF", "logoff", ACTION_NAME IN ("GRANT", "ALTER PROFILE"), "acl_modified", ACTION_NAME="CREATE USER" OR ACTION_NAME="CREATE PROFILE", "created", ACTION_NAME="DROP USER" OR ACTION_NAME="DROP PROFILE", "deleted", ACTION_NAME="ALTER USER" AND like(SQL_TEXT,"%account unlock%"), "unlocked", ACTION_NAME="ALTER USER" AND like(SQL_TEXT,"%account lock%"), "locked")
EVAL-change_type = "AAA"
EVAL-command = case(ACTION_NAME="LOGOFF", "LOGOFF", true(), SQL_TEXT)
FIELDALIAS-host = host as dest, host as dvc
EVAL-object = case(ACTION_NAME="LOGOFF", DBUSERNAME, true(), OBJECT_NAME)
EVAL-object_attrs = if(ACTION_NAME="LOGOFF" OR (ACTION_NAME="ALTER USER" AND like(SQL_TEXT,"%account%")), "account", null())
EVAL-object_category = case(ACTION_NAME="LOGOFF" OR like(ACTION_NAME,"%USER") OR ACTION_NAME="GRANT", "USER", like(ACTION_NAME,"%PROFILE"), "PROFILE")
FIELDALIAS-RETURN_CODE = RETURN_CODE as result_id
EVAL-result = case(RETURN_CODE="0", "success", true(), "failure")
EVAL-src = if(like(USERHOST,"%\%"), mvindex(split(USERHOST,"\\"), -1), USERHOST)
EVAL-src_nt_domain = if(like(USERHOST,"%\%"), mvindex(split(USERHOST,"\\"), 0), null())
EVAL-status = case(RETURN_CODE="0", "success", true(), "failure")
EVAL-user = case(like(ACTION_NAME,"%USER"), OBJECT_NAME, ACTION_NAME="GRANT", replace(SQL_TEXT, "(?i).*to\s+[\"']?([^\"']+)[\"']?", "\1"), true(), DBUSERNAME)
EVAL-user_name = case(like(ACTION_NAME,"%USER"), case(match(OBJECT_NAME, "\w+"), OBJECT_NAME), ACTION_NAME="GRANT", replace(SQL_TEXT, "(?i).*to\s+[\"']?([^\"']+)[\"']?", "\1"), true(), case(match(DBUSERNAME, "\w+"), DBUSERNAME))
EVAL-vendor_product = "Oracle Database Server"
FIELDALIAS-signature = ACTION_NAME as signature
EVAL-src_user = case(like(ACTION_NAME,"%USER") OR like(ACTION_NAME,"%PROFILE") OR ACTION_NAME="GRANT" OR ACTION_NAME="LOGOFF", DBUSERNAME, ACTION_NAME="LOGON", if(like(OS_USERNAME,"%\%"), mvindex(split(OS_USERNAME,"\\"), -1), OS_USERNAME), true(), null())
EVAL-src_user_type = case(ACTION_NAME="LOGON", "OS_USER")
EVAL-user_type = case(ACTION_NAME="LOGON", "DB_USER")
EVAL-ACTION_CODE = case(ACTION_NAME="GRANT", 17, ACTION_NAME="REVOKE", 18, ACTION_NAME="AUDIT", 30, ACTION_NAME="NOAUDIT", 31, ACTION_NAME="EXECUTE", 47, ACTION_NAME="EXPLAIN PLAN", 50, ACTION_NAME="CALL", 170, ACTION_NAME="PURGE USER_RECYCLEBIN", 197, ACTION_NAME="CREATE SESSION", 129)
EVAL-signature_id = case(ACTION_NAME="GRANT", 17, ACTION_NAME="REVOKE", 18, ACTION_NAME="AUDIT", 30, ACTION_NAME="NOAUDIT", 31, ACTION_NAME="EXECUTE", 47, ACTION_NAME="EXPLAIN PLAN", 50, ACTION_NAME="CALL", 170, ACTION_NAME="PURGE USER_RECYCLEBIN", 197, ACTION_NAME="CREATE SESSION", 129)
LOOKUP-login_failure_reason = oracle_login_failure_reason_lookup RETURN_CODE OUTPUTNEW REASON as reason
LOOKUP-action_code = oracle_action_lookup NAME as ACTION_NAME OUTPUTNEW ACTION as ACTION_CODE, ACTION as signature_id

[oracle:libraryCachePerf]
# Uncomment this line if you are using DBX 1.0
# REPORT-ORACLE_LIB_CACHE = ORACLE_LIB_CACHE
SHOULD_LINEMERGE = false
EVAL-app = "oracle"

[oracle:dbFileIoPerf]
# Uncomment this line if you are using DBX 1.0
# REPORT-ORACLE_DBFILEIO_PERF = ORACLE_DBFILEIO_PERF
SHOULD_LINEMERGE = false
EVAL-app = "oracle"

[oracle:connections]
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
FIELDALIAS-instance_name = INSTANCE_NAME as instance_name
EVAL-database_name = INSTANCE_NAME
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
FIELDALIAS-connections = CONNECTIONS as connections
EVAL-vendor_product = "Oracle Database Server"

[oracle:pool:connections]
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
FIELDALIAS-instance_name = INSTANCE_NAME as instance_name
EVAL-database_name = INSTANCE_NAME
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
EVAL-connection_pool_used_percent = round(ACTIVE_POOLED_CONNECTIONS*100/TOTAL_POOLED_CONNECTIONS,2)
EVAL-vendor_product = "Oracle Database Server"

[oracle:database:size]
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
FIELDALIAS-instance_name = INSTANCE_NAME as instance_name
EVAL-database_name = INSTANCE_NAME
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
FIELDALIAS-current_size = CURRENT_SIZE as current_size
EVAL-vendor_product = "Oracle Database Server"

[oracle:table]
FIELDALIAS-INSTANCE_NAME = INSTANCE_NAME as instance_name , INSTANCE_NAME as database_name
FIELDALIAS-table_name = TABLE_NAME as table_name
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
EVAL-row_count = nullif(NUM_ROWS, null())
EVAL-last_update_time = nullif(LAST_UPDATE_TIME, null())
EVAL-size =  round(BYTES/1024/1024,2)
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
EVAL-vendor_product = "Oracle Database Server"

[oracle:user]
FIELDALIAS-INSTANCE_NAME = INSTANCE_NAME as instance_name, INSTANCE_NAME as database_name
FIELDALIAS-USER_ID = USER_ID as user_id
FIELDALIAS-USERNAME = USERNAME as user, USERNAME as user_name
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
EVAL-vendor_product = "Oracle Database Server"

[oracle:query]
REPORT-ORACLE_QUERY = ORACLE_QUERY
FIELDALIAS-INSTANCE_NAME = INSTANCE_NAME as instance_name , INSTANCE_NAME as database_name
FIELDALIAS-SQL_ID = SQL_ID as query_id
FIELDALIAS-USERNAME = USERNAME as user
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
EVAL-database_instance = HOST_NAME+":"+INSTANCE_NAME
EVAL-query_type = lower(COMMAND_NAME)
EVAL-response_time = if(isnull(ELAP_PER_EXEC) OR trim(ELAP_PER_EXEC) = "", null(), ELAP_PER_EXEC/1000000)
EVAL-vendor_product = "Oracle Database Server"

[oracle:sqlMonitor]
# basic fields

# non-DM (Data Model) fields
EVAL-MACHINE = if(isnull(MACHINE) OR trim(MACHINE) = "", null(), MACHINE)

# All_Databases DM fields
EVAL-dest = if(isnull(HOST_NAME), host, HOST_NAME)
FIELDALIAS-DATABASE_NAME-as-object = DATABASE_NAME as object
EVAL-response_time = if(isnull(ELAP_PER_EXEC) OR trim(ELAP_PER_EXEC) = "", null(), ELAP_PER_EXEC/1000000)
EVAL-src = if(isnull(MACHINE) OR trim(MACHINE) = "", host, MACHINE)
FIELDALIAS-USERNAME-as-user = USERNAME as user
EVAL-vendor_product = "Oracle Database Server"

# Database_Query DM fields
FIELDALIAS-SQL_TEXT-as-query = SQL_TEXT as query
FIELDALIAS-SQL_ID-as-query_id = SQL_ID as query_id
FIELDALIAS-SQL_EXEC_START-as-query_time = SQL_EXEC_START as query_time
FIELDALIAS-RECORDS_AFFECTED_as_records_affected = RECORDS_AFFECTED as records_affected

# Query_Stats DM fields
FIELDALIAS-KEY-as-query_plan_hit = KEY as query_plan_hit
FIELDALIAS-INDEXES_HIT_as_indexes_hit = INDEXES_HIT as indexes_hit
FIELDALIAS-TABLES_HIT_as_tables_hit = TABLES_HIT as tables_hit

[oracle:connections:poolStats]
FIELDALIAS-INSTANCE_NAME = INSTANCE_NAME as instance_name
EVAL-dest = if(isnull(HOST_NAME) OR trim(HOST_NAME) = "", host, HOST_NAME)
EVAL-vendor_product = "Oracle Database Server"
