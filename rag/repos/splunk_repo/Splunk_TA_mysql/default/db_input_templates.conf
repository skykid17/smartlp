##
## SPDX-FileCopyrightText: 2024 Splunk, Inc.
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
[mysql:status]
description = Query the database status
interval = 60
index_time_mode = current
mode = batch
query = SELECT gs.VARIABLE_NAME, \
        gs.VARIABLE_VALUE, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM performance_schema.global_status gs;
sourcetype = mysql:status
database_engine = MY_SQL

[mysql8:errorLogDb]
description = Query (MySQL 8) error_log table from performance_schema
interval = 60
index_time_mode = current
mode = rising
rising_column_index = 1
query = SELECT LOGGED, \
        THREAD_ID, \
        PRIO, \
        ERROR_CODE, \
        SUBSYSTEM, \
        DATA \
        FROM performance_schema.error_log \
        WHERE LOGGED > ? \
        ORDER BY LOGGED ASC;
sourcetype = mysql:errorLogDb
database_engine = MY_SQL

[mysql:diskUsageDb]
description = Query to get database sizes
interval = 3600
index_time_mode = current
mode = batch
query = SELECT table_schema AS database_name, \
        SUM((data_length + index_length) / 1024 / 1024) AS database_size \
        FROM information_schema.tables \
        GROUP BY 1;
sourcetype = mysql:diskUsageDb
database_engine = MY_SQL

[mysql:variables]
description = Query MySQL dynamic variables
interval = 60
index_time_mode = current
mode = batch
query = SELECT gv.VARIABLE_NAME, \
        gv.VARIABLE_VALUE, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM performance_schema.global_variables AS gv \
      UNION \
      SELECT sv.VARIABLE_NAME, \
        sv.VARIABLE_VALUE, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM performance_schema.session_variables AS sv;
sourcetype = mysql:variables
database_engine = MY_SQL

[mysql:user]
description = Query user, hosts
interval = 86400
index_time_mode = current
mode = batch
query = SELECT DATABASE() AS database_name, \
        user.user, \
        user.host AS user_host, \
        @@hostname, \
        @@port \
      FROM mysql.user;
sourcetype = mysql:user
database_engine = MY_SQL

[mysql:tableStatus]
description = Query the table status of the database
interval = 3600
index_time_mode = current
mode = batch
query = SELECT ist.TABLE_CATALOG, \
        ist.TABLE_SCHEMA, \
        ist.TABLE_NAME, \
        ist.TABLE_TYPE, \
        ist.ENGINE, \
        ist.VERSION, \
        ist.ROW_FORMAT, \
        ist.TABLE_ROWS, \
        ist.AVG_ROW_LENGTH, \
        ist.DATA_LENGTH, \
        ist.MAX_DATA_LENGTH, \
        ist.INDEX_LENGTH, \
        ist.DATA_FREE, \
        ist.AUTO_INCREMENT, \
        ist.CREATE_TIME, \
        ist.UPDATE_TIME, \
        ist.CHECK_TIME, \
        ist.TABLE_COLLATION, \
        ist.CHECKSUM, \
        ist.CREATE_OPTIONS, \
        ist.TABLE_COMMENT, \
        @@hostname AS hostname, \
        @@port AS port \
      FROM information_schema.tables AS ist;
sourcetype = mysql:tableStatus
database_engine = MY_SQL

[mysql:slowQueryLogDb]
description = Slow query log of the database
interval = 300
index_time_mode = current
mode = rising
rising_column_index = 1
query = SELECT \
        start_time, \
        user_host, \
        query_time, \
        lock_time, \
        rows_sent, \
        rows_examined, \
        db, \
        last_insert_id, \
        insert_id, \
        server_id, \
        cast(sql_text AS CHAR(10000) CHARACTER SET UTF8MB4) AS sql_text, \
        thread_id \
      FROM mysql.slow_log \
      WHERE start_time > ? \
      ORDER BY start_time ASC;
sourcetype = mysql:slowQueryLogDb
database_engine = MY_SQL

[mysql:generalQueryLogDb]
description = General query log of the database
interval = 600
index_time_mode = current
mode = rising
rising_column_index = 1
query = SELECT glog.event_time, \
        glog.user_host, \
        glog.thread_id, \
        glog.server_id, \
        glog.command_type, \
        cast(argument AS CHAR(10000) CHARACTER SET UTF8MB4) AS argument, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM mysql.general_log glog \
      WHERE event_time > ? \
      ORDER BY event_time ASC;
sourcetype = mysql:generalQueryLogDb
database_engine = MY_SQL

[mysql:schemaObjectOverview]
description = Shows an overview of the types of objects within each schema.
interval = 3600
index_time_mode = current
mode = batch
query = SELECT ROUTINE_SCHEMA AS db, \
        ROUTINE_TYPE AS object_type, \
        COUNT(*) AS count \
      FROM information_schema.routines \
      GROUP BY ROUTINE_SCHEMA, \
        ROUTINE_TYPE \
      UNION \
      SELECT TABLE_SCHEMA, \
        TABLE_TYPE, \
        COUNT(*) \
      FROM information_schema.tables \
      GROUP BY TABLE_SCHEMA, \
        TABLE_TYPE \
      UNION \
      SELECT TABLE_SCHEMA, \
        CONCAT('INDEX (', INDEX_TYPE, ')'), \
        COUNT(*) \
      FROM information_schema.statistics \
      GROUP BY TABLE_SCHEMA, \
        INDEX_TYPE \
      UNION \
      SELECT TRIGGER_SCHEMA, \
        'TRIGGER', \
        COUNT(*) \
      FROM information_schema.triggers \
      GROUP BY TRIGGER_SCHEMA \
      UNION \
      SELECT EVENT_SCHEMA, \
        'EVENT', \
        COUNT(*) \
      FROM information_schema.events \
      GROUP BY EVENT_SCHEMA \
      ORDER BY DB, \
        OBJECT_TYPE;
sourcetype = mysql:schemaObjectOverview
database_engine = MY_SQL

[mysql8:innodb_buffer_page]
description = Query (MySQL 8) innodb_buffer_page from information schema
interval = 120
index_time_mode = current
mode = batch
query = SELECT POOL_ID, \
        BLOCK_ID, \
        SPACE, \
        PAGE_NUMBER, \
        PAGE_TYPE, \
        FLUSH_TYPE, \
        FIX_COUNT, \
        IS_HASHED, \
        NEWEST_MODIFICATION, \
        OLDEST_MODIFICATION, \
        ACCESS_TIME, \
        TABLE_NAME, \
        INDEX_NAME, \
        NUMBER_RECORDS, \
        DATA_SIZE, \
        COMPRESSED_SIZE, \
        PAGE_STATE, \
        IO_FIX , \
        IS_OLD, \
        FREE_PAGE_CLOCK, \
        IS_STALE \
      FROM information_schema.innodb_buffer_page;
sourcetype = mysql:innodb_buffer_page
database_engine = MY_SQL

[mysql57:innodb_buffer_page]
description = Query (MySQL 5.7) innodb_buffer_page from information schema
interval = 120
index_time_mode = current
mode = batch
query = SELECT POOL_ID, \
        BLOCK_ID, \
        SPACE, \
        PAGE_NUMBER, \
        PAGE_TYPE, \
        FLUSH_TYPE, \
        FIX_COUNT, \
        IS_HASHED, \
        NEWEST_MODIFICATION, \
        OLDEST_MODIFICATION, \
        ACCESS_TIME, \
        TABLE_NAME, \
        INDEX_NAME, \
        NUMBER_RECORDS, \
        DATA_SIZE, \
        COMPRESSED_SIZE, \
        PAGE_STATE, \
        IO_FIX , \
        IS_OLD, \
        FREE_PAGE_CLOCK \
      FROM information_schema.innodb_buffer_page;
sourcetype = mysql:innodb_buffer_page
database_engine = MY_SQL

[mysql:userSummaryByStages]
description = Summarizes stages by user, ordered by user and total latency per stage. When the user found is NULL, it is assumed to be a "background" thread.
interval = 120
index_time_mode = current
mode = batch
query = SELECT IF(user IS NULL, 'background', user) AS user, \
        event_name, \
        count_star AS total, \
        sum_timer_wait AS total_latency, \
        avg_timer_wait AS avg_latency \
      FROM performance_schema.events_stages_summary_by_user_by_event_name \
      WHERE sum_timer_wait != 0 \
      ORDER BY user, \
        sum_timer_wait DESC;
sourcetype = mysql:userSummaryByStages
database_engine = MY_SQL

[mysql:hostSummaryByStages]
description = Summarizes stages by host, ordered by host and total latency per stage. When the user found is NULL, it is assumed to be a "background" thread.
interval = 120
index_time_mode = current
mode = batch
query = SELECT IF(host IS NULL, 'background', host) AS host, \
        event_name, \
        count_star AS total, \
        sum_timer_wait AS total_latency, \
        avg_timer_wait AS avg_latency \
      FROM performance_schema.events_stages_summary_by_host_by_event_name \
      WHERE sum_timer_wait != 0 \
      ORDER BY IF(host IS NULL, 'background', host), \
        sum_timer_wait DESC;
sourcetype = mysql:userSummaryByStages
database_engine = MY_SQL

[mysql57:innodbLockWaits]
description = Query (MySQL 5.7) a snapshot of which InnoDB locks transactions are waiting for.
interval = 300
index_time_mode = current
mode = batch
query = SELECT r.trx_wait_started AS wait_started, \
        TIMEDIFF(NOW(), r.trx_wait_started) AS wait_age, \
        rl.lock_table AS locked_table, \
        rl.lock_index AS locked_index, \
        rl.lock_type AS locked_type, \
        r.trx_id AS waiting_trx_id, \
        r.trx_started AS waiting_trx_started, \
        TIMEDIFF(NOW(), r.trx_started) AS waiting_trx_age, \
        r.trx_rows_locked AS waiting_trx_rows_locked, \
        r.trx_rows_modified AS waiting_trx_rows_modified, \
        r.trx_mysql_thread_id AS waiting_pid, \
        r.trx_query AS waiting_query, \
        rl.lock_id AS waiting_lock_id, \
        rl.lock_mode AS waiting_lock_mode, \
        b.trx_id AS blocking_trx_id, \
        b.trx_mysql_thread_id AS blocking_pid, \
        b.trx_query AS blocking_query, \
        bl.lock_id AS blocking_lock_id, \
        bl.lock_mode AS blocking_lock_mode, \
        b.trx_started AS blocking_trx_started, \
        TIMEDIFF(NOW(), b.trx_started) AS blocking_trx_age, \
        b.trx_rows_locked AS blocking_trx_rows_locked, \
        b.trx_rows_modified AS blocking_trx_rows_modified \
      FROM information_schema.innodb_lock_waits w \
        INNER JOIN information_schema.innodb_trx b ON b.trx_id = w.blocking_trx_id \
        INNER JOIN information_schema.innodb_trx r ON r.trx_id = w.requesting_trx_id \
        INNER JOIN information_schema.innodb_locks bl ON bl.lock_id = w.blocking_lock_id \
        INNER JOIN information_schema.innodb_locks rl ON rl.lock_id = w.requested_lock_id \
      ORDER BY r.trx_wait_started;
sourcetype = mysql:innodbLockWaits
database_engine = MY_SQL

[mysql8:innodbLockWaits]
description = Query (MySQL 8) a snapshot of which InnoDB locks transactions are waiting for.
interval = 300
index_time_mode = current
mode = batch
query = SELECT r.trx_wait_started AS wait_started, \
        TIMEDIFF(NOW(), r.trx_wait_started) AS wait_age, \
        CONCAT(rl.OBJECT_SCHEMA, rl.OBJECT_NAME) AS locked_table, \
        rl.index_name AS locked_index, \
        rl.lock_type AS locked_type, \
        r.trx_id AS waiting_trx_id, \
        r.trx_started AS waiting_trx_started, \
        TIMEDIFF(NOW(), r.trx_started) AS waiting_trx_age, \
        r.trx_rows_locked AS waiting_trx_rows_locked, \
        r.trx_rows_modified AS waiting_trx_rows_modified, \
        r.trx_mysql_thread_id AS waiting_pid, \
        r.trx_query AS waiting_query, \
        rl.engine_lock_id AS waiting_lock_id, \
        rl.lock_mode AS waiting_lock_mode, \
        b.trx_id AS blocking_trx_id, \
        b.trx_mysql_thread_id AS blocking_pid, \
        b.trx_query AS blocking_query, \
        bl.engine_lock_id AS blocking_lock_id, \
        bl.lock_mode AS blocking_lock_mode, \
        b.trx_started AS blocking_trx_started, \
        TIMEDIFF(NOW(), b.trx_started) AS blocking_trx_age, \
        b.trx_rows_locked AS blocking_trx_rows_locked, \
        b.trx_rows_modified AS blocking_trx_rows_modified \
      FROM performance_schema.data_lock_waits w \
        INNER JOIN information_schema.innodb_trx b ON b.trx_id = w.blocking_engine_transaction_id \
        INNER JOIN information_schema.innodb_trx r ON r.trx_id = w.requesting_engine_transaction_id \
        INNER JOIN performance_schema.data_locks bl ON bl.engine_lock_id = w.blocking_engine_lock_id \
        INNER JOIN performance_schema.data_locks rl ON rl.engine_lock_id = w.requesting_engine_lock_id \
      ORDER BY r.trx_wait_started;
sourcetype = mysql:innodbLockWaits
database_engine = MY_SQL

[mysql:databaseInstanceStats]
description = Query database size
interval = 300
index_time_mode = current
mode = batch
query = SELECT table_schema AS database_name, \
        SUM(data_length + index_length) / 1024 / 1024 "database_size", \
        SUM(data_free) / 1024 / 1024 "Free_Space_in_MB", \
        @@hostname AS hostname, \
        @@port AS port \
      FROM information_schema.tables \
      GROUP BY table_schema;
sourcetype = mysql:instance:stats
database_engine = MY_SQL

[mysql:readsWritesPerSecond]
description = Query MySQL server_read_iops and server_write_iops
index_time_mode = current
interval = 60
mode = batch
query = SELECT (i.rs / s.ut) AS 'Reads_Per_Second', \
        (j.ws / s.ut) AS 'Writes_Per_Second', \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM ( \
          SELECT variable_value AS 'rs' \
          FROM performance_schema.global_status \
          WHERE variable_name LIKE ('innodb_data_reads') \
        ) i \
        CROSS JOIN ( \
          SELECT variable_value AS 'ws' \
          FROM performance_schema.global_status \
          WHERE variable_name LIKE ('innodb_data_writes') \
        ) j \
        CROSS JOIN ( \
          SELECT variable_value AS 'ut' \
          FROM performance_schema.global_status \
          WHERE variable_name LIKE ('uptime') \
        ) s;
sourcetype = mysql:instance:stats
database_engine = MY_SQL

[mysql:deadlocksPerSecond]
description = Query MySQL Deadlocks Per Second
interval = 60
index_time_mode = current
mode = batch
query = SELECT (m.dlocks / s.ut) AS 'Deadlocks_Per_Second', \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM ( \
          SELECT count AS 'dlocks' \
          FROM information_schema.innodb_metrics \
          WHERE name LIKE ('lock_deadlocks') \
        ) m \
        CROSS JOIN ( \
          SELECT variable_value AS 'ut' \
          FROM performance_schema.global_status \
          WHERE variable_name LIKE ('uptime') \
        ) s;
sourcetype = mysql:instance:stats
database_engine = MY_SQL

[mysql:errorsPerSecond]
description = Query MySQL Errors Per Second
interval = 60
index_time_mode = current
mode = batch
query = SELECT (i.errs / s.ut) AS 'Errors_Per_Second', \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM ( \
          SELECT @@error_count AS 'errs' \
        ) i \
        CROSS JOIN ( \
          SELECT variable_value AS 'ut' \
          FROM performance_schema.global_status \
          WHERE variable_name LIKE ('uptime') \
        ) s;
sourcetype = mysql:instance:stats
database_engine = MY_SQL

[mysql:transactionsPerSecond]
description = Query MySQL Transactions Per Second
interval = 60
index_time_mode = current
mode = batch
query = SELECT (i.commits / s.ut) AS 'Transactions_Per_Second', \
          @@hostname AS hostname, \
          @@port AS port, \
          DATABASE() AS database_name \
      FROM ( \
              SELECT COUNT_STAR AS 'commits' \
              FROM performance_schema.events_statements_summary_global_by_event_name \
              WHERE EVENT_NAME = 'statement/sql/commit' \
          ) i \
          CROSS JOIN ( \
              SELECT variable_value AS 'ut' \
              FROM performance_schema.global_status \
              WHERE variable_name LIKE ('uptime') \
          ) s;
sourcetype = mysql:transaction:stats
database_engine = MY_SQL

[mysql:activeTransactions]
description = Query MySQL Active Transactions
interval = 60
index_time_mode = current
mode = batch
query = SELECT count AS active_trx_count, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM information_schema.innodb_metrics \
      WHERE name LIKE ('trx_active_transactions');
sourcetype = mysql:transaction:stats
database_engine = MY_SQL

[mysql:connections]
description = Query MySQL Current Connections
interval = 60
index_time_mode = current
mode = batch
query = SELECT VARIABLE_VALUE as connections, \
          @@hostname as hostname, \
          @@port as port, \
          database() as database_name \
      FROM performance_schema.global_status \
      WHERE VARIABLE_NAME LIKE ('THREADS_CONNECTED');
sourcetype = mysql:connection:stats
database_engine = MY_SQL

[mysql:pooledConnections]
description = Query MySQL Percentage of Pooled Connections.
interval = 60
index_time_mode = current
mode = batch
query = SELECT ((s.ac_conn / v.conn_max) * 100) AS connection_pool_used_percent, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM ( \
          SELECT variable_value AS conn_max \
          FROM performance_schema.global_variables \
          WHERE variable_name LIKE ('MAX_CONNECTIONS') \
        ) v \
        CROSS JOIN ( \
          SELECT variable_value AS ac_conn \
          FROM performance_schema.global_status \
          WHERE variable_name LIKE ('THREADS_CONNECTED') \
        ) s;
sourcetype = mysql:connection:stats
database_engine = MY_SQL

[mysql:database]
description = Query all database instances in a MySQL box
interval = 86400
index_time_mode = current
mode = batch
query = show databases;
sourcetype = mysql:database
database_engine = MY_SQL

[mysql:innodbStatus]
description = Query innodb engine of the database
interval = 120
index_time_mode = current
mode = batch
query = SHOW ENGINE INNODB STATUS;
sourcetype = mysql:innodbStatus
database_engine = MY_SQL

[mysql:databaseProcess]
description = Query all of the current running process of the database
interval = 120
index_time_mode = current
mode = batch
query = SHOW FULL PROCESSLIST;
sourcetype = mysql:databaseProcess
database_engine = MY_SQL

[mysql:grants]
description = Query grant actions in the database
interval = 300
index_time_mode = current
mode = batch
query = SHOW GRANTS;
sourcetype = mysql:grants
database_engine = MY_SQL

[mysql:processInfo]
description = Query process/thread information from performance schema
interval = 300
index_time_mode = current
mode = batch
query = SELECT pps.thread_id AS thd_id, \
        pps.processlist_id AS conn_id, \
        IF( \
          pps.name = 'thread/sql/one_connection', \
          CONCAT(pps.processlist_user, '@', pps.processlist_host), \
          REPLACE(pps.name, 'thread/', '') \
        ) user, \
        pps.processlist_db AS db, \
        pps.processlist_command AS command, \
        pps.processlist_state AS state, \
        pps.processlist_time AS time, \
        IF( \
          CHAR_LENGTH(pps.processlist_info) > 128, \
          REPLACE( \
            CONCAT( \
              LEFT(pps.processlist_info, (128 / 2) -2), \
              ' ... ', \
              RIGHT(pps.processlist_info, (128 / 2) -2) \
            ), \
            'n', \
            ' ' \
          ), \
          REPLACE(pps.processlist_info, 'n', ' ') \
        ) AS current_statement, \
        esc.lock_time AS lock_latency, \
        esc.rows_examined, \
        esc.rows_sent, \
        esc.rows_affected, \
        esc.created_tmp_tables AS tmp_tables, \
        esc.created_tmp_disk_tables AS tmp_disk_tables, \
        IF( \
          esc.no_good_index_used > 0 \
          OR esc.no_index_used > 0, \
          'YES', \
          'NO' \
        ) AS full_scan, \
        IF( \
          esc.timer_wait IS NOT NULL, \
          esc.sql_text, \
          NULL \
        ) AS last_statement, \
        IF( \
          esc.timer_wait IS NOT NULL, \
          esc.timer_wait, \
          NULL \
        ) as last_statement_latency, \
        ewc.event_name AS last_wait, \
        IF( \
          ewc.timer_wait IS NULL \
          AND ewc.event_name IS NOT NULL, \
          'Still Waiting', \
          ewc.timer_wait \
        ) last_wait_latency, \
        ewc.source \
      FROM performance_schema.threads AS pps \
        LEFT JOIN performance_schema.events_waits_current AS ewc USING (thread_id) \
        LEFT JOIN performance_schema.events_statements_current as esc USING (thread_id) \
      ORDER BY pps.processlist_time DESC, \
        last_wait_latency DESC;
sourcetype = mysql:processInfo
database_engine = MY_SQL

[mysql8:globalGrants]
description = Query (MySQL 8) about current assignments of dynamic privileges to user accounts
interval = 300
index_time_mode = current
mode = batch
query = SELECT USER, \
        HOST, \
        PRIV, \
        WITH_GRANT_OPTION, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM mysql.global_grants;
sourcetype = mysql:globalGrants
database_engine = MY_SQL

[mysql:events]
description = Query provides information about Event Manager
interval = 300
index_time_mode = current
mode = batch
query = SELECT EVENT_CATALOG, \
        EVENT_SCHEMA, \
        EVENT_NAME, \
        DEFINER, \
        TIME_ZONE, \
        EVENT_BODY, \
        EVENT_DEFINITION, \
        EVENT_TYPE, \
        EXECUTE_AT, \
        INTERVAL_VALUE, \
        INTERVAL_FIELD, \
        SQL_MODE, \
        STARTS, \
        ENDS, \
        STATUS, \
        ON_COMPLETION, \
        CREATED, \
        LAST_ALTERED, \
        LAST_EXECUTED, \
        EVENT_COMMENT, \
        ORIGINATOR, \
        CHARACTER_SET_CLIENT, \
        COLLATION_CONNECTION, \
        DATABASE_COLLATION, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM information_schema.events;
sourcetype = mysql:events
database_engine = MY_SQL

[mysql8:components]
description = Query (MySQL 8) with loaded components
interval = 300
index_time_mode = current
mode = batch
query = SELECT component_urn, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM mysql.component;
sourcetype = mysql:components
database_engine = MY_SQL

[mysql:engines]
description = Query with information about storage engines
interval = 300
index_time_mode = current
mode = batch
query = SELECT ENGINE, \
        SUPPORT, \
        COMMENT, \
        TRANSACTIONS, \
        XA, \
        SAVEPOINTS, \
        @@hostname AS hostname, \
        @@port AS port, \
        DATABASE() AS database_name \
      FROM information_schema.engines;
sourcetype = mysql:engines
database_engine = MY_SQL
