##
## SPDX-FileCopyrightText: 2020 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-1-2020
##
##
[isc_dhcp_prefix_dest]
#when dhcp server is the dest, extract the dest and process fields
#format as below (fields are within the angle brackets): 
#<dest> <dest_host>[process_id]|<process>:
REGEX=\s+(?<dest>\S+)\s+(?:(?<dest_host>[^\s\[\]]+)\[(?<process_id>[^\]\s]+)\]|(?<process>[^\s\[\]]+)):\s+

[isc_dhcp_prefix_src]
#when dhcp server is the src, extract the src and process fields
#format as below (fields are within the angle brackets): 
#<src> <src_host>[process_id]|<process>:
REGEX=\s+(?<src>\S+)\s+(?:(?<src_host>[^\s\[\]]+)\[(?<process_id>[^\]\s]+)\]|(?<process>[^\s\[\]]+)):\s+


[isc_dhcp_mac_hostname_for_dest]
#extract mac address and hostname for dest 
#format as below (fields are within the angle brackets):
#<dest_mac> (<dest_host>)
#Note: dest_host may not exist
REGEX=\s+(?<dest_mac>\S+)\s+(?:\((?<dest_host>[^)]+)\)\s+)?

[isc_dhcp_mac_hostname_for_src]
#extract mac address and hostname for src 
#format as below (fields are within the angle brackets):
#<src_mac> (<src_host>)
#Note: src_host may not exist
REGEX=\s+(?<mac_address>\S+)\s+(?:\((?<src_host>[^)]+)\)\s+)?

[isc_dhcp_relay]
#extract relay field
REGEX = (?<relay>[^\s:\\]+)

[isc_dhcp_block_action]
#extract blocked actions
REGEX = (?<block_action>(REFUSED|Invalid|ignored|rejected|not authoritative|[uU]nable to add forward map))

[isc_dhcp_discover_extract]
# it's for event of DHCPDISCOVER, format as below (fields are within the angle brackets): 
# <dest> <process>: DHCPDISCOVER from <src_mac> (<src_host>) via <relay>
# Note: src_host may not exist
REGEX=[[isc_dhcp_prefix_dest]](?<dhcp_type>DHCPDISCOVER)\s+from[[isc_dhcp_mac_hostname_for_src]]via\s+[[isc_dhcp_relay]]


[isc_dhcp_offer_extract]
# it's for event of DHCPOFFER, format as below (fields are within the angle brackets): 
# <src> <process>: DHCPOFFER on <dest_ip> to  <dest_mac> (<dest_host>) via <relay>
# Note: dest_host may not exist
REGEX=[[isc_dhcp_prefix_src]](?<dhcp_type>DHCPOFFER)\s+on\s+(?<dest_ip>\S+)\s+to[[isc_dhcp_mac_hostname_for_dest]]via\s+[[isc_dhcp_relay]]


[isc_dhcp_request_extract]
# it's for event of DHCPREQUEST, format as below (fields are within the angle brackets): 
# <dest> <process>: DHCPREQUEST for <src> (<server_ip>) from  <src_mac> (<src_host>) via <relay> uid <uuid>
# Note: server_ip, src_host, uuid may not exist
REGEX=[[isc_dhcp_prefix_dest]](?<dhcp_type>DHCPREQUEST)\s+for\s+(?<src>\S+)\s+(?:\((?<server_ip>[^)]+)\)\s+)?from[[isc_dhcp_mac_hostname_for_src]]via\s+[[isc_dhcp_relay]](?:\s+uid\s+(?<uuid>[^\s]+))?


[isc_dhcp_ack_nak_extract_0]
# it's for event of DHCPACK or DHCPNAK, format as below (fields are within the angle brackets): 
# <src> <process>: DHCPACK|DHCPNAK on <dest_ip> to <dest_mac> (<dest_host>) via (<relay>) relay <relay_ip> lease-duration <lease_duration> uid <uuid>
# Note: dest_host, relay_ip, lease_duration, uuid may not exist
REGEX=[[isc_dhcp_prefix_src]](?<dhcp_type>DHCPACK|DHCPNAK)\s+on\s+(?<dest_ip>\S+)\s+to[[isc_dhcp_mac_hostname_for_dest]]via\s+[[isc_dhcp_relay]](?:\s+relay\s+(?<relay_ip>\S+)\s+lease-duration\s+(?<lease_duration>\S+)\s+.*uid\s+(?<uuid>\S+))?


[isc_dhcp_ack_nak_extract_1]
# it's for event of DHCPACK or DHCPNAK, format as below (fields are within the angle brackets): 
# <src> <process>: DHCPACK|DHCPNAK to <dest_ip> (<dest_mac>) via <relay>
REGEX=[[isc_dhcp_prefix_src]](?<dhcp_type>DHCPACK|DHCPNAK)\s+to\s+(?<dest_ip>\S+)\s+\((?<dest_mac>[^)]+)\)\s+via\s+[[isc_dhcp_relay]]


[isc_dhcp_decline_extract]
# it's for event of DHCPDECLINE, format as below (fields are within the angle brackets): 
# <dest> <process>: DHCPDECLINE of <src> from <src_mac> (<src_host>) via <relay>
# Note: src_host may not exist
REGEX=[[isc_dhcp_prefix_dest]](?<dhcp_type>DHCPDECLINE)\s+of\s+(?<src>\S+)\s+from[[isc_dhcp_mac_hostname_for_src]]via\s+[[isc_dhcp_relay]]


[isc_dhcp_release_extract]
# it's for event of DHCPRELEASE, format as below (fields are within the angle brackets): 
# <src> <process>: DHCPRELEASE of <dest> from <dest_mac> (<dest_host>) via <relay>
# Note: src_host may not exist
REGEX=[[isc_dhcp_prefix_src]](?<dhcp_type>DHCPRELEASE)\s+of\s+(?<dest>\S+)\s+from[[isc_dhcp_mac_hostname_for_dest]]via\s+[[isc_dhcp_relay]]


[isc_dhcp_inform_extract]
# it's for event of DHCPINFORM, format as below (fields are within the angle brackets): 
# <dest> <process>: DHCPINFORM from <src> via <relay>
REGEX=[[isc_dhcp_prefix_dest]](?<dhcp_type>DHCPINFORM)\s+from\s+(?<src>\S+)\s+via\s+[[isc_dhcp_relay]]


[isc_dhcp_unable_to_add_forward_map_extract]
# it's for event of unable to add forward map, format as below (fields are within the angle brackets): 
# <src> <process>: Unable to add forward map from <dest> to <dest_ip>
REGEX=[[isc_dhcp_prefix_src]][uU]nable\s+to\s+add\s+forward\s+map\s+from\s+(?<dest>\S+)\s+to\s+(?<dest_ip>[^\s:]+)


[isc_dhcp_add_new_forward_map_extract]
# it's for event of add new forward map, format as below (fields are within the angle brackets): 
# <src> <process>: Added new forward map from <dest> to <dest_ip>
REGEX=[[isc_dhcp_prefix_src]][aA]dded\s+new\s+forward\s+map\s+from\s+(?<dest>\S+)\s+to\s+(?<dest_ip>[^\s:]+)


[isc_dhcp_added_reverse_map_extract]
# it's for event of add reverse map, format as below (fields are within the angle brackets): 
# <dest> <process>: [aA]dded reverse map from <src_ptr> to <src>
REGEX=[[isc_dhcp_prefix_dest]][aA]dded\s+reverse\s+map\s+from\s+(?<src_ptr>\S+)\s+to\s+(?<src>\S+)


[isc_dhcp_abandon_ip_extract]
# it's for event of Abandon IP address, format as below (fields are within the angle brackets): 
# <src> <process>: Abandoning IP address <dest_ip>
REGEX=[[isc_dhcp_prefix_src]]Abandoning\s+IP\s+address\s+(?<dest_ip>[^\s:]+)


[isc_dhcp_lease_duplicate_extract]
# it's for event of lease duplicate, format as below (fields are within the angle brackets): 
# <server> <process>: uid lease <dest_ip> for client <dest_mac> is duplicate on <src>
REGEX=\s+(?<server>\S+)\s+(?<server_process>[^\s:]+):\s+uid\s+lease\s+(?<dest_ip>\S+)\s+for\s+client\s+(?<dest_mac>\S+)\s+is\s+duplicate\s+on\s+(?<src>\S+)/

[isc_bind_update_fail_extract]
# it's for event of bind update reject, format as below (fields are within the angle brackets): 
# <dest> <process>: bind update on <src> from <failover_peer> rejected 
REGEX=[[isc_dhcp_prefix_dest]]bind\s+update\s+on\s+(?<src>\S+)\s+from\s+(?<failover_peer>\S+)\s+rejected.*

[isc_dhcp_icmp_echo_reply]
REGEX=[[isc_dhcp_prefix_src]]ICMP\s+Echo\s+reply\s+while\s+lease\s+(?<dest>\S+)

[isc_dhcp_reuse_lease]
REGEX=[[isc_dhcp_prefix_src]]reuse_lease:\s+lease\s+age.*under.*threshold,\s+reply\s+with\s+unaltered,\s+existing\s+lease\s+for\s+(?<dest>[^$]+)

