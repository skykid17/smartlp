##
## SPDX-FileCopyrightText: 2024 Splunk, Inc.
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##

######## Authentication ########

[source::....authentication]
sourcetype = cisco:esa:authentication
EVENT_BREAKER_ENABLE = true

[cisco:esa:authentication]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none

REPORT-fields_for_cisco_esa_authentication = fields_for_cisco_esa_syslog, fields_for_cisco_esa_authentication,fields_for_cisco_esa_authentication2,fields_for_cisco_esa_authentication3,fields_for_cisco_esa_authentication4, fields_for_cisco_esa_authentication5,fields_for_cisco_esa_authentication6, fields_for_cisco_esa_authentication7, field_for_cisco_esa_user_session, fields_for_cisco_esa_auth2, fields_for_cisco_esa_authentication_vendor_action, fields_for_cisco_esa_auth2_vendor_action
REPORT-fields_for_cisco_esa_authentication_too = version_for_cisco_esa

FIELDALIAS-dvc = host AS dvc
FIELDALIAS-vendor_action_for_cisco_esa = vendor_action as cisco_esa_vendor_action
EVAL-src = case(event=="SCP failed",host,src=="UNKNOWN",null,true(),src)
EVAL-dest_ip = case(match(host,"^\d+\.\d+\.\d+\.\d+|^[a-fA-F0-9]*:[a-fA-F0-9]*:[a-fA-F0-9:]*(?:\.\d+\.\d+\.\d+)?"),host)
EVAL-dest = coalesce(vendor_sn, dest, host)
EVAL-object_attrs = case(vendor_action IN("logged out","logout"), coalesce("session-"+session, "session"), true(), object_attrs)
EVAL-user_type = if(user=="admin","Admin",user_type)
EVAL-change_type = case(vendor_action IN("logged out","logout"), "AAA", true(), change_type)
EVAL-action = case(vendor_action IN("logged out","logout"), "logoff", status=="failed", "failure", status=="successfully", "success", true(), action)
EVAL-object_category = case(vendor_action IN("logged out","logout"), "user", true(), object_category)
EVAL-status = case(vendor_action IN("logged out","logout") OR status=="successfully", "success", status=="failed", "failure")

EVAL-vendor_product = "Cisco ESA"

LOOKUP-action_for_cisco_esa_authentication = cisco_esa_authentication_action_lookup vendor_action OUTPUTNEW action, action as cisco_esa_action
LOOKUP-vendor_product_for_cisco_esa = cisco_esa_vendor_info_lookup sourcetype OUTPUT vendor,product,app

####### Antispam #######

[source::....antispam]
sourcetype = cisco:esa:antispam
EVENT_BREAKER_ENABLE = true

[cisco:esa:antispam]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none

REPORT-extract_antispam_fields = fields_for_cisco_esa_syslog,extract_antispam_field1, extract_antispam_field2, extract_antispam_field3

FIELDALIAS-dvc = host AS dvc
FIELDALIAS-dest = host AS dest
EVAL-action = case(result IN("exitting","shutting down"), "stopped", true(), action)
EVAL-status = case(result IN("exitting","shutting down"), "success", true(), status)
EVAL-change_type = case(result IN("exitting","shutting down"), "system", true(), status)
EVAL-object_attrs = case(result IN("exitting","shutting down"), "status", true(), object_attrs)
EVAL-severity = case(log_level=="Critical", "critical", log_level=="Warning", "high", log_level=="Info", "informational", true(), severity)
EVAL-type = case(log_level=="Critical", "alert", log_level=="Warning", "warning", log_level=="Info", "event", true(), type)

EVAL-app = "Cisco Email Security Appliance"
EVAL-vendor = "Cisco"
EVAL-product = "ESA"
EVAL-vendor_product = "Cisco ESA"

####### Error logs #######

[source::....error_logs]
sourcetype = cisco:esa:error_logs
EVENT_BREAKER_ENABLE = true

[cisco:esa:error_logs]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none

REPORT-extract_error_logs = fields_for_cisco_esa_syslog,extract_error_alert_fields1, extract_error_alert_fields2, extract_error_alert_fields3, extract_subject_field, extract_error_alert_fields4, extract_error_alert_fields5

EVAL-app = "Cisco Email Security Appliance"
EVAL-severity = case(log_level=="Critical", "critical", log_level=="Warning", "high", log_level=="Info", "informational", true(), severity)
EVAL-src = coalesce(case(match(description,".*[Ff]ailed to connect to.*"),host),src)
EVAL-type = case(log_level=="Critical", "alert", log_level=="Warning", "warning", log_level=="Info", "event", true(), type)
EVAL-vendor = "Cisco"
EVAL-product = "ESA"
EVAL-vendor_product = "Cisco ESA"

####### Content Scanner #######

[source::...content_scanner]
sourcetype = cisco:esa:content_scanner
EVENT_BREAKER_ENABLE = true

[cisco:esa:content_scanner]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none

REPORT-extract_content_scanner_fields = fields_for_cisco_esa_syslog, extract_content_scanner_field1

FIELDALIAS-dvc = host AS dvc
FIELDALIAS-dest = host AS dest
EVAL-action = case(vendor_action == "Restarting", "restarted", true(), action)
EVAL-change_type = case(vendor_action == "Restarting", "restart", true(), change_type)
EVAL-status = case(vendor_action == "Restarting", "success", true(), status)
EVAL-object_attrs = case(vendor_action == "Restarting", "status", true(), object_attrs)

EVAL-vendor = "Cisco"
EVAL-product = "ESA"
EVAL-vendor_product = "Cisco ESA"

####### System logs #######

[source::...system_logs]
sourcetype = cisco:esa:system_logs
EVENT_BREAKER_ENABLE = true

[cisco:esa:system_logs]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none


REPORT-extract_system_logs_fields = fields_for_cisco_esa_syslog,extract_system_logs_fields1,extract_system_logs_fields2,extract_system_logs_fields3,extract_system_logs_fields4,extract_system_logs_fields5,extract_system_logs_fields6,extract_system_logs_fields7,extract_system_logs_fields8,extract_system_logs_fields9,extract_system_logs_fields10,extract_system_logs_fields11,extract_system_logs_fields12,extract_system_logs_fields13,extract_system_logs_fields14,extract_system_logs_fields15, extract_system_logs_fields16, extract_system_logs_fields17, extract_system_logs_fields18, extract_system_logs_fields19, extract_system_logs_fields20, extract_subject_field, extract_error_dns_failure_fields1

EVAL-name = coalesce(name,if(match(description,"Maximum\s*DNS\s*recursion\s*level\s*\d+\s*exceeded"),host,null))
EVAL-user_type = if(src_user=="admin","Admin","User")
EVAL-object = case(match(result,"Hostname\s+is\s*successfully\s+changed") OR match(object_attrs,"out\s+of\s+limit\s+action\s+changed"), host,true(),object)
EVAL-object_id = case(match(result,"Hostname\s+is\s*successfully\s+changed"),dest, match(result, "The\s+system\s+time\s+was\s+changed"), host, true(), object_id)
EVAL-object_category = case(object=="admin","user",true(),object_category)
EVAL-status = case(isnotnull(status),status,match(description,".*Done.*"),"success",true(),"failure")
EVAL-change_type = case(match(description,".* performed user management action .*"),"AAA",match(result,"System\s*is\s*shutting\s*down"),"system",match(result,"Hostname\s+is\s*successfully\s+changed") OR match(result,"The\s+system\s+time\s+was\s+changed") OR match(object_attrs,"out\s+of\s+limit\s+action\s+changed"),"filesystem")
EVAL-dest = coalesce(dest, case(match(description,".* performed user management action .*") OR match(result,"System\s*is\s*shutting\s*down") OR match(result,"The\s+system\s+time\s+was\s+changed") OR match(object_attrs,"out\s+of\s+limit\s+action\s+changed") OR match(signature,"No\s+route\s+to\s+host") OR match(description,"User.*commit\s+changes") OR match(description,"The\sfollowing\supdate\sto\sthe\sinterface\sfailed"), host, record_type=="A",name))
EVAL-dvc = case(match(description,".* performed user management action .*") OR match(result,"System\s*is\s*shutting\s*down") OR match(result,"Hostname\s+is\s*successfully\s+changed") OR match(result,"The\s+system\s+time\s+was\s+changed") OR match(object_attrs,"out\s+of\s+limit\s+action\s+changed"),host)
EVAL-app = "Cisco Email Security Appliance"
EVAL-severity = case(log_level=="Critical", "critical", log_level=="Warning", "high", log_level=="Info", "informational", true(), severity)
EVAL-type = case(log_level=="Critical" OR match(description,"TLS connection failed.*") OR match(description,"alert\swas\ssent"), "alert", log_level=="Warning", "warning", log_level=="Info", "event", true(), type)
EVAL-query_type = coalesce(case(isnotnull(query_count), record_type ,name=="lame DNS referral", "Query"), query_type)
EVAL-message_type = case(name=="lame DNS referral", "Response", match(description,"Maximum\s*DNS\s*recursion\s*level.*exceeded") OR isnotnull(query_count),"Query", true(), message_type)
EVAL-record_type = coalesce(case(match(description,"Maximum\s*DNS\s*recursion\s*level.*exceeded"),query_type),record_type)
EVAL-query_count = mvcount(query)
EVAL-vendor = "Cisco"
EVAL-product = "ESA"
EVAL-src = coalesce(case(match(description,"TLS connection failed.*") OR match(description,"Maximum\s*DNS\s*recursion\s*level.*exceeded") OR isnotnull(query_count),host),src)
EVAL-transport = coalesce(case(match(description,"Maximum\s*DNS\s*recursion\s*level.*exceeded") OR isnotnull(query_count),"UDP"),transport)
EVAL-vendor_product = "Cisco ESA"


####### TextMail eventgen data ########

[source::...textmail.samples]
sourcetype = cisco:esa:textmail
LINE_BREAKER=(\\n)|(?:\w{3}\s\w{3}\s\d{2}\s\d{2}:\d{2}:\d{2}\s\d{4})
SHOULD_LINEMERGE=false
EVENT_BREAKER_ENABLE = true

######## TextMail Log Extractions ########

[source::....textmail]
sourcetype = cisco:esa:textmail
EVENT_BREAKER_ENABLE = true

[cisco:esa:textmail]
SHOULD_LINEMERGE = false
KV_MODE = none
EVENT_BREAKER_ENABLE = true
REPORT-fields_for_cisco_esa_textmail = cisco_esa_reputation_score,cisco_esa_reason,mid_rewritten_for_cisco_esa,mid_for_cisco_esa,dcid_for_cisco_esa,icid_for_cisco_esa,sender_field_for_cisco_esa,recipient_field_for_cisco_esa,message_id_for_cisco_esa,subject_field_for_cisco_esa,size_field_for_cisco_esa,attachment_fields_for_cisco_esa_one,attachment_fields_for_cisco_esa_two,src_dest_fields_for_cisco_esa_icid,src_dest_fields_for_cisco_esa_dcid,cisco_esa_dcid_src_dest_ip,action_for_cisco_esa,protocol_for_cisco_esa, flow_id_for_cisco_esa,rid_for_cisco_esa,rcid_for_cisco_esa,alert_field_for_cisco_esa,cisco_esa_messaging_scanning_problem,cisco_esa_filter,cisco_esa_vendor_action_message_reason,ipr_for_cisco_esa,extract_textmail_fields1,extract_textmail_fields2,extract_textmail_fields3,extract_textmail_fields4,extract_textmail_fields5,extract_textmail_fields6,extract_textmail_fields7,extract_textmail_fields8,extract_textmail_fields9,extract_textmail_fields10, extract_textmail_fields11, extract_textmail_fields12, extract_textmail_fields13, extract_textmail_fields14, extract_textmail_fields15, extract_textmail_fields16, extract_textmail_fields17, extract_textmail_fields18, extract_textmail_fields19, extract_textmail_fields20, extract_textmail_fields21, extract_textmail_fields22, extract_textmail_fields23, extract_textmail_fields24, extract_textmail_fields25, extract_textmail_fields26, extract_textmail_fields27, extract_textmail_fields28, extract_textmail_fields29, extract_textmail_fields30, extract_textmail_fields31, extract_textmail_recipient, extract_textmail_recipient_domain
REPORT-fields_for_cisco_esa_anew_logs = cisco_esa_receiver,cisco_esa_message_id,cisco_esa_sender_textmail,cisco_esa_content_type,cisco_esa_domain_sdr_requested,cisco_esa_domain_and_selector_field,cisco_esa_dmarc_message_from_domain,cisco_esa_senderbase_upload,cisco_esa_status_fields,cisco_esa_spf_version

REPORT-fields_for_cisco_esa_new_logs = fields_for_cisco_esa_syslog,connection_error_for_cisco_esa,tls_for_cisco_esa,dns_error_for_cisco_esa,dns_failure_for_cisco_esa,sbrs_for_cisco_esa,cisco_esa_icid_sbrs,connection_drop_for_cisco_esa,sender_reject_for_cisco_esa,recipient_reject_for_cisco_esa,receive_failed_for_cisco_esa,signature_for_cisco_esa,outbreak_filter_for_cisco_esa,outbreak_for_cisco_esa,threat_for_cisco_esa,virus_status_for_cisco_esa,spam_status_for_cisco_esa,quarantine_dest_for_cisco_esa,release_for_cisco_esa,file_scan_error_for_cisco_esa,message_finished_for_cisco_esa,version_for_cisco_esa,mid_generate_for_cisco_esa,mid_split_for_cisco_esa,cisco_esa_error_message, bounce_by_server_for_cisco_esa, aborted_message_for_cisco_esa
REPORT-fields_for_esa_new_logs_10_11 = country_for_cisco_esa,utc_offset_for_cisco_esa,source_ip_for_cisco_esa,graymail_status_for_cisco_esa,cisco_esa_policy,cisco_esa_url,cisco_esa_expanded_url

FIELDALIAS-dvc = host AS dvc
FIELDALIAS-src_for_cisco_esa  = src_ip as src
FIELDALIAS-sender_for_cisco_esa = src_user as sender
FIELDALIAS-size = message_size as size
FIELDALIAS-internal_message_id = internal_message_id AS mid
EVAL-protocol = if(protocol=="SMTP" AND isnotnull(flow_id),"IP",protocol)
EVAL-protocol_version = if(match(coalesce(src_ip,dest_ip),":"), "ipv6", if(match(coalesce(src_ip,dest_ip), "(?:\d+\.\d+\.\d+\.\d+)"),"ipv4", null))
EVAL-transport = if(protocol IN ("SMTP", "IP"),"tcp",transport)
EVAL-src = coalesce(src, src_domain, host)
EVAL-recipient_count = mvcount(recipient)
EVAL-action = case(lower(vendor_action) == "restart", "restarted", lower(vendor_action) == "starting", "started", lower(vendor_action) == "shut down", "stopped", match(_raw,"New SMTP (?:D|I)CID"),"allowed", true(), action)
EVAL-dest = coalesce(dest_ip, dest, if(lower(vendor_action) IN("restart","starting","shut down"), host, null))
EVAL-id = case(subject=="DLP violation", mid, true(), id)
EVAL-change_type = case(lower(vendor_action) IN ("restart","starting","shut down"), "system", true(), change_type)
EVAL-object_category = case(lower(vendor_action) IN("restart","shut down","starting"), "service", true(), object_category)
EVAL-object_attrs = case(lower(vendor_action) == "starting", "state", vendor_action == "shut down", "state", true(), object_attrs)
EVAL-status = case(lower(vendor_action) IN("restart","shut down","starting"), "success", true(), status)
EVAL-file_name = coalesce(if(isnotnull(rtrim(internal_filename1, "'")),rtrim(internal_filename1, "'"),rtrim(internal_filename2, "'")),file_name)
EVAL-attachment_type = coalesce(replace(replace(rtrim(internal_filename1,"'"),"^[^.]*$",""),".*\.",""),replace(replace(internal_filename2,"^[^.]*$",""),".*\.",""))
# for the fields not in the raw data
EVAL-vendor_action = case(match(_raw,"(ISQ:.*?[Qq]uarantine)"),"Quarantined", match(_raw,"ISQ:.*?([Rr]eleased|[Rr]eleasing) MID"), "release", true(), vendor_action)
EVAL-severity = case(subject=="DLP violation", lower(severity), log_level=="Critical", "critical", log_level=="Warning", "high", log_level=="Info", "informational", true(), severity)
EVAL-type = case(log_level=="Critical" OR internal_alert=="alert was sent", "alert", log_level=="Warning", "warning", log_level=="Info", "event", true(), type)
EVAL-vendor_product = "Cisco ESA"

LOOKUP-action_for_cisco_esa_email = cisco_esa_email_action_lookup vendor_action OUTPUTNEW action
LOOKUP-vendor_product_for_cisco_esa = cisco_esa_vendor_info_lookup sourcetype OUTPUT vendor,product,app

######## AMP Log Extractions ########

[source::....amp]
sourcetype = cisco:esa:amp
EVENT_BREAKER_ENABLE = true

[cisco:esa:amp]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none

REPORT-fields-for-cisco-amp_mar = field_esa_mar_recipient, fields_esa_mar_mid_file_hash
REPORT-fields_for_cisco_esa_amp =  response_for_frq_for_cisco_esa, amp_file_reputation_for_cisco_esa, file_analysis_complete_for_cisco_esa, file_reputation_query_initiating_for_cisco_esa, file_not_uploaded_for_analysis_for_cisco_esa, file_uploaded_for_analysis_for_cisco_esa, file_analysis_upload_skipped_for_cisco_esa, file_analysis_upload_skipped_details_for_cisco_esa, retrospective_verdict_received_for_cisco_esa, fields_for_cisco_esa_syslog, amp_marked_malicious_file, amp_attachment_could_not_scanned, amp_reputation_query_failed_for_attachment, response_for_frq_for_cisco_esa2, amp_malformed_header_detected, amp_perceptive_filter_error

FIELDALIAS-mid = internal_message_id as mid
FIELDALIAS-signature_for_cisco_esa = malware as signature
FIELDALIAS-filehash_for_cisco_esa = sha256 as file_hash

## CIM Mapping

EVAL-src = case(match(description,"Error in initializing FireAMP Engine for File Reputation"), host)
EVAL-dest = case(match(description,"Error in initializing FireAMP Engine for File Reputation"), host)
EVAL-date = strftime(_time,"%Y-%m-%d %H:%M:%S")
EVAL-file_name = case(match(file_name, "^\""), trim(file_name, "\""), match(file_name, "^\'"), trim(file_name, "\'"),true(), file_name)
EVAL-attachment = case(match(attachment, "^\""), trim(attachment, "\""), match(attachment, "^\'"), trim(attachment, "\'"),true(), attachment)
EVAL-action = case(upload_action=="Recommended not to send the file for analysis","blocked",upload_action=="Recommended to send the file for analysis","deferred",true(),action)
EVAL-description = case(upload_action=="0", "Email gateway do not need send file for upload", upload_action=="1", "Email gateway send file for upload", upload_action=="2", "Email gateway do not send file for upload", upload_action=="3", "Email gateway send only metadata for upload", true(), coalesce(upload_action,description))
EVAL-id = case((malware!="None" AND isnotnull(malware) OR vendor_action=="The file is marked as malicious"), coalesce(mid,id), true(), id)
EVAL-malware = if(malware=="None", null(), malware)
EVAL-subject = case(malware!="None", "File Name = '".file_name."' contains Malware = ".malware, vendor_action=="The file is marked as malicious", "File Name = '".file_name."' is marked as malicious", true(), subject)
EVAL-severity = case(log_level=="Critical", "critical", log_level=="Warning", "high", log_level=="Info", "informational", true(), severity)
EVAL-type = case(log_level=="Critical", "alert", log_level=="Warning", "warning", log_level=="Info", "event", true(), type)
EVAL-vendor_product = "Cisco ESA"
LOOKUP-vendor_product_for_cisco_esa = cisco_esa_vendor_info_lookup sourcetype OUTPUT vendor,product,app

######## HTTP Log Extractions ########

[source::....http]
sourcetype = cisco:esa:http
EVENT_BREAKER_ENABLE = true

[cisco:esa:http]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none

REPORT-fields_for_cisco_esa_http = fields_for_cisco_esa_syslog,fields_for_cisco_esa_http,fields_for_cisco_esa_http_service,fields_for_cisco_esa_http_service2,fields_for_cisco_esa_user_session,fields_for_cisco_esa_user_session2,fields_for_cisco_esa_http2,fields_for_cisco_esa_http3,fields_for_cisco_esa_http4,fields_for_cisco_esa_http5,fields_for_cisco_esa_http6,fields_for_cisco_esa_http7,fields_for_cisco_esa_http8,fields_for_cisco_esa_http9,fields_for_cisco_esa_http10,fields_for_cisco_esa_http11,fields_for_cisco_esa_http12,fields_for_cisco_esa_http13, fields_for_cisco_esa_http14
REPORT-fields_for_cisco_esa_http_version = version_for_cisco_esa


FIELDALIAS-http_status_for_cisco_esa = status as cisco_esa_http_status
FIELDALIAS-dvc = host AS dvc

EVAL-protocol = if(match(subject,"Error in https? connection"),"IP",protocol)
EVAL-protocol_version = if(match(coalesce(src_ip,dest_ip),":"), "ipv6", if(match(coalesce(src_ip,dest_ip), "(?:\d+\.\d+\.\d+\.\d+)"),"ipv4", null))
EVAL-app = "Cisco Email Security Appliance"
EVAL-user_type = if(user=="admin" OR privilege=="admin","Admin",user_type)
EVAL-url_length = len(url)
EVAL-http_user_agent_length = len(http_user_agent)
EVAL-creation_time = if(http_host_action=="listening",strftime(_time,"%b %d %H:%M:%S"),null)
EVAL-severity = case(log_level=="Critical", "critical", log_level=="Warning", "high", log_level=="Info", "informational", true(), severity)
EVAL-type = case(log_level=="Critical", "alert", log_level=="Warning", "warning", log_level=="Info", "event", true(), type)
EVAL-src = case(match(signature,"^The HTTP"), host, true(), coalesce(src_ip, src))
EVAL-state = if(http_host_action=="listening","listening",state)
EVAL-dest = coalesce(case(http_host_action=="listening",host),dest_ip, dest, case(vendor_action=="logged out" OR result=="expired" OR like(description, "I/O error opening URL%") OR like(result, "Passphrase has been changed%"), host), destination)
EVAL-dest_port = coalesce(case(http_host_action=="listening",http_host_port),dest_port)
EVAL-dest_ip = coalesce(case(http_host_action=="listening",http_host_ip),dest_ip)
EVAL-action = case(vendor_action=="logged out", "logoff", result=="expired" OR vendor_action=="changed", "modified", match(signature,"^The HTTP"), "started",match(subject,"Error in https? connection"),"blocked",true(), action)
EVAL-change_type = case(vendor_action IN("logged out","changed"), "AAA", result=="expired", "filesystem", true(), change_type)
EVAL-object_category = case(vendor_action=="logged out", "user", result=="expired","session",object=="admin","user",vendor_action=="changed", "file", true(), object_category)
EVAL-status = case(vendor_action IN("logged out","changed") OR result=="expired", "success", true(), status)
EVAL-object_attrs = case(vendor_action=="logged out" OR result=="expired","session-"+session, result=="Passphrase has been changed", "value", true(),object_attrs)
EVAL-src_ip = coalesce(src_ip,if(match(host, "^\d+\.\d+\.\d+\.\d+|^[a-fA-F0-9]*:[a-fA-F0-9]*:[a-fA-F0-9:]*(?:\.\d+\.\d+\.\d+)?"), host,null))
EVAL-subject = case(match(description,"^Session.*?not\sfound"), "Session not found", true(), subject)
EVAL-vendor = "Cisco"
EVAL-product = "ESA"
EVAL-vendor_product = "Cisco ESA"

LOOKUP-action_for_cisco_esa_proxy = cisco_esa_proxy_status_action_lookup status OUTPUTNEW proxy_action, proxy_action AS action

######## Legacy Support ########
######## Source: https://github.com/splunk/splunk-app-cisco-ironport-email-security/tree/master/app/Splunk_CiscoIronportEmailSecurity ########

[cisco_esa]
rename = cisco:esa:legacy

[cisco:esa]
rename = cisco:esa:legacy

[cisco:esa:legacy]
SHOULD_LINEMERGE = false
EXTRACT-mid = MID (?<mid>\d+)
EXTRACT-icid = ICID (?<icid>\d+)
EXTRACT-dcid = DCID (?<dcid>\d+)
EXTRACT-to = \s+To\:\s+\<\|?(?<mailto>[^\>]+)
EXTRACT-from = \s+From:\s+\<(?<mailfrom>[^/>]+)
EXTRACT-subject = Subject [\'\"](?<subject>.*?)[\'\"]
EXTRACT-attachname = attachment [\'\"](?<attachment_name>.*?)[\'\"]
EXTRACT-icid-detail1 = New\sSMTP\sICID\s(?<icid>\d+)\sinterface\s(?<recv_int_name>.*)\s(?=\()\((?<recv_ip_address>\S+)\)\saddress\s(?<src_ip>\S+)
EXTRACT-icid-detail2 = reverse dns host (?<src_host>\S+) verified (?<src_host_verify>\w+)
EXTRACT-tls-detail = TLS (?<tls_verify>\S+) protocol
EXTRACT-sbrs-detial = (?<mail_flow_policy>\S+) SG (?<sender_group>\S+) match \S+ SBRS (?<sender_reputation>\S+)
EXTRACT-messageid = Message-ID \'\<(?<message_id>.*?)\>\'
EXTRACT-policy-detail = matched all recipients for per-recipients policy (?<policy_name>\S+) in the (?<policy_direction>\S+) table
EXTRACT-msgsize = MID (?<mid>\d+) ready (?<message_size>\d+) bytes
EXTRACT-vof-verdict = Outbreak Filters: verdict (?<vof_verdict>\S+)
EXTRACT-vof-detail = Threat Level=(?<vof_threat_level>\d) Category=(?<vof_threat_cat>\S+) Type=(?<vof_threat_type>.*?)
EXTRACT-case-detail = using engine: CASE spam (?<spam_verdict>\S+)
EXTRACT-av-detail = antivirus (?<av_verdict>\w+)( \'(?<av_scan_result>\S+)\')?( \((?<av_unscannable_reason>\S+)\))?
EXTRACT-quarantine = quarantined to \"(?<quarantine_name>\S+)\" \((?<quarantine_reason>.*?)\)
EXTRACT-dcid-detail = New SMTP DCID (?<dcid>\d+) interface (?<del_ip_address>\S+) address (?<dest_ip>\S+) port (?<dest_port>\d+)
EXTRACT-bounce = MID (?<mid>\d+) was generated for bounce of MID (?<bounce_mid>\d+)
EXTRACT-dcid-detail_dest = New SMTP DCID \d+ interface \S+ address (?<cisco_esa_dest>\S+) port \d+
REPORT-cisco_esa_legacy_action = cisco_esa_legacy_action
REPORT-fields_for_cisco_esa_legacy_http_status = cisco_esa_legacy_status

FIELDALIAS-recv_ip_address-to-dest	= recv_ip_address AS dest_ip
FIELDALIAS-mailto          		= mailto AS recipient
FIELDALIAS-mailfrom        		= mailfrom AS sender
FIELDALIAS-subject         		= subject AS message_subject
FIELDALIAS-attachment_name 		= attachment_name AS file_name
FIELDALIAS-src             		= src_ip AS src
EVAL-dest 				= coalesce(recv_ip_address, dest_ip)
EVAL-vendor_product             = "Cisco ESA"

####### CEF event ########
[source::....consolidated]
sourcetype = cisco:esa:cef
EVENT_BREAKER_ENABLE = true

[cisco:esa:cef]
sourcetype = cisco:esa:cef
KV_MODE = none
EVENT_BREAKER_ENABLE = true

EXTRACT-message_filters_verdict = \s*Message Filters Verdict\s*=\s*(?<message_filters_verdict>.+?)(?:(?=(?:\s*\S+\s*=))|$)

REPORT-cef_extract_field = cef_format_extract_field_1, cef_format_extract_field_2, cef_format_customlogs_key_value_fields, cef_format_logheaders_key_value_fields
REPORT-internal_message_id_for_cef = internal_message_id_for_cef
REPORT-extract_cef_cim_fields =  extract_cef_recipient, extract_cef_recipient_domain, extract_cef_src_user_domain, extract_cef_dest_host
REPORT-extract_file_info = extract_cef_file_name, extract_cef_file_hash, extract_cef_subject

FIELDALIAS-message_id = ESAMID as internal_message_id
FIELDALIAS-size = ESAMsgSize AS size
FIELDALIAS-src_user = suser as src_user

FIELDALIAS-recipient_status = act AS recipient_status

EVAL-action = case(lower(act) IN("aborted","bounced","dropped"), "blocked", lower(act) == "delivered", "delivered", lower(act) IN("dq","quarantined"), "quarantined", true(), lower(act))
EVAL-filter_action = upper(cs1)+" "+ESAMailFlowPolicy
EVAL-src_host = coalesce(shost, sourceHostName)
EVAL-signature = case(upper(ESAMailFlowPolicy) == "ACCEPT", "accepted")
EVAL-recipient_count = mvcount(recipient)
EVAL-recipient_domain = mvdedup(recipient_domain)
EVAL-return_addr = coalesce(ESAReplyTo, suser)
EVAL-user = if(match(ESAFriendlyFrom,"<"),replace(ESAFriendlyFrom,".*<(.*)>","\1"),trim(ESAFriendlyFrom,"\""))

EVAL-src = case(deviceDirection == "1" OR isnotnull(deviceOutboundInterface), if(isnotnull(coalesce(shost,sourceHostName)) AND (coalesce(shost,sourceHostName)) != "unknown", (coalesce(shost,sourceHostName)), (coalesce(src,sourceAddress))), deviceDirection == "0" OR isnotnull(deviceInboundInterface), ESAHeloIP, true(), src)
EVAL-orig_src = case(deviceDirection == "1" OR isnotnull(deviceOutboundInterface), if(isnotnull(coalesce(shost,sourceHostName)) AND coalesce(shost,sourceHostName) != "unknown", coalesce(shost,sourceHostName), coalesce(src,sourceAddress)), deviceDirection == "0" OR isnotnull(deviceInboundInterface), ESAHeloIP)
EVAL-src_ip = case(deviceDirection == "1" OR isnotnull(deviceOutboundInterface), coalesce(src,sourceAddress), deviceDirection == "0" OR isnotnull(deviceInboundInterface), ESAHeloIP)
EVAL-dest = case(deviceDirection == "1" OR isnotnull(deviceOutboundInterface), ESAHeloIP, deviceDirection == "0" OR isnotnull(deviceInboundInterface), if(isnotnull(coalesce(shost,sourceHostName)) AND coalesce(shost,sourceHostName) != "unknown", coalesce(shost,sourceHostName), coalesce(src,sourceAddress)))
EVAL-orig_dest = case(deviceDirection == "1" OR isnotnull(deviceOutboundInterface), ESAHeloIP, deviceDirection == "0" OR isnotnull(deviceInboundInterface), if(isnotnull(coalesce(shost,sourceHostName)) AND coalesce(shost,sourceHostName) != "unknown", coalesce(shost,sourceHostName), coalesce(src,sourceAddress)))
EVAL-dest_ip = case(deviceDirection == "1" OR isnotnull(deviceOutboundInterface), ESAHeloIP, deviceDirection == "0" OR isnotnull(deviceInboundInterface), coalesce(src,sourceAddress))
EVAL-subject = case(match(msg, ".+SUSPECTED\\\=20SPAM"), if(ESAMsgTooBigFromSender == "true", "SUSPECTED SPAM. Message Too Big from Sender", "SUSPECTED SPAM"), true(), coalesce(subject,case(match(msg, "^\""), trim(msg, "\""), match(msg, "^\'"), trim(msg, "\'"), true() ,msg)))

EVAL-vendor_product = appliance_vendor + " " + appliance_product

######## Bounce Log Extractions ########
[source::....bounce]
sourcetype = cisco:esa:bounce

[cisco:esa:bounce]
BREAK_ONLY_BEFORE = \w+\s\w+\s\d+\s\d+\:\d+\d+\:\d+\s\d+
SHOULD_LINEMERGE = true

EXTRACT-reason_response = Reason\:\s*\"(?<reason>[^\"]+)\"\s*Response\:\s*\"(?<response>[^\"]+)\"\s*
EXTRACT-user = xname\:\s*(?<user>\w+)
FIELDALIAS-internal_message_id = MID as internal_message_id
REPORT-bounce_fields = bounce_extract_fields, bounce_extract_fields2, bounce_message_id, bounce_user, bounce_subject, bounce_extract_log_level

EVAL-action = "blocked"
EVAL-recipient_domain = replace(recipient, "[^@]*@(.*)", "\1")
EVAL-src_user_domain = replace(sender, "[^@]*@(.*)", "\1")
EVAL-recipient_count = mvcount(recipient)
EVAL-protocol = "SMTP"
EVAL-vendor_product = "Cisco ESA"
EVAL-vendor = "Cisco"
EVAL-product = "ESA"


######## Deliver Log Extractions ########
[source::....delivery]
sourcetype = cisco:esa:delivery

[cisco:esa:delivery]
BREAK_ONLY_BEFORE = <\w+\s*del_time
SHOULD_LINEMERGE = true
DATETIME_CONFIG = CURRENT
EXTRACT-error = (?:error=\"\[\"(?<error>[^"]+)\"\])
EXTRACT-delivery_type = <\/(?<delivery_type>bounce|success)>
FIELDALIAS-src_ip = source_ip as src_ip
FIELDALIAS-src = source_ip as src
FIELDALIAS-src_user = from as src_user
FIELDALIAS-return_addr = from as return_addr
FIELDALIAS-recipient = to as recipient
FIELDALIAS-dest = ip as dest
FIELDALIAS-dest_ip = ip as dest_ip
FIELDALIAS-message_id = mid as internal_message_id
FIELDALIAS-size = bytes as size
FIELDALIAS-status_code = code as status_code
EVAL-recipient_domain = replace(recipient, "[^@]*@([^;$]*)", "\1")
EVAL-src_user_domain = replace(src_user, "[^@]*@([^;$]*)", "\1")
EVAL-protocol = "SMTP"
EVAL-action = case(lower(delivery_type)=="bounce", "blocked",lower(delivery_type)=="success","delivered")
EVAL-recipient_count = mvcount(to)
EVAL-vendor_product = "Cisco ESA"
LOOKUP-vendor_product_for_cisco_esa = cisco_esa_vendor_info_lookup sourcetype OUTPUT vendor,product,app


######## Service Logs ########

# Mapping service_logs with system_logs

[source::....service_logs]
sourcetype = cisco:esa:system_logs
EVENT_BREAKER_ENABLE = true

######## Updater Logs ########

# Mapping updater_logs with error_logs

[source::....updater_logs]
sourcetype = cisco:esa:error_logs
EVENT_BREAKER_ENABLE = true

######## Reportd Logs ########

# Mapping reportd_logs with system_logs

[source::....reportd_logs]
sourcetype = cisco:esa:system_logs
EVENT_BREAKER_ENABLE = true

######## Sntpd Logs ########

# Mapping sntpd_logs with system_logs

[source::....sntpd_logs]
sourcetype = cisco:esa:system_logs
EVENT_BREAKER_ENABLE = true

######## Smartlicense Logs ########

# Mapping smartlicense with system_logs

[source::....smartlicense]
sourcetype = cisco:esa:system_logs
EVENT_BREAKER_ENABLE = true


######## Euq Logs ########

# Mapping euq_logs with system_logs

[source::....euq_logs]
sourcetype = cisco:esa:system_logs
EVENT_BREAKER_ENABLE = true
