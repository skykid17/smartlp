var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e,t,r){return(t=u(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function u(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===r(t)?t:String(t)}e.d(t,{Z:()=>a});const a=function(){function e(t,r,n,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.globalConfig=t,this.serviceName=r,this.state=n,this.mode=o,this.util=i}var t,r;return t=e,r=[{key:"onCreate",value:function(){}},{key:"onRender",value:function(){}},{key:"onSave",value:function(e){var t=e.name,r=e.auth_type,i=e.url;return null===t||0===t.trim().length?(this.util.setErrorMsg("Field account name is required"),!1):null===i||0===i.trim().length?(this.util.setErrorMsg("Field URL is required"),!1):0!==i.indexOf("https://")?(this.util.setErrorMsg("URL should start with 'https://' as only secure URLs are supported."),!1):("oauth"===r&&(i=i.replace("https://",""),this.util.setState((function(e){var t=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},e.data);return t.endpoint.value=i,{data:t}}))),!0)}},{key:"onSaveSuccess",value:function(){}},{key:"onSaveFail",value:function(){}},{key:"onEditLoad",value:function(){}}],r&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();var l=t.Z;export{l as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudF9ob29rLjQuMC4wLmpzIiwibWFwcGluZ3MiOiJBQUNBLElBQUlBLEVBQXNCLENDQTFCQSxFQUF3QixDQUFDQyxFQUFTQyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hGLEVBQW9CSSxFQUFFRixFQUFZQyxLQUFTSCxFQUFvQkksRUFBRUgsRUFBU0UsSUFDNUVFLE9BQU9DLGVBQWVMLEVBQVNFLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUUxRSxFQ05ESCxFQUF3QixDQUFDUyxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxJLG1pQ0N1RmxGLFFBaEZpQixXQWdCZixTQUFBSSxFQUFhQyxFQUFjQyxFQUFhQyxFQUFPQyxFQUFNQyxJLDRGQUFNQyxDQUFBLEtBQUFOLEdBQ3pETyxLQUFLTixhQUFlQSxFQUNwQk0sS0FBS0wsWUFBY0EsRUFDbkJLLEtBQUtKLE1BQVFBLEVBQ2JJLEtBQUtILEtBQU9BLEVBQ1pHLEtBQUtGLEtBQU9BLENBQ2QsQyxRQXVEZ0IsTyxFQXJEaEJMLEUsRUFBQSxFQUFBWCxJQUFBLFdBQUFtQixNQUdBLFdBQWEsR0FFYixDQUFBbkIsSUFBQSxXQUFBbUIsTUFHQSxXQUFhLEdBQ2IsQ0FBQW5CLElBQUEsU0FBQW1CLE1BS0EsU0FBUUMsR0FDTixJQUFNQyxFQUFjRCxFQUFTRSxLQUN2QkMsRUFBV0gsRUFBU0ksVUFDdEJDLEVBQVdMLEVBQVNNLElBQ3hCLE9BQW9CLE9BQWhCTCxHQUFzRCxJQUE5QkEsRUFBWU0sT0FBT0MsUUFFN0NWLEtBQUtGLEtBQUthLFlBREUsbUNBRUwsR0FDZSxPQUFiSixHQUFnRCxJQUEzQkEsRUFBU0UsT0FBT0MsUUFFOUNWLEtBQUtGLEtBQUthLFlBREUsMEJBRUwsR0FDbUMsSUFBakNKLEVBQVNLLFFBQVEsYUFHMUJaLEtBQUtGLEtBQUthLFlBRFIsd0VBRUssSUFDZSxVQUFiTixJQUNURSxFQUFXQSxFQUFTTSxRQUFRLFdBQVksSUFDeENiLEtBQUtGLEtBQUtnQixVQUFTLFNBQUNDLEdBQ2xCLElBQU1DLEUsK1ZBQUlDLENBQUEsR0FBUUYsRUFBVUMsTUFFNUIsT0FEQUEsRUFBS1QsU0FBU04sTUFBUU0sRUFDZixDQUFFUyxLQUFBQSxFQUNYLE1BRUssRUFDVCxHQUVBLENBQUFsQyxJQUFBLGdCQUFBbUIsTUFHQSxXQUFrQixHQUNsQixDQUFBbkIsSUFBQSxhQUFBbUIsTUFHQSxXQUFlLEdBQ2YsQ0FBQW5CLElBQUEsYUFBQW1CLE1BR0EsV0FBZSxJLHVFQUFDUixDQUFBLENBN0VELEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TcGx1bmtfVEFfc25vdy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9TcGx1bmtfVEFfc25vdy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vU3BsdW5rX1RBX3Nub3cvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9TcGx1bmtfVEFfc25vdy8uL3VjY191aV9leHRlbnNpb25zL2FjY291bnRfaG9vay40LjAuMC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8qKlxuICpcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjQgU3BsdW5rLCBJbmMuXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogTGljZW5zZVJlZi1TcGx1bmstOC0yMDIxXG4gKlxuICovXG5cbmNsYXNzIEFjY291bnRIb29rIHtcbiAgLyoqXG4gICAqIEZvcm0gaG9va1xuICAgKiBAY29uc3RydWN0b3JcbiAgICogQHBhcmFtIHtPYmplY3R9IGdsb2JhbENvbmZpZyAtIEdsb2JhbCBjb25maWd1cmF0aW9uLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gc2VydmljZU5hbWUgLSBTZXJ2aWNlIG5hbWVcbiAgICogQHBhcmFtIHtvYmplY3R9IHN0YXRlIC0gSW5pdGlhbCBzdGF0ZSBvZiB0aGUgZm9ybVxuICAgKiBAcGFyYW0ge3N0cmluZ30gbW9kZSAtIEZvcm0gbW9kZS4gQ2FuIGJlIGVkaXQsIGNyZWF0ZSBvciBjbG9uZVxuICAgKiBAcGFyYW0ge29iamVjdH0gdXRpbCAtIE9iamVjdCBjb250YWluaW5nIHV0aWxpdHkgbWV0aG9kc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHNldFN0YXRlLFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RXJyb3JNc2csXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRFcnJvckZpZWxkTXNnLFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJBbGxFcnJvck1zZ1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICovXG4gIGNvbnN0cnVjdG9yIChnbG9iYWxDb25maWcsIHNlcnZpY2VOYW1lLCBzdGF0ZSwgbW9kZSwgdXRpbCkge1xuICAgIHRoaXMuZ2xvYmFsQ29uZmlnID0gZ2xvYmFsQ29uZmlnXG4gICAgdGhpcy5zZXJ2aWNlTmFtZSA9IHNlcnZpY2VOYW1lXG4gICAgdGhpcy5zdGF0ZSA9IHN0YXRlXG4gICAgdGhpcy5tb2RlID0gbW9kZVxuICAgIHRoaXMudXRpbCA9IHV0aWxcbiAgfVxuXG4gIC8qXG4gICAgUHV0IGxvZ2ljIGhlcmUgdG8gZXhlY3V0ZSBqYXZhc2NyaXB0IG9uIENyZWF0ZSBVSS5cbiAgKi9cbiAgb25DcmVhdGUgKCkge31cblxuICAvKlxuICAgIFB1dCBsb2dpYyBoZXJlIHRvIGV4ZWN1dGUgamF2YXNjcmlwdCB3aGVuIFVJIGdldHMgcmVuZGVyZWQuXG4gICovXG4gIG9uUmVuZGVyICgpIHt9XG4gIC8qXG4gICAgUHV0IGZvcm0gdmFsaWRhdGlvbiBsb2dpYyBoZXJlLlxuICAgIFJldHVybiB0dXJlIGlmIHZhbGlkYXRpb24gcGFzcywgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgIENhbGwgZGlzcGxheUVycm9yTXNnIHdoZW4gdmFsaWR0aW9uIGZhaWxlZC5cbiAgKi9cbiAgb25TYXZlIChkYXRhRGljdCkge1xuICAgIGNvbnN0IGFjY291bnRuYW1lID0gZGF0YURpY3QubmFtZVxuICAgIGNvbnN0IGF1dGhUeXBlID0gZGF0YURpY3QuYXV0aF90eXBlXG4gICAgbGV0IGVuZHBvaW50ID0gZGF0YURpY3QudXJsXG4gICAgaWYgKGFjY291bnRuYW1lID09PSBudWxsIHx8IGFjY291bnRuYW1lLnRyaW0oKS5sZW5ndGggPT09IDApIHtcbiAgICAgIGNvbnN0IG1zZyA9ICdGaWVsZCBhY2NvdW50IG5hbWUgaXMgcmVxdWlyZWQnXG4gICAgICB0aGlzLnV0aWwuc2V0RXJyb3JNc2cobXNnKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfSBlbHNlIGlmIChlbmRwb2ludCA9PT0gbnVsbCB8fCBlbmRwb2ludC50cmltKCkubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb25zdCBtc2cgPSAnRmllbGQgVVJMIGlzIHJlcXVpcmVkJ1xuICAgICAgdGhpcy51dGlsLnNldEVycm9yTXNnKG1zZylcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH0gZWxzZSBpZiAoZW5kcG9pbnQuaW5kZXhPZignaHR0cHM6Ly8nKSAhPT0gMCkge1xuICAgICAgY29uc3QgbXNnID1cbiAgICAgICAgXCJVUkwgc2hvdWxkIHN0YXJ0IHdpdGggJ2h0dHBzOi8vJyBhcyBvbmx5IHNlY3VyZSBVUkxzIGFyZSBzdXBwb3J0ZWQuXCJcbiAgICAgIHRoaXMudXRpbC5zZXRFcnJvck1zZyhtc2cpXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9IGVsc2UgaWYgKGF1dGhUeXBlID09PSAnb2F1dGgnKSB7XG4gICAgICBlbmRwb2ludCA9IGVuZHBvaW50LnJlcGxhY2UoJ2h0dHBzOi8vJywgJycpIC8vIHJlbW92aW5nIHRoZSBodHRwcyBzY2hlbWEgZnJvbSB0aGUgZW5kcG9pbnRcbiAgICAgIHRoaXMudXRpbC5zZXRTdGF0ZSgocHJldlN0YXRlKSA9PiB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSB7IC4uLnByZXZTdGF0ZS5kYXRhIH1cbiAgICAgICAgZGF0YS5lbmRwb2ludC52YWx1ZSA9IGVuZHBvaW50XG4gICAgICAgIHJldHVybiB7IGRhdGEgfVxuICAgICAgfSlcbiAgICB9XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuXG4gIC8qXG4gICAgUHV0IGxvZ2ljIGhlcmUgdG8gZXhlY3V0ZSBqYXZhc2NyaXB0IHRvIGJlIGNhbGxlZCBhZnRlciBzYXZlIHN1Y2Nlc3MuXG4gICovXG4gIG9uU2F2ZVN1Y2Nlc3MgKCkge31cbiAgLypcbiAgICBQdXQgbG9naWMgaGVyZSB0byBleGVjdXRlIGphdmFzY3JpcHQgdG8gYmUgY2FsbGVkIG9uIHNhdmUgZmFpbGVkLlxuICAqL1xuICBvblNhdmVGYWlsICgpIHt9XG4gIC8qXG4gICAgUHV0IGxvZ2ljIGhlcmUgdG8gZXhlY3V0ZSBqYXZhc2NyaXB0IGFmdGVyIGxvYWRpbmcgZWRpdCBVSS5cbiAgKi9cbiAgb25FZGl0TG9hZCAoKSB7fVxufVxuXG5leHBvcnQgZGVmYXVsdCBBY2NvdW50SG9va1xuIl0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJleHBvcnRzIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiQWNjb3VudEhvb2siLCJnbG9iYWxDb25maWciLCJzZXJ2aWNlTmFtZSIsInN0YXRlIiwibW9kZSIsInV0aWwiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwidmFsdWUiLCJkYXRhRGljdCIsImFjY291bnRuYW1lIiwibmFtZSIsImF1dGhUeXBlIiwiYXV0aF90eXBlIiwiZW5kcG9pbnQiLCJ1cmwiLCJ0cmltIiwibGVuZ3RoIiwic2V0RXJyb3JNc2ciLCJpbmRleE9mIiwicmVwbGFjZSIsInNldFN0YXRlIiwicHJldlN0YXRlIiwiZGF0YSIsIl9vYmplY3RTcHJlYWQiXSwic291cmNlUm9vdCI6IiJ9