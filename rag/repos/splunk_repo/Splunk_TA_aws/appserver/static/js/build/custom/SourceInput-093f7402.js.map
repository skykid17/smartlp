{"version":3,"file":"SourceInput-093f7402.js","sources":["../../../../../../../build-ui/js/configs/SourceInput.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nclass SourceInput {\n  getMapData() {\n    return [\n      {\n        service: 'aws_inspector',\n        input: 'inspector'\n      },\n      {\n        service: \"aws_inspector_v2\",\n        input: \"inspector\",\n      },\n      {\n        service: \"aws_kinesis\",\n        input: \"vpc_flow_logs\",\n        format: \"CloudWatchLogs\",\n        sourcetype: [\"aws:cloudwatchlogs:vpcflow\", \"aws:cloudwatchlogs:vpcflow:metric\"]\n      },\n      {\n        service: \"aws_cloudwatch_logs\",\n        input: \"vpc_flow_logs\",\n        sourcetype: [\"aws:cloudwatchlogs:vpcflow\", \"aws:cloudwatchlogs:vpcflow:metric\"]\n      },\n      {\n        service: \"aws_s3\",\n        input: \"aws_cloudtrail\",\n        sourcetype: \"aws:cloudtrail\",\n      },\n      {\n        service: \"aws_s3\",\n        input: \"cloudfront_access_logs\",\n        sourcetype: \"aws:cloudfront:accesslogs\",\n      },\n      {\n        service: \"aws_s3\",\n        input: \"elb_access_logs\",\n        sourcetype: \"aws:elb:accesslogs\",\n      },\n      {\n        service: \"aws_s3\",\n        input: \"s3_access_logs\",\n        sourcetype: \"aws:s3:accesslogs\",\n      },\n      {\n        service: \"splunk_ta_aws_logs\",\n        input: \"aws_cloudtrail\",\n        log_type: \"cloudtrail\",\n      },\n      {\n        service: \"splunk_ta_aws_logs\",\n        input: \"cloudfront_access_logs\",\n        log_type: \"cloudfront:accesslogs\",\n      },\n      {\n        service: \"splunk_ta_aws_logs\",\n        input: \"elb_access_logs\",\n        log_type: \"elb:accesslogs\",\n      },\n      {\n        service: \"splunk_ta_aws_logs\",\n        input: \"s3_access_logs\",\n        log_type: \"s3:accesslogs\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"aws_config\",\n        s3_file_decoder: \"Config\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"aws_cloudtrail\",\n        s3_file_decoder: \"CloudTrail\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"cloudfront_access_logs\",\n        s3_file_decoder: \"CloudFrontAccessLogs\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"elb_access_logs\",\n        s3_file_decoder: \"ELBAccessLogs\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"s3_access_logs\",\n        s3_file_decoder: \"S3AccessLogs\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"vpc_flow_logs\",\n        s3_file_decoder: \"VPCFlowLogs\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"delimited_files\",\n        s3_file_decoder: \"DelimitedFilesDecoder\",\n      },\n      {\n        service: \"aws_sqs_based_s3\",\n        input: \"others\",\n        s3_file_decoder: \"CustomLogs\",\n      },\n      {\n        service: 'aws_sqs_based_s3',\n        input: 'aws_asl',\n        s3_file_decoder: 'AmazonSecurityLake',\n        sourcetype: 'aws:asl',\n        sqs_sns_validation: 0\n      },\n      {\n        service: 'aws_sqs_based_s3',\n        input: 'tgw_flow_logs',\n        s3_file_decoder: 'TransitGatewayFlowLogs',\n        sourcetype: 'aws:transitgateway:flowlogs',\n      }\n    ]\n  }\n\n  getMockService() {\n    return {\n      aws_billing_cur: 'Billing (Cost and Usage Report)',\n      vpc_flow_logs: 'VPC Flow Logs',\n      s3_access_logs: 'S3 Access Logs',\n      inspector: 'Inspector',\n      cloudfront_access_logs: 'CloudFront Access Logs',\n      elb_access_logs: 'ELB Access Logs',\n      delimited_files: 'Delimited Files',\n      aws_asl: 'Security Lake',\n      tgw_flow_logs: 'Transit Gateway Flow Logs',\n      others: 'Custom Data Type'\n    }\n  }\n\n  detectSource(model, serviceName) {\n    const mapData = getMapData();\n    const filteredServices = mapData.filter(\n      (item) => item.service === serviceName\n    );\n    const item = filteredServices.find((service) => {\n      const serviceCopy = {\n        ...service,\n      };\n      delete serviceCopy.service;\n      delete serviceCopy.input;\n      delete serviceCopy.sqs_sns_validation;\n\n      for (const key of Object.keys(serviceCopy)) {\n        if (Array.isArray(serviceCopy[key])){\n          if (!serviceCopy[key].includes(model[key])){\n            return false;\n          }\n        } else if(serviceCopy[key] !== model[key]) {\n          return false;\n        }\n      }\n      return true;\n    });\n\n    if (item?.input) {\n      return item.input;\n    } else {\n      return serviceName;\n    }\n  }\n}\n\nexport const { getMapData, getMockService, detectSource } = new SourceInput();\n"],"names":["service","input","format","sourcetype","log_type","s3_file_decoder","sqs_sns_validation","aws_billing_cur","vpc_flow_logs","s3_access_logs","inspector","cloudfront_access_logs","elb_access_logs","delimited_files","aws_asl","tgw_flow_logs","others","model","serviceName","filteredServices","getMapData","filter","item","find","serviceCopy","Object","keys","key","Array","isArray","includes","getMockService","detectSource"],"mappings":"gFA4K4D,0EArK1D,iBACS,CACL,CACEA,QAAS,gBACTC,MAAO,aAET,CACED,QAAS,mBACTC,MAAO,aAET,CACED,QAAS,cACTC,MAAO,gBACPC,OAAQ,iBACRC,WAAY,CAAC,6BAA8B,sCAE7C,CACEH,QAAS,sBACTC,MAAO,gBACPE,WAAY,CAAC,6BAA8B,sCAE7C,CACEH,QAAS,SACTC,MAAO,iBACPE,WAAY,kBAEd,CACEH,QAAS,SACTC,MAAO,yBACPE,WAAY,6BAEd,CACEH,QAAS,SACTC,MAAO,kBACPE,WAAY,sBAEd,CACEH,QAAS,SACTC,MAAO,iBACPE,WAAY,qBAEd,CACEH,QAAS,qBACTC,MAAO,iBACPG,SAAU,cAEZ,CACEJ,QAAS,qBACTC,MAAO,yBACPG,SAAU,yBAEZ,CACEJ,QAAS,qBACTC,MAAO,kBACPG,SAAU,kBAEZ,CACEJ,QAAS,qBACTC,MAAO,iBACPG,SAAU,iBAEZ,CACEJ,QAAS,mBACTC,MAAO,aACPI,gBAAiB,UAEnB,CACEL,QAAS,mBACTC,MAAO,iBACPI,gBAAiB,cAEnB,CACEL,QAAS,mBACTC,MAAO,yBACPI,gBAAiB,wBAEnB,CACEL,QAAS,mBACTC,MAAO,kBACPI,gBAAiB,iBAEnB,CACEL,QAAS,mBACTC,MAAO,iBACPI,gBAAiB,gBAEnB,CACEL,QAAS,mBACTC,MAAO,gBACPI,gBAAiB,eAEnB,CACEL,QAAS,mBACTC,MAAO,kBACPI,gBAAiB,yBAEnB,CACEL,QAAS,mBACTC,MAAO,SACPI,gBAAiB,cAEnB,CACEL,QAAS,mBACTC,MAAO,UACPI,gBAAiB,qBACjBF,WAAY,UACZG,mBAAoB,GAEtB,CACEN,QAAS,mBACTC,MAAO,gBACPI,gBAAiB,yBACjBF,WAAY,8DAKlB,iBACS,CACLI,gBAAiB,kCACjBC,cAAe,gBACfC,eAAgB,iBAChBC,UAAW,YACXC,uBAAwB,yBACxBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,QAAS,gBACTC,cAAe,4BACfC,OAAQ,gDAIZ,SAAaC,EAAOC,OAEZC,EADUC,IACiBC,QAC/B,SAACC,UAASA,EAAKtB,UAAYkB,KAEvBI,EAAOH,EAAiBI,MAAK,SAACvB,OAC5BwB,OACDxB,UAEEwB,EAAYxB,eACZwB,EAAYvB,aACZuB,EAAYlB,iCAEDmB,OAAOC,KAAKF,kBAAc,KAAjCG,UACLC,MAAMC,QAAQL,EAAYG,SACvBH,EAAYG,GAAKG,SAASb,EAAMU,WAC5B,OAEJ,GAAGH,EAAYG,KAASV,EAAMU,UAC5B,SAGJ,YAGLL,SAAAA,EAAMrB,MACDqB,EAAKrB,MAELiB,YAKEE,IAAAA,WAAYW,IAAAA,eAAgBC,IAAAA"}