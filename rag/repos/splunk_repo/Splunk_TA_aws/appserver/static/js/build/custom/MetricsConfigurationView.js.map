{"version":3,"file":"MetricsConfigurationView.js","sources":["../../../../../../../build-ui/js/dependencies/DimensionMetricsPanel.js","../../../../../../../build-ui/js/dependencies/NamespaceListPanel.js","../../../../../../../build-ui/js/components/metrics/AdvncedMatricConfigurationTemplate.jsx","../../../../../../../build-ui/js/dependencies/MetricsConfigurationAdvancedView.js","../../../../../../../build-ui/js/components/metrics/MetricConfigurationRow.jsx","../../../../../../../build-ui/js/dependencies/MetricsConfigurationRow.js","../../../../../../../build-ui/js/MetricsConfigurationView.js"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport {\n  template,\n  each,\n  union,\n  keys,\n  clone,\n  without,\n  difference,\n} from \"underscore\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Multiselect from \"@splunk/react-ui/Multiselect\";\nimport Text from \"@splunk/react-ui/Text\";\nimport DimensionMetricsPanelTemplate from \"../../html/DimensionMetricsPanelTemplate.html\";\nimport { SplunkThemeProvider } from \"@splunk/themes\";\nimport { ThemeProviderSettings } from \"../styles/Theme\";\n\nconst ALL_VALUE = \".*\";\n\nclass DimensionMetricsPanel {\n  constructor(options) {\n    this.defaultDimensions = options.defaultDimensions;\n    this.defaultMetrics = options.defaultMetrics;\n    this.defaultStatistics = options.defaultStatistics;\n    this.model = options.model;\n    this.selectedModel = options.selectedModel;\n    this.el = document.querySelector(\"#dimension-list-section\");\n\n    this.render = this.render.bind(this);\n    this._handleDimensionsChange = this._handleDimensionsChange.bind(this);\n    this._handleMetricsChange = this._handleMetricsChange.bind(this);\n    this._handleStatisticsChange = this._handleStatisticsChange.bind(this);\n    this._addMetrics = this._addMetrics.bind(this);\n    this._removeMetrics = this._removeMetrics.bind(this);\n    this._resetMetrics = this._resetMetrics.bind(this);\n    this._updateChangeSet = this._updateChangeSet.bind(this);\n  }\n\n  _handleDimensionsChange(e, { value }, index) {\n    const jsonValue = this._parseDimension(value);\n    if (!jsonValue) {\n      e?.target?.parentElement?.classList.add(\"json-err-state\");\n\n      e?.target?.parentElement?.setAttribute(\n        \"data-namespace\",\n        this.selectedModel.metric_namespace\n      );\n\n      e?.target?.classList.add(\"json-err-state\");\n    } else {\n      e?.target?.parentElement?.classList.remove(\"json-err-state\");\n      e?.target?.parentElement?.removeAttribute(\"data-namespace\");\n\n      e?.target?.classList.remove(\"json-err-state\");\n\n      this.selectedModel.metric_dimensions_list[index] = jsonValue;\n      const namespace = this.selectedModel.metric_namespace;\n\n      document\n        .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n        ?.classList.add(\"namespace-edited-marker\");\n\n      if (!this.selectedModel.change_set.includes(\"metric_dimensions_list\")) {\n        this.selectedModel.change_set.push(\"metric_dimensions_list\");\n      }\n    }\n  }\n\n  _handleMetricsChange(e, { values }, index) {\n    this.selectedModel.metric_names_list[index] = this._handleAllOption(values);\n    const namespace = this.selectedModel.metric_namespace;\n\n    document\n      .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n      ?.classList.add(\"namespace-edited-marker\");\n\n    if (!this.selectedModel.change_set.includes(\"metric_names_list\")) {\n      this.selectedModel.change_set.push(\"metric_names_list\");\n    }\n\n    document\n      .querySelector('[data-test=\"layer-container\"] [data-test=\"layer\"]>div')\n      ?.remove();\n\n    this.render();\n  }\n\n  _handleStatisticsChange(e, { values }, index) {\n    this.selectedModel.statistics_list[index] = values;\n    const namespace = this.selectedModel.metric_namespace;\n\n    document\n      .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n      ?.classList.add(\"namespace-edited-marker\");\n  }\n\n  _addMetrics() {\n    this.selectedModel.metric_dimensions_list.push([]);\n    this.selectedModel.metric_names_list.push([]);\n    this.selectedModel.statistics_list.push([]);\n    const namespace = this.selectedModel.metric_namespace;\n\n    document\n      .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n      ?.classList.add(\"namespace-edited-marker\");\n\n    this._updateChangeSet();\n    this.render();\n  }\n\n  _removeMetrics(e) {\n    const index = parseInt(e.target.getAttribute(\"data-index\"));\n    this.selectedModel.metric_dimensions_list.splice(index, 1);\n    this.selectedModel.metric_names_list.splice(index, 1);\n    this.selectedModel.statistics_list.splice(index, 1);\n    const namespace = this.selectedModel.metric_namespace;\n\n    document\n      .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n      ?.classList.add(\"namespace-edited-marker\");\n\n    this._updateChangeSet();\n    this.render();\n  }\n\n  _resetMetrics() {\n    const namespace = this.selectedModel.metric_namespace;\n    const defaultDimensionList = clone(this.defaultDimensions[namespace]);\n    const defaultMetricNameList = [];\n    const defaultStatisticsList = [];\n    if (defaultDimensionList) {\n      defaultDimensionList.forEach(() => {\n        defaultMetricNameList.push([\".*\"]);\n        defaultStatisticsList.push(this.defaultStatistics);\n      });\n      this.selectedModel.metric_dimensions_list = JSON.parse(\n        JSON.stringify(defaultDimensionList)\n      );\n      this.selectedModel.metric_names_list = JSON.parse(\n        JSON.stringify(defaultMetricNameList)\n      );\n      this.selectedModel.statistics_list = JSON.parse(\n        JSON.stringify(defaultStatisticsList)\n      );\n      this.selectedModel.change_set = [];\n      const namespace = this.selectedModel.metric_namespace;\n\n      document\n        .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n        ?.classList.remove(\"namespace-edited-marker\");\n\n      this.render();\n    }\n  }\n\n  _updateChangeSet() {\n    if (!this.selectedModel.change_set.includes(\"metric_names_list\")) {\n      this.selectedModel.change_set.push(\"metric_names_list\");\n    }\n    if (!this.selectedModel.change_set.includes(\"metric_dimensions_list\")) {\n      this.selectedModel.change_set.push(\"metric_dimensions_list\");\n    }\n  }\n\n  _parseDimension(jsonString) {\n    try {\n      const dimensionList = JSON.parse(jsonString);\n      for (let i = 1; i < dimensionList.length; i++) {\n        const previousKeys = keys(dimensionList[i - 1]);\n        const currentKeys = keys(dimensionList[i]);\n\n        if (difference(previousKeys, currentKeys).length > 0) {\n          return false;\n        }\n      }\n      return dimensionList;\n    } catch (e) {}\n    return false;\n  }\n\n  _handleAllOption(value, el) {\n    if (value.length > 0 && value.indexOf(ALL_VALUE) !== -1) {\n      if (value[value.length - 1] === ALL_VALUE) {\n        value = [ALL_VALUE];\n      } else {\n        value = without(value, ALL_VALUE);\n      }\n    }\n    return value;\n  }\n\n  render() {\n    if (this.selectedModel.metric_namespace) {\n      const selectedDimensions = this.selectedModel.metric_dimensions_list;\n      const selectedMetrics = this.selectedModel.metric_names_list;\n      const selectedStatistics = this.selectedModel.statistics_list;\n      const selectedNamespace = this.selectedModel.metric_namespace;\n      const dimensionList = [];\n\n      for (let i = 0; i < selectedDimensions.length; i++) {\n        let dimensionKeys = [];\n        each(selectedDimensions[i], (item) => {\n          dimensionKeys = union(dimensionKeys, keys(item));\n        });\n        dimensionList.push({\n          dimensionTitle: dimensionKeys.join(\", \"),\n          dimensionValue: JSON.stringify(selectedDimensions[i]),\n        });\n      }\n\n      this.el.innerHTML = template(DimensionMetricsPanelTemplate)({\n        dimensionList: dimensionList,\n      });\n\n      each(document.querySelectorAll(\".dimensions-value\"), (element, index) => {\n        ReactDOM.render(\n          <SplunkThemeProvider {...ThemeProviderSettings}>\n            <Text\n              multiline\n              defaultValue={dimensionList[index].dimensionValue}\n              onChange={(e, { value }) =>\n                this._handleDimensionsChange(e, { value }, index)\n              }\n            />\n          </SplunkThemeProvider>,\n          element\n        );\n      });\n\n      each(document.querySelectorAll(\".metrics-value\"), (element, index) => {\n        let options = this.defaultMetrics[selectedNamespace];\n        if (!options) {\n          options = [];\n        }\n        const optionsList = options.map((item) => (\n          <Multiselect.Option key={item} label={item} value={item} />\n        ));\n        optionsList.push(<Multiselect.Option label=\"All\" value=\".*\" />);\n        ReactDOM.render(\n          <SplunkThemeProvider {...ThemeProviderSettings}>\n            <Multiselect\n              allowNewValues\n              tabConfirmsNewValue\n              defaultValues={selectedMetrics[index]}\n              onChange={(e, { values }) =>\n                this._handleMetricsChange(e, { values }, index)\n              }\n            >\n              {optionsList}\n            </Multiselect>\n          </SplunkThemeProvider>,\n          element\n        );\n      });\n\n      each(document.querySelectorAll(\".statistics-value\"), (element, index) => {\n        const options = this.defaultStatistics;\n        ReactDOM.render(\n          <SplunkThemeProvider {...ThemeProviderSettings}>\n            <Multiselect\n              allowNewValues\n              tabConfirmsNewValue\n              defaultValues={selectedStatistics[index]}\n              onChange={(e, { values }) =>\n                this._handleStatisticsChange(e, { values }, index)\n              }\n            >\n              {options.map((item) => (\n                <Multiselect.Option key={item} label={item} value={item} />\n              ))}\n            </Multiselect>\n          </SplunkThemeProvider>,\n          element\n        );\n      });\n      for (const button of document.querySelectorAll(\n        \".metrics-remove-button\"\n      )) {\n        button.addEventListener(\"click\", this._removeMetrics);\n      }\n\n      document\n        .querySelector(\"#metrics-reset-button\")\n        .addEventListener(\"click\", this._resetMetrics);\n\n      document\n        .querySelector(\"#metrics-add-button\")\n        .addEventListener(\"click\", this._addMetrics);\n    } else {\n      this.el.empty();\n    }\n  }\n}\n\nexport default DimensionMetricsPanel;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport { template, map, difference, findWhere, clone } from \"underscore\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport ComboBox from \"@splunk/react-ui/ComboBox\";\nimport NamespaceListTemplate from \"../../html/NamespaceListTemplate.html\";\nimport DimensionMetricsPanel from \"./DimensionMetricsPanel.js\";\nimport { SplunkThemeProvider } from \"@splunk/themes\";\nimport { ThemeProviderSettings } from \"../styles/Theme\";\n\nconst ENTER_KEY = 13;\n\nclass NamespaceListPanel {\n  constructor(options) {\n    this.el = document.querySelector(\"#namespace-list-section\");\n\n    this.model = options.model;\n    this.selectedModel = options.selectedModel;\n    this.defaultNamespaces = options.defaultNamespaces;\n    this.defaultDimensions = options.defaultDimensions;\n    this.defaultMetrics = options.defaultMetrics;\n    this.defaultStatistics = options.defaultStatistics;\n    this.editMarks = [];\n\n    this.render = this.render.bind(this);\n    this._modifyEditMark = this._modifyEditMark.bind(this);\n    this._selectNamespace = this._selectNamespace.bind(this);\n    this._addSelected = this._addSelected.bind(this);\n    this._addNewNamespace = this._addNewNamespace.bind(this);\n    this._removeNamespace = this._removeNamespace.bind(this);\n    this._renderDimension = this._renderDimension.bind(this);\n    this._modifyEditMark = this._modifyEditMark.bind(this);\n    this._renderEditMarks = this._renderEditMarks.bind(this);\n  }\n\n  render() {\n    const namespaces = map(this.model, (item) => item.metric_namespace);\n\n    this.el.innerHTML = template(NamespaceListTemplate)({\n      namespaces: namespaces,\n    });\n\n    const remainingNamespaces = difference(\n      this.defaultNamespaces,\n      namespaces\n    ).sort();\n\n    ReactDOM.render(\n      <SplunkThemeProvider {...ThemeProviderSettings}>\n        <ComboBox\n          inline\n          onBlur={(e) => {\n            this._addNewNamespace(e);\n          }}\n          onKeyDown={(e) => {\n            this._handleKeyPress(e);\n          }}\n        >\n          {remainingNamespaces.map((item) => (\n            <ComboBox.Option key={item} value={item} />\n          ))}\n        </ComboBox>\n      </SplunkThemeProvider>,\n      document.getElementById(\"namespace-value\")\n    );\n\n    for (const namespaceLabel of document.querySelectorAll(\n      \".namespace-cell:not(#namespace-add-cell)\"\n    )) {\n      namespaceLabel?.addEventListener(\"click\", this._selectNamespace);\n    }\n\n    for (const button of document.querySelectorAll(\n      \".namespace-remove-button\"\n    )) {\n      button.addEventListener(\"click\", this._removeNamespace);\n    }\n\n    document\n      .querySelector(\"#namespace-add-button\")\n      .addEventListener(\"click\", this._onClickAddNamespace);\n\n    document\n      .querySelector(\"#namespace-add-cancel-button\")\n      .addEventListener(\"click\", this._onClickCancelNamespace);\n\n    this._renderEditMarks();\n    this._addSelected();\n  }\n\n  _onClickAddNamespace() {\n    const addCell = document.querySelector(\"#namespace-add-cell\");\n    if (addCell) {\n      addCell.style.display = \"block\";\n    }\n    document.querySelector(\"#namespace-value>div>div\")?.remove();\n    document.querySelector(\"#namespace-value input\")?.focus();\n  }\n\n  _onClickCancelNamespace() {\n    const namespaceInput = document.querySelector(\"#namespace-value input\");\n    if (namespaceInput) {\n      namespaceInput.value = \"\";\n      namespaceInput?.classList.remove(\"validate-error\");\n    }\n    const namespaceAddCell = document.querySelector(\"#namespace-add-cell\");\n    if (namespaceAddCell) {\n      namespaceAddCell.style.display = \"none\";\n    }\n    const namespaceAddCellError = document.querySelector(\n      \"#namespace-add-error\"\n    );\n    if (namespaceAddCellError) {\n      namespaceAddCellError.style.display = \"none\";\n    }\n  }\n\n  _selectNamespace(event) {\n    const selectedNamespace = event.target?.getAttribute(\"data-namespace\");\n    const findModel = findWhere(this.model, {\n      metric_namespace: selectedNamespace,\n    });\n    if (findModel) {\n      this.selectedModel = findModel;\n    }\n    this._addSelected();\n  }\n\n  _addSelected() {\n    document.querySelector(\".namespace-cell\")?.classList.remove(\"selected\");\n\n    const namespace = this.selectedModel.metric_namespace;\n    document\n      .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n      ?.classList.add(\"selected\");\n\n    this._renderDimension();\n  }\n\n  _addNewNamespace(e) {\n    const newNamespace = e.target.value.trim();\n    const existedNamespaces = map(this.model, function (item) {\n      return item.metric_namespace;\n    });\n    if (newNamespace === \"\") {\n      const addNamespaceError = document.querySelector(\"#namespace-add-error\");\n      if (addNamespaceError) {\n        addNamespaceError.textContent = \"Namespace value cannot be empty.\";\n        addNamespaceError.style.display = \"block\";\n      }\n      e.currentTarget?.classList.add(\"validate-error\");\n    } else if (existedNamespaces.indexOf(newNamespace) === -1) {\n      let newModel = {};\n      if (this.defaultNamespaces.indexOf(newNamespace) === -1) {\n        newModel = {\n          metric_namespace: newNamespace,\n          metric_dimensions_list: [],\n          metric_names_list: [],\n          statistics_list: [],\n          change_set: [],\n        };\n      } else {\n        const metricNamesList = [];\n        const statisticsList = [];\n        const dimensionList = clone(this.defaultDimensions[newNamespace]);\n        for (let i = 0; i < dimensionList.length; i++) {\n          metricNamesList.push([\".*\"]);\n          statisticsList.push(this.defaultStatistics);\n        }\n        newModel = {\n          metric_namespace: newNamespace,\n          metric_dimensions_list: dimensionList,\n          metric_names_list: metricNamesList,\n          statistics_list: statisticsList,\n          change_set: [],\n        };\n      }\n      this.model.push(newModel);\n      this.selectedModel = newModel;\n      this._modifyEditMark();\n      this.editMarks.push(this.selectedModel.metric_namespace);\n      this.render();\n    } else {\n      const addNamespaceError = document.querySelector(\"#namespace-add-error\");\n      if (addNamespaceError) {\n        addNamespaceError.textContent = \"This namespace is already existed.\";\n        addNamespaceError.style.display = \"block\";\n      }\n\n      e.target?.classList.add(\"validate-error\");\n    }\n  }\n\n  _removeNamespace(e) {\n    e.stopPropagation();\n    const removedModel = findWhere(this.model, {\n      metric_namespace: e.target?.getAttribute(\"data-namespace\"),\n    });\n    if (removedModel) {\n      const index = this.model.indexOf(removedModel);\n      if (index > -1) {\n        this.model.splice(index, 1);\n      }\n    }\n    this._modifyEditMark();\n    this.render();\n    const lastIndex = this.model.length - 1;\n    if (lastIndex > -1) {\n      this.selectedModel = this.model[lastIndex];\n      this._addSelected();\n    }\n  }\n\n  _renderDimension() {\n    const dimensionMetricsPanel = new DimensionMetricsPanel({\n      model: this.model,\n      selectedModel: this.selectedModel,\n      defaultDimensions: this.defaultDimensions,\n      defaultMetrics: this.defaultMetrics,\n      defaultStatistics: this.defaultStatistics,\n    });\n    dimensionMetricsPanel.render();\n  }\n\n  _handleKeyPress(e) {\n    if (e.which === ENTER_KEY) {\n      const addNamespaceError = document.querySelector(\"#namespace-add-error\");\n      if (addNamespaceError) {\n        addNamespaceError.textContent =\n          \"Press <TAB> key to add the selected namespace\";\n        addNamespaceError.style.display = \"block\";\n      }\n    }\n  }\n\n  _modifyEditMark() {\n    this.editMarks = [];\n\n    for (const namespace of document.querySelectorAll(\n      \"div.namespace-edited-marker\"\n    )) {\n      this.editMarks.push(namespace.getAttribute(\"data-namespace\"));\n    }\n  }\n\n  _renderEditMarks() {\n    for (const namespace of this.editMarks) {\n      document\n        .querySelector(`.namespace-cell[data-namespace=\"${namespace}\"]`)\n        ?.classList.add(\"namespace-edited-marker\");\n    }\n  }\n}\n\nexport default NamespaceListPanel;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport React from \"react\";\n\n/**\n *\n * @param {object} props\n * @param {Function} props.handleCancelClick called when calncel button clicked\n * @returns\n */\nexport const AdvancedMetricConfigurationTemaplate = ({ handleCancelClick }) => (\n  <div id=\"advanced-metric-configuration-wrapper\">\n    <div\n      data-align-items=\"stretch\"\n      data-test=\"row\"\n      className=\"ucc-main-div advanced-metric-configuration\"\n      style={{ padding: \"5px 0px\", marginBottom: \"4px\" }}\n    >\n      <div\n        data-test=\"column\"\n        className=\"ucc-sub-div\"\n        style={{\n          flex: \"1 1 auto\",\n          width: \"calc((100% - 88px) * 0.0833333 + 0px)\",\n        }}\n        // \"flex: 1 1 auto; width: calc((100% - 88px) * 0.0833333 + 0px)\"\n      >\n        <div className=\"page-subtitle\">\n          Inputs &gt; Cloudwatch Input &gt; Edit Metrics Configuration\n        </div>\n      </div>\n    </div>\n    <div\n      data-align-items=\"stretch\"\n      data-test=\"row\"\n      className=\"ucc-main-div advanced-metric-configuration\"\n      style={{ marginTop: \"4px\", marginBottom: \"4px\", display: \"block\" }}\n    >\n      <div\n        data-test=\"column\"\n        className=\"ucc-sub-div\"\n        style={{\n          boxShadow: \"rgba(0, 0, 0, 0.2) 0px 4px 8px\",\n          padding: \"1%\",\n          paddingBottom: \"0%\",\n          flex: \"8 8 auto\",\n          width: \"100%\",\n          minWidth: \"1180px\",\n        }}\n      >\n        <div id=\"advanced-submit-error-msg\">\n          <svg\n            focusable=\"false\"\n            height=\"24px\"\n            width=\"24px\"\n            viewBox=\"0 0 1375 1500\"\n            aria-hidden=\"true\"\n            preserveAspectRatio=\"xMidYMid\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{ verticalAlign: \"middle\", fill: \"#dc4e41\" }}\n          >\n            <path d=\"M187.5 61.5h1000c103.553 0 187.5 83.947 187.5 187.5v1000c0 103.553-83.947 187.5-187.5 187.5h-1000C83.947 1436.5 0 1352.553 0 1249V249C0 145.447 83.947 61.5 187.5 61.5zm400.79 413.083l32.145 257.167c4.908 39.264 34.086 74.685 69.815 91.187 36.612-16.018 64.87-50.826 69.914-91.187l32.146-257.167C799.18 419.623 759.582 374 703.7 374h-26.8c-55.908 0-95.555 45.033-88.61 100.583zm101.293 644.209c63.283 0 114.584-51.301 114.584-114.584 0-63.282-51.301-114.583-114.584-114.583-63.282 0-114.583 51.3-114.583 114.583s51.3 114.584 114.583 114.584z\"></path>\n          </svg>\n          <div\n            id=\"error-message\"\n            style={{\n              display: \"inline-block\",\n              padding: \" 0px 6px\",\n              verticalAlign: \"middle\",\n            }}\n          ></div>\n        </div>\n        <table className=\"table table-chrome advanced-metrics-table\">\n          <thead className=\"table-head\">\n            <tr>\n              <th>Namespace</th>\n              <th className=\"no-border\">Dimension</th>\n              <th className=\"no-border\">\n                Dimension Value\n                <span\n                  className=\"tooltip-icon\"\n                  data-toggle=\"tooltip\"\n                  data-container=\"body\"\n                  title=\"CloudWatch metric dimensions as JSON array or object, with strings as keys and regular expressions as values. Splunk Web automatically populates correctly formatted JSON to collect all metric dimensions in the namespace you have selected\"\n                >\n                  ?\n                </span>\n              </th>\n              <th className=\"no-border\">Metrics</th>\n              <th className=\"no-border\">Metric Statistics</th>\n              <th\n                className=\"no-border\"\n                style={{\n                  padding: \"5px\",\n                  minWidth: \"unset\",\n                  background: \"inherit\",\n                  width: \"0.4%\",\n                }}\n              ></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr style={{ verticalAlign: \"top\" }}>\n              <td style={{ borderRight: \"1px solid #bfbfbf\" }}>\n                <div className=\"list-section\" id=\"namespace-list-section\"></div>\n              </td>\n              <td colSpan={5}>\n                <div className=\"list-section\" id=\"dimension-list-section\"></div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div\n      data-align-items=\"stretch\"\n      data-test=\"row\"\n      className=\"ucc-main-div metrics-configuration-footer advanced-metric-configuration\"\n    >\n      <button\n        data-test=\"button\"\n        type=\"button\"\n        label=\"Cancel\"\n        id=\"metrics-cancel\"\n        className=\"ucc-cancel-button ucc-base-button\"\n        data-inline=\"true\"\n        onClick={handleCancelClick}\n      >\n        <span>\n          <span data-test=\"label\">Cancel</span>\n        </span>\n      </button>\n      <button\n        data-test=\"button\"\n        type=\"button\"\n        label=\"Save Changes\"\n        id=\"metrics-save\"\n        className=\"ucc-save-button ucc-base-button\"\n        data-inline=\"true\"\n      >\n        <span>\n          <span data-test=\"label\">Save Changes</span>\n        </span>\n      </button>\n    </div>\n  </div>\n);\n\nexport default AdvancedMetricConfigurationTemaplate;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { some, isEqual } from \"underscore\";\nimport NamespaceListPanel from \"./NamespaceListPanel.js\";\nimport { AdvancedMetricConfigurationTemaplate } from \"../components/metrics/AdvncedMatricConfigurationTemplate\";\nimport \"../../stylesheets/UCC_stylesheet.css\";\nimport \"../../stylesheets/MetricsConfigurationAdvancedView.css\";\n\nclass MetricsConfigurationAdvancedView {\n  constructor(options) {\n    this.model = options.model;\n    this.defaultDimensions = options.defaultDimensions;\n    this.defaultMetrics = options.defaultMetrics;\n    this.defaultStatistics = options.defaultStatistics;\n    this.defaultNamespaces = options.defaultNamespaces;\n    this.selectedModel = this.model[0];\n\n    this.render = this.render.bind(this);\n    this._renderNamespaces = this._renderNamespaces.bind(this);\n    this._validateModel = this._validateModel.bind(this);\n  }\n\n  render() {\n    document\n      .querySelectorAll(\n        'div[role=\"main\"] > div div [data-test=\"column-layout\"] > div'\n      )\n      .forEach((view) => {\n        if (view.style) {\n          view.style.display = \"none\";\n        }\n      });\n\n    const containerForAdvanced = document.createElement(\"div\");\n    containerForAdvanced.id = \"container-advanced-metrics-configuration\";\n    const container = document.querySelector('div[role=\"main\"] > div > div');\n    container.append(containerForAdvanced);\n    ReactDOM.render(\n      <AdvancedMetricConfigurationTemaplate\n        handleCancelClick={this._cancelModifications}\n      />,\n      containerForAdvanced\n    );\n\n    this._renderNamespaces();\n  }\n\n  _renderNamespaces() {\n    this.namespaceListPanel = new NamespaceListPanel({\n      model: this.model,\n      selectedModel: this.selectedModel,\n      defaultNamespaces: this.defaultNamespaces,\n      defaultDimensions: this.defaultDimensions,\n      defaultMetrics: this.defaultMetrics,\n      defaultStatistics: this.defaultStatistics,\n    });\n    this.namespaceListPanel.render();\n  }\n\n  _cancelModifications() {\n    document.getElementById(\"advanced-metric-configuration-wrapper\")?.remove();\n    const mainModelElements = document.querySelectorAll(\n      'div[role=\"main\"] > div div [data-test=\"column-layout\"] > div'\n    );\n    mainModelElements.forEach((mainModelElem) => {\n      if (mainModelElem?.style) {\n        mainModelElem.style.display = \"flex\";\n      }\n    });\n  }\n\n  _validateModel() {\n    document\n      .querySelector(\".namespace-cell[data-namespace]\")\n      ?.classList?.remove(\"validate-error\");\n\n    if (!this.model.length) {\n      return \"Metric configurations must have at least one namespace with appropriate metric, dimensions and statstics value. Please check.\";\n    }\n    for (const attrs of this.model) {\n      const namespace = attrs.metric_namespace;\n      const wrongFormElement = document.querySelector(\".json-err-state\");\n\n      const addValidateErrorForNamespace = (dataNamespace) => {\n        document\n          .querySelector(`.namespace-cell[data-namespace=\"${dataNamespace}\"]`)\n          ?.classList.add(\"validate-error\");\n      };\n\n      if (wrongFormElement) {\n        const errNamespace = wrongFormElement?.getAttribute(\"data-namespace\");\n        addValidateErrorForNamespace(errNamespace);\n        return (\n          \"The metric dimension value of \" +\n          errNamespace +\n          \" should be a JSON array, of which elements should have same keys. Please check.\"\n        );\n      } else if (this._containsEmptyItem(attrs.metric_dimensions_list)) {\n        addValidateErrorForNamespace(namespace);\n\n        return (\n          'The metric dimension value of \"' +\n          attrs.metric_namespace +\n          '\" is empty. Please check.'\n        );\n      } else if (this._containsEmptyItem(attrs.metric_names_list)) {\n        addValidateErrorForNamespace(namespace);\n\n        return (\n          'The metric name of \"' +\n          attrs.metric_namespace +\n          '\" is empty. Please check.'\n        );\n      } else if (this._containsEmptyItem(attrs.statistics_list)) {\n        addValidateErrorForNamespace(namespace);\n\n        return (\n          'The metric statistics of \"' +\n          attrs.metric_namespace +\n          '\" is empty. Please check.'\n        );\n      }\n    }\n  }\n\n  _containsEmptyItem(twoDimensionArray) {\n    if (twoDimensionArray.length === 0) {\n      return true;\n    }\n    return some(twoDimensionArray, (ele) => {\n      return isEqual(ele, []) || isEqual(ele, [\"\"]);\n    });\n  }\n}\n\nexport default MetricsConfigurationAdvancedView;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport React from \"react\";\n\n/**\n *\n * @param {object} props\n * @param {string} props.service service name\n * @param {boolean} props.isDimensionModified decide if should display \"Modified\" or dimensions text\n * @param {string} props.dimensions dimentions as string\n * @param {boolean} props.isMetricsModified decide if should display \"Modified\" or metrics text\n * @param {string} props.metrics metrics as string\n * @returns\n */\nexport const MetricConfigurationRow = ({\n  service,\n  isDimensionModified,\n  dimensions,\n  isMetricsModified,\n  metrics,\n  handleLoadSelectedNameSpace,\n}) => (\n  <tr>\n    <td>{service}</td>\n    <td>\n      {isDimensionModified ? (\n        <a\n          class=\"link-text configuration-modified-mark\"\n          title={dimensions}\n          data-service={service}\n          onClick={() => handleLoadSelectedNameSpace(service)}\n        >\n          Modified\n        </a>\n      ) : (\n        <span>{dimensions}</span>\n      )}\n    </td>\n    <td>\n      {isMetricsModified ? (\n        <a\n          class=\"link-text configuration-modified-mark\"\n          title={metrics}\n          data-service={service}\n          onClick={() => handleLoadSelectedNameSpace(service)}\n        >\n          Modified\n        </a>\n      ) : (\n        <span>{metrics}</span>\n      )}\n    </td>\n  </tr>\n);\n\nexport const MetricConfigurationHeader = ({ count }) => (\n  <tr>\n    <th>\n      Name Service\n      <span class=\"metrics-configuration-count\">({count})</span>\n    </th>\n    <th>Dimensions</th>\n    <th>Metrics</th>\n  </tr>\n);\n\nexport default MetricConfigurationRow;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\nimport React from \"react\";\nimport MetricsConfRow from \"../components/metrics/MetricConfigurationRow\";\n\nclass MetricsConfigurationRow {\n  constructor(options) {\n    this.model = options.model;\n    this.defaultDimensions = options.defaultDimensions;\n    this.defaultMetrics = options.defaultMetrics;\n    this.handleLoadSelectedNameSpace = options.handleLoadSelectedNameSpace;\n\n    this.render = this.render.bind(this);\n  }\n\n  render() {\n    const dimensionField = this.model.metric_dimensions_list;\n    const metricField = this.model.metric_names_list;\n\n    const dimensionKeySet = new Set();\n    const metricKeySet = new Set();\n    const defaultDimensionKeySet = new Set();\n\n    metricField?.forEach((metricArr) =>\n      metricArr?.forEach((metric) => metricKeySet.add(metric))\n    );\n\n    dimensionField?.forEach((dimensionValue) =>\n      dimensionValue?.forEach((dimensionItem) =>\n        Object.keys(dimensionItem)?.forEach((key) => dimensionKeySet.add(key))\n      )\n    );\n\n    this.defaultDimensions?.forEach((dimensionValue) =>\n      dimensionValue?.forEach((dimensionItem) =>\n        Object.keys(dimensionItem)?.forEach((key) =>\n          defaultDimensionKeySet.add(key)\n        )\n      )\n    );\n\n    return (\n      <MetricsConfRow\n        service={this.model.metric_namespace}\n        metrics={this._restrictStringLength(\n          metricKeySet.has(\".*\") ||\n            (this.defaultMetrics &&\n              metricKeySet.difference(new Set(this.defaultMetrics)).size === 0)\n            ? \"All\"\n            : Array.from(metricKeySet).join(\", \")\n        )}\n        dimensions={this._restrictStringLength(\n          defaultDimensionKeySet.size > 0 &&\n            defaultDimensionKeySet.difference(dimensionKeySet).size === 0\n            ? \"All\"\n            : Array.from(dimensionKeySet).join(\", \")\n        )}\n        isMetricsModified={this.model.change_set.includes(\"metric_names_list\")}\n        isDimensionModified={this.model.change_set.includes(\n          \"metric_dimensions_list\"\n        )}\n        handleLoadSelectedNameSpace={this.handleLoadSelectedNameSpace}\n      />\n    );\n  }\n\n  _restrictStringLength(text) {\n    return text.length > 50 ? text.substring(0, 48) + \"...\" : text;\n  }\n}\n\nexport default MetricsConfigurationRow;\n","/*\n * SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>\n * SPDX-License-Identifier: LicenseRef-Splunk-8-2021\n *\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRESTURL } from \"@splunk/splunk-utils/url\";\nimport MetricsConfigurationAdvancedView from \"./dependencies/MetricsConfigurationAdvancedView\";\nimport MetricsConfigurationRow from \"./dependencies/MetricsConfigurationRow\";\nimport { MetricConfigurationHeader } from \"./components/metrics/MetricConfigurationRow\";\n\nimport \"../stylesheets/MetricsConfigurationView.css\";\n\nconst APP_NAME = \"Splunk_TA_aws\";\nconst ALL_VALUE = \".*\";\nclass MetricsConfigurationView {\n  /**\n   *\n   * @constructor\n   * @param {Object} globalConfig - Global configuration.\n   * @param {element} el - The element of the custom row.\n   * @param {Object} data - Mode, serviceName, and value.\n   * @param {object} util - the utility object\n   * @param {function} setValue - set value of the custom field\n   */\n  constructor(globalConfig, el, data, setValue, util) {\n    this.globalConfig = globalConfig;\n    this.el = el;\n    this.data = data;\n    this.util = util;\n    this.setValue = setValue;\n    this.mainModel = [];\n    this.cachedChangeSet = [];\n\n    this._goAdvancedSetting = this._goAdvancedSetting.bind(this);\n    this._generateViewModel = this._generateViewModel.bind(this);\n    this._updateModifications = this._updateModifications.bind(this);\n    this._loadDefaultSettings = this._loadDefaultSettings.bind(this);\n    this._renderRows = this._renderRows.bind(this);\n    this._updateModel = this._updateModel.bind(this);\n    this._loadSelectedNameSpace = this._loadSelectedNameSpace.bind(this);\n    this.render = this.render.bind(this);\n\n    this._loadDefaultSettings().then(() => {\n      this._generateViewModel();\n      this.render();\n      this._updateModel();\n    });\n  }\n\n  render() {\n    this.el.innerHTML = this._generateTemplateMetricTableHTML(\n      this.mainModel.length\n    );\n    this._renderRows();\n    this.el\n      .querySelector(\"#metrics-configuration-advanced-setting\")\n      ?.addEventListener(\"click\", this._goAdvancedSetting);\n    return this;\n  }\n\n  _loadSelectedNameSpace(namespace) {\n    this._goAdvancedSetting();\n\n    document\n      .querySelector(`.namespace-cell[data-namespace='${namespace}']`)\n      .click();\n  }\n\n  _loadDefaultSettings() {\n    const contextURL = createRESTURL(\n      \"splunk_ta_aws/splunk_ta_aws_cloudwatch_default_settings\",\n      {\n        app: APP_NAME,\n        sharing: \"app\",\n      }\n    );\n    return fetch(contextURL + \"?output_mode=json\") /* global fetch:false */\n      .then((response) => response.json())\n      .then((cloudwatchSettings) => {\n        const { dimensions, metrics, statistics, namespaces } =\n          cloudwatchSettings.entry[0].content;\n\n        const responseDimensions = JSON.parse(dimensions);\n\n        for (const service in responseDimensions) {\n          const dimensionArr = responseDimensions[service].map(\n            (dimensionItem) => [dimensionItem]\n          );\n          responseDimensions[service] = dimensionArr;\n        }\n\n        this.defaultDimensions = responseDimensions;\n        this.defaultMetrics = JSON.parse(metrics);\n        this.defaultStatistics = JSON.parse(statistics);\n        this.defaultNamespaces = JSON.parse(namespaces);\n      });\n  }\n\n  _generateViewModel() {\n    let namespaces = this.data.value;\n    let models = [];\n    if (!namespaces) {\n      models = this.defaultNamespaces.map((namespace) => {\n        const metricNamesList = [];\n        const statisticsList = [];\n        const dimensionList = [...this.defaultDimensions[namespace]];\n\n        for (let i = 0; i < dimensionList.length; i++) {\n          metricNamesList.push([ALL_VALUE]);\n          statisticsList.push(this.defaultStatistics);\n        }\n        return {\n          metric_namespace: namespace,\n          metric_dimensions_list: dimensionList,\n          metric_names_list: metricNamesList,\n          statistics_list: statisticsList,\n          change_set: this.cachedChangeSet[namespace] || [],\n        };\n      });\n    } else {\n      namespaces = JSON.parse(namespaces);\n      let metricDimensions = \"\";\n      let metricNames = \"\";\n      let statistics = \"\";\n      const serviceMark = {};\n\n      this.util.setState((prevState) => {\n        const data = { ...prevState.data };\n        metricDimensions = JSON.parse(data.metric_dimensions.value);\n        metricNames = JSON.parse(data.metric_names.value);\n        statistics = JSON.parse(data.statistics.value);\n        return { data };\n      });\n\n      for (let i = 0; i < namespaces.length; i++) {\n        const namespace = namespaces[i];\n        let metricNameField = JSON.parse(metricNames[i]);\n        if (metricNameField === ALL_VALUE) {\n          metricNameField = [ALL_VALUE];\n        }\n\n        if (serviceMark[namespace] === undefined) {\n          models.push({\n            metric_namespace: namespace,\n            metric_dimensions_list: [JSON.parse(metricDimensions[i])],\n            metric_names_list: [metricNameField],\n            statistics_list: [JSON.parse(statistics[i])],\n            change_set: this.cachedChangeSet[namespace] || [],\n          });\n          serviceMark[namespace] = models.length - 1;\n        } else {\n          const model = models[serviceMark[namespace]];\n          model.metric_dimensions_list.push(JSON.parse(metricDimensions[i]));\n          model.metric_names_list.push(metricNameField);\n          model.statistics_list.push(JSON.parse(statistics[i]));\n        }\n      }\n    }\n    models.sort((a, b) => a.metric_namespace.localeCompare(b.metric_namespace));\n    this.mainModel = models;\n  }\n\n  _renderRows() {\n    const rows = this.mainModel.map((model) => {\n      const rowPanel = new MetricsConfigurationRow({\n        model: model,\n        defaultDimensions: this.defaultDimensions[model.metric_namespace],\n        defaultMetrics: this.defaultMetrics[model.metric_namespace],\n        handleLoadSelectedNameSpace: this._loadSelectedNameSpace,\n      });\n      return rowPanel.render();\n    });\n\n    const tbodyElem = document.querySelector(\n      \"#metrics-configuration-table > tbody\"\n    );\n\n    if (tbodyElem) {\n      ReactDOM.render(\n        [<MetricConfigurationHeader count={rows.length} />, ...rows],\n        tbodyElem\n      );\n    }\n  }\n\n  _updateModel() {\n    const namespaceField = [];\n    const dimensionField = [];\n    const metricField = [];\n    const statisticsField = [];\n    this.mainModel.forEach((model) => {\n      const namespace = model.metric_namespace;\n      const dimensionsList = model.metric_dimensions_list;\n      const metricsList = model.metric_names_list;\n      const statisticsList = model.statistics_list;\n\n      for (let i = 0; i < dimensionsList.length; i++) {\n        namespaceField.push(namespace);\n        dimensionField.push(JSON.stringify(dimensionsList[i]));\n\n        // special handling for metric_names, \".*\" should be a string value, not an array\n        if (metricsList[i].length === 1 && metricsList[i][0] === ALL_VALUE) {\n          metricField.push('\"' + ALL_VALUE + '\"');\n        } else {\n          metricField.push(JSON.stringify(metricsList[i]));\n        }\n        statisticsField.push(JSON.stringify(statisticsList[i]));\n      }\n\n      this.cachedChangeSet[namespace] = model.change_set;\n    });\n\n    this.util.setState((prevState) => {\n      const data = { ...prevState.data };\n\n      data.metric_namespace.value = JSON.stringify(namespaceField);\n      data.metric_dimensions.value = JSON.stringify(dimensionField);\n      data.metric_names.value = JSON.stringify(metricField);\n      data.statistics.value = JSON.stringify(statisticsField);\n\n      return { data };\n    });\n  }\n\n  _goAdvancedSetting() {\n    this.tempModel = JSON.parse(JSON.stringify(this.mainModel));\n    this.advancedView = new MetricsConfigurationAdvancedView({\n      model: this.tempModel,\n      defaultDimensions: this.defaultDimensions,\n      defaultMetrics: this.defaultMetrics,\n      defaultStatistics: this.defaultStatistics,\n      defaultNamespaces: Object.keys(this.defaultDimensions),\n    });\n\n    this.advancedView.render();\n    document\n      .querySelector(\"#metrics-save\")\n      ?.addEventListener(\"click\", this._updateModifications);\n  }\n\n  _updateModifications() {\n    const errMessage = this.advancedView._validateModel();\n    if (!errMessage) {\n      document\n        .getElementById(\"advanced-metric-configuration-wrapper\")\n        ?.remove();\n      const mainModelElements = document.querySelectorAll(\n        'div[role=\"main\"] > div div [data-test=\"column-layout\"] > div'\n      );\n      mainModelElements.forEach((mainModelElem) => {\n        if (mainModelElem?.style) {\n          mainModelElem.style.display = \"flex\";\n        }\n      });\n      this.mainModel = JSON.parse(JSON.stringify(this.tempModel));\n      this.render();\n      this._updateModel();\n    } else {\n      const errorMsg = document.querySelector(\"#error-message\");\n      if (errorMsg) {\n        const errMessageElem = document.querySelector(\"#error-message\");\n        if (errMessageElem) {\n          errMessageElem.textContent = errMessage;\n        }\n      }\n      const errorContainer = document.querySelector(\n        \"#advanced-submit-error-msg\"\n      );\n      if (errorContainer) {\n        errorContainer.style.display = \"block\";\n      }\n    }\n  }\n\n  _generateTemplateMetricTableHTML(count) {\n    return `\n    <div class=\"metrics-configuration-header\">\n    <a href=\"javascript:;\" class=\"link-text\" id=\"metrics-configuration-advanced-setting\">(Edit in advanced mode)</a>\n    </div>\n    <table class=\"metrics-table-view\" id=\"metrics-configuration-table\">\n        <tr>\n            <th>Name Service <span class=\"metrics-configuration-count\">${count}</span></th>\n            <th>Dimensions</th>\n            <th>Metrics</th>\n        </tr>\n    </table>`;\n  }\n}\n\nexport default MetricsConfigurationView;\n"],"names":["DimensionMetricsPanel","options","defaultDimensions","defaultMetrics","defaultStatistics","model","selectedModel","el","document","querySelector","render","this","bind","_handleDimensionsChange","_handleMetricsChange","_handleStatisticsChange","_addMetrics","_removeMetrics","_resetMetrics","_updateChangeSet","e","index","value","jsonValue","_parseDimension","target","parentElement","classList","remove","removeAttribute","metric_dimensions_list","namespace","metric_namespace","add","change_set","includes","push","setAttribute","values","metric_names_list","_handleAllOption","statistics_list","parseInt","getAttribute","splice","defaultDimensionList","clone","defaultMetricNameList","defaultStatisticsList","forEach","_this","JSON","parse","stringify","jsonString","dimensionList","i","length","previousKeys","keys","currentKeys","difference","indexOf","without","selectedDimensions","selectedMetrics","selectedStatistics","selectedNamespace","dimensionKeys","each","item","union","dimensionTitle","join","dimensionValue","innerHTML","template","querySelectorAll","element","ReactDOM","React","SplunkThemeProvider","ThemeProviderSettings","Text","multiline","defaultValue","onChange","_this2","optionsList","map","Multiselect","Option","key","label","allowNewValues","tabConfirmsNewValue","defaultValues","addEventListener","empty","NamespaceListPanel","defaultNamespaces","editMarks","_modifyEditMark","_selectNamespace","_addSelected","_addNewNamespace","_removeNamespace","_renderDimension","_renderEditMarks","namespaces","remainingNamespaces","sort","ComboBox","inline","onBlur","onKeyDown","_handleKeyPress","getElementById","namespaceLabel","_onClickAddNamespace","_onClickCancelNamespace","addCell","style","display","focus","namespaceInput","namespaceAddCell","namespaceAddCellError","event","_event$target","findModel","findWhere","newNamespace","trim","existedNamespaces","addNamespaceError","textContent","currentTarget","newModel","metricNamesList","statisticsList","stopPropagation","removedModel","_e$target2","lastIndex","which","AdvancedMetricConfigurationTemaplate","handleCancelClick","id","className","padding","marginBottom","flex","width","marginTop","boxShadow","paddingBottom","minWidth","focusable","height","viewBox","preserveAspectRatio","xmlns","verticalAlign","fill","d","title","background","borderRight","colSpan","type","onClick","MetricsConfigurationAdvancedView","_renderNamespaces","_validateModel","view","containerForAdvanced","createElement","append","_cancelModifications","namespaceListPanel","mainModelElem","attrs","wrongFormElement","addValidateErrorForNamespace","dataNamespace","errNamespace","_containsEmptyItem","twoDimensionArray","some","ele","isEqual","MetricConfigurationRow","service","isDimensionModified","dimensions","isMetricsModified","metrics","handleLoadSelectedNameSpace","MetricConfigurationHeader","count","MetricsConfigurationRow","dimensionField","metricField","dimensionKeySet","Set","metricKeySet","defaultDimensionKeySet","metricArr","metric","dimensionItem","Object","_Object$keys","_Object$keys2","MetricsConfRow","_restrictStringLength","has","size","Array","from","text","substring","MetricsConfigurationView","globalConfig","data","setValue","util","mainModel","cachedChangeSet","_goAdvancedSetting","_generateViewModel","_updateModifications","_loadDefaultSettings","_renderRows","_updateModel","_loadSelectedNameSpace","then","_generateTemplateMetricTableHTML","click","contextURL","createRESTURL","app","sharing","fetch","response","json","cloudwatchSettings","entry","content","statistics","responseDimensions","dimensionArr","models","metricDimensions","metricNames","serviceMark","setState","prevState","metric_dimensions","metric_names","metricNameField","undefined","_this3","a","b","localeCompare","rows","_this4","tbodyElem","namespaceField","statisticsField","dimensionsList","metricsList","_this5","tempModel","advancedView","errMessage","errMessageElem","errorContainer"],"mappings":"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"}