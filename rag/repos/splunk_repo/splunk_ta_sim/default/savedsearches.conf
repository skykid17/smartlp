[Telemetry: SIM add-on configuration]
search = | inputlookup sim_api_config_lookup \
| stats values(api_url) as SIMAPIUrl, values(realm) as realm, values(org_id) as OrganizationId, values(default) as default, values(enable) as enable by _key \
| fields - _key \
| makejson output=event
enableSched=1
action.outputtelemetry                     = 1
action.outputtelemetry.param.anonymous     = 1
action.outputtelemetry.param.support       = 1
action.outputtelemetry.param.license       = 0
action.outputtelemetry.param.optinrequired = 3
action.outputtelemetry.param.component     = app.splunk_ta_sim.configuration
action.outputtelemetry.param.input         = event
action.outputtelemetry.param.type          = aggregate
cron_schedule = 1 3 * * *
dispatch.earliest_time = -1d

[Telemetry: SIM add-on modular input usage statistics]
search = index="_internal" sourcetype="*splunk_ta_sim*" sim_modular_input \
| eval error_log=if(status="error", _raw, null) \
| stats latest(instance_name) as instance_name, latest(organization_id) as OrganizationId, latest(signalflow_program) as SignalFlowFilters, latest(metadata_msg_count) as CumulativeMetadataMsgsCollected,latest(data_msg_count) as CumulativeDataMsgsCollected, latest(other_msg_count) as CumulativeOtherMsgsCollected, latest(mts_count) as CumulativeMTSCollected, sum(mts_in_data_msg) as MTSCollected, latest(_time) as latest_dp_time, avg(mts_delay) as AvgMTSDelay, latest(retry_count) as RetryCount, count(eval(searchmatch("status=error"))) as ErrorCount, values(error_log) as error_msgs by host,RequestId, thread_id, computation_id \
| sort -latest_dp_time \
| eval SplunkNode=md5(host), LatestActivityTime=tostring(now()-latest_dp_time, "duration") , ModularInputName=md5(instance_name),ThreadId=thread_id, ComputationId=computation_id, ErrorMessages=mvindex(error_msgs, 0, 4) \
| table SplunkNode, OrganizationId, ModularInputName, SignalFlowFilters, LatestActivityTime, RequestId, ThreadId, ComputationId,CumulativeMetadataMsgsCollected,CumulativeDataMsgsCollected,CumulativeOtherMsgsCollected,CumulativeMTSCollected, MTSCollected, AvgMTSDelay, RetryCount, ErrorCount, ErrorMessages \
| join type=left ComputationId \
    [| mstats count(_value) as mts_count WHERE index=sim_metrics AND metric_name=* BY computationId, metric_name \
    | eval mts_by_name = metric_name + " - " + mts_count , ComputationId = computationId \
    | stats values(mts_by_name) as MTSCountByMetricName by ComputationId \
    | table ComputationId, MTSCountByMetricName] \
| makejson output=event
enableSched=1
action.outputtelemetry                     = 1
action.outputtelemetry.param.anonymous     = 1
action.outputtelemetry.param.support       = 1
action.outputtelemetry.param.license       = 0
action.outputtelemetry.param.optinrequired = 3
action.outputtelemetry.param.component     = app.splunk_ta_sim.modular_input
action.outputtelemetry.param.input         = event
action.outputtelemetry.param.type          = aggregate
cron_schedule = 2 * * * *
dispatch.earliest_time = -1h

[Telemetry: SIM add-on command usage statistics]
search = index="_internal" sourcetype="*splunk_ta_sim*" sim_command \
| eval error_log=if(status="error", _raw, null) \
| stats latest(host) as host, latest(organization_id) as OrganizationId, latest(sub_command) as Subcommand, latest(query) as SignalFlowFilter, latest(search_earliest_time) as SearchEarliestTime, latest(search_latest_time) as SearchLatestTime, latest(format) as Format, latest(with_derived_metadata) as AddtionalMetadata, latest(resolution) as Resolution, latest(computation_id) as ComputationId, latest(metadata_msg_count) as MetadataMsgCount,latest(data_msg_count) as DataMsgCount, latest(other_msg_count) as OtherMsgCount, latest(mts_count) as MTSCount,latest(events_count) as EventsCount, avg(new_data_delay) as AvgDataDelay, count(eval(searchmatch("status=start"))) as StartStepsCount,count(eval(searchmatch("status=process"))) as ProcessStepsCount, count(eval(searchmatch("status=error"))) as ErrorStepsCount, count(eval(searchmatch("status=complete"))) as CompleteStepsCount, earliest(_time) as RequestStartTime, latest(_time) as RequestEndTime, list(error_log) as ErrorMessages by RequestId \
| eval SplunkNode=md5(host)\
| fields - host \
| makejson output=event
enableSched=1
action.outputtelemetry                     = 1
action.outputtelemetry.param.anonymous     = 1
action.outputtelemetry.param.support       = 1
action.outputtelemetry.param.license       = 0
action.outputtelemetry.param.optinrequired = 3
action.outputtelemetry.param.component     = app.splunk_ta_sim.command
action.outputtelemetry.param.input         = event
action.outputtelemetry.param.type          = aggregate
cron_schedule = 12 * * * *
dispatch.earliest_time = -1h

[Telemetry: SIM add-on error statistics]
search = index="_internal" sourcetype="*splunk_ta_sim*" status=error \
| stats count as ErrorCount, latest(_time) as latest_dp_time, values(_raw) as error_sample_logs by host,Logger,File,action \
| eval ErrorSampleLogs=mvindex(error_sample_logs, 0, 4) \
| eval SplunkNode=md5(host) \
| table SplunkNode,Logger,File,action, ErrorCount, ErrorSampleLogs\
| makejson output=event
enableSched=1
action.outputtelemetry                     = 1
action.outputtelemetry.param.anonymous     = 1
action.outputtelemetry.param.support       = 1
action.outputtelemetry.param.license       = 0
action.outputtelemetry.param.optinrequired = 3
action.outputtelemetry.param.component     = app.splunk_ta_sim.error
action.outputtelemetry.param.input         = event
action.outputtelemetry.param.type          = aggregate
cron_schedule = 22 * * * *
dispatch.earliest_time = -1h