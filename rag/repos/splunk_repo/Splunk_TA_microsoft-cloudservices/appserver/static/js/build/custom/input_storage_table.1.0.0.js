var t={d:(e,a)=>{for(var l in a)t.o(a,l)&&!t.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:a[l]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,l)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function r(t,e,a){return(e=o(e))in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function n(t,e){for(var a=0;a<e.length;a++){var l=e[a];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(t,o(l.key),l)}}function o(t){var e=function(t,e){if("object"!==a(t)||null===t)return t;var l=t[Symbol.toPrimitive];if(void 0!==l){var i=l.call(t,"string");if("object"!==a(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===a(e)?e:String(e)}t.d(e,{Z:()=>s});const s=function(){function t(e,a,l,i,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.globalConfig=e,this.serviceName=a,this.state=l,this.mode=i,this.util=r,this.is_new_input=!0,this.table_list_history=null,this.sourcetype_history=null,this.interval_history=null}var e,a;return e=t,(a=[{key:"onCreate",value:function(){}},{key:"onChange",value:function(t,e,a){"storage_table_type"===t&&this.toggleVM(a)}},{key:"change_help_link_by_input_type",value:function(t){"storage_table"===t?this.util.setState((function(t){var e=i({},t.data);return e.storage_input_help_link.display=!0,e.storage_virtual_metrics_input_help_link.display=!1,{data:e}})):this.util.setState((function(t){var e=i({},t.data);return e.storage_input_help_link.display=!1,e.storage_virtual_metrics_input_help_link.display=!0,{data:e}}))}},{key:"toggleVM",value:function(t){var e=this;"vm_metrics"===t.data.storage_table_type.value?this.util.setState((function(t){var a=i({},t.data);return e.table_list_history=a.table_list.value,e.interval_history=a.collection_interval.value,e.sourcetype_history=a.sourcetype.value,a.table_list.value="WADMetricsPT1M*",a.table_list.disabled=!0,a.collection_interval.value="60",a.collection_interval.disabled=!0,a.sourcetype.value="mscs:vm:metrics",a.sourcetype.disabled=!0,{data:a}})):"storage_table"===t.data.storage_table_type.value&&this.util.setState((function(t){var a=i({},t.data);return a.table_list.value=e.table_list_history,a.table_list.disabled=!1,a.collection_interval.value=e.interval_history,a.collection_interval.disabled=!1,a.sourcetype.value=e.sourcetype_history,a.sourcetype.disabled=!1,{data:a}})),this.change_help_link_by_input_type(t.data.storage_table_type.value)}},{key:"onRender",value:function(){var t={table_list:this.state.data.table_list.value,sourcetype:this.state.data.sourcetype.value,collection_interval:this.state.data.collection_interval.value};"mscs:vm:metrics"===this.state.data.sourcetype.value&&"WADMetricsPT1M*"===this.state.data.table_list.value?this.util.setState((function(e){var a=i({},e.data);return a.storage_table_type.value="vm_metrics",a.storage_table_type.disabled=!0,a.table_list.value=t.table_list,a.table_list.disabled=!0,a.collection_interval.value=t.collection_interval,a.collection_interval.disabled=!0,a.sourcetype.value=t.sourcetype,a.sourcetype.disabled=!0,{data:a}})):this.util.setState((function(e){var a=i({},e.data);return a.storage_table_type.value="storage_table",a.storage_table_type.disabled=!1,a.table_list.value=t.table_list,a.table_list.disabled=!1,a.collection_interval.value=t.collection_interval,a.collection_interval.disabled=!1,a.sourcetype.value=t.sourcetype,a.sourcetype.disabled=!1,{data:a}})),this.change_help_link_by_input_type(this.state.data.storage_table_type.value)}},{key:"onSave",value:function(t){return!0}},{key:"onSaveSuccess",value:function(){}},{key:"onSaveFail",value:function(){}}])&&n(e.prototype,a),Object.defineProperty(e,"prototype",{writable:!1}),t}();var u=e.Z;export{u as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixLQUFLSixNQUFNaUIsS0FBS0ksbUJBQW1CWCxNQUMzRSxHQUFDLENBQUF2QixJQUFBQSxTQUFBdUIsTUFFRCxTQUFPRSxHQUNILE9BQU8sQ0FDWCxHQUFDLENBQUF6QixJQUFBQSxnQkFBQXVCLE1BRUQsV0FDQSxHQUNBLENBQUF2QixJQUFBQSxhQUFBdUIsTUFDQSxXQUNBLE0sb0VBQUMsRUEvSW9CLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9TcGx1bmtfVEFfbWljcm9zb2Z0LWNsb3Vkc2VydmljZXMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vU3BsdW5rX1RBX21pY3Jvc29mdC1jbG91ZHNlcnZpY2VzL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9TcGx1bmtfVEFfbWljcm9zb2Z0LWNsb3Vkc2VydmljZXMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9TcGx1bmtfVEFfbWljcm9zb2Z0LWNsb3Vkc2VydmljZXMvLi9qcy9pbnB1dF9zdG9yYWdlX3RhYmxlLjEuMC4wLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjEgU3BsdW5rLCBJbmMuIDxzYWxlc0BzcGx1bmsuY29tPlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IExpY2Vuc2VSZWYtU3BsdW5rLTgtMjAyMVxuICpcbiAqL1xuXG5cbmNsYXNzIElucHV0QXp1cmVBdWRpdEhvb2sge1xuICAgIC8qKlxuICAgICogRm9ybSBJbnB1dEF6dXJlQXVkaXRIb29rIChBenVyZSBTdG9yYWdlIFRhYmxlIElucHV0KVxuICAgICogQGNvbnN0cnVjdG9yXG4gICAgKiBAcGFyYW0ge09iamVjdH0gZ2xvYmFsQ29uZmlnIC0gR2xvYmFsIGNvbmZpZ3VyYXRpb24uXG4gICAgKiBAcGFyYW0ge29iamVjdH0gc2VydmljZU5hbWUgLSBTZXJ2aWNlIG5hbWVcbiAgICAqIEBwYXJhbSB7b2JqZWN0fSBzdGF0ZSAtIEluaXRpYWwgc3RhdGUgb2YgdGhlIGZvcm1cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlIC0gZWRpdCxjcmVhdGUgb3IgY2xvbmVcbiAgICAqIEBwYXJhbSB7b2JqZWN0fSB1dGlsIC0gT2JqZWN0IGNvbnRhaW5pbmcgdXRpbGl0eSBtZXRob2RzXG4gICAgKiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRTdGF0ZSxcbiAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRFcnJvck1zZyxcbiAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRFcnJvckZpZWxkTXNnLFxuICAgICogICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyQWxsRXJyb3JNc2dcbiAgICAqICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICovXG4gICAgY29uc3RydWN0b3IoZ2xvYmFsQ29uZmlnLCBzZXJ2aWNlTmFtZSwgc3RhdGUsIG1vZGUsIHV0aWwpIHtcbiAgICAgICAgdGhpcy5nbG9iYWxDb25maWcgPSBnbG9iYWxDb25maWc7XG4gICAgICAgIHRoaXMuc2VydmljZU5hbWUgPSBzZXJ2aWNlTmFtZTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgICB0aGlzLm1vZGUgPSBtb2RlO1xuICAgICAgICB0aGlzLnV0aWwgPSB1dGlsO1xuICAgICAgICB0aGlzLmlzX25ld19pbnB1dCA9IHRydWU7XG5cbiAgICAgICAgLyogTWFpbnRhaW5zIGhpc3Rvcnkgc28gdGhlIHZhbHVlcyBpbiB0ZXh0LWZpZWxkcyBjYW4gYmUgcmVjb3ZlcmVkIGJhY2suICovXG4gICAgICAgIHRoaXMudGFibGVfbGlzdF9oaXN0b3J5ID0gbnVsbDtcbiAgICAgICAgdGhpcy5zb3VyY2V0eXBlX2hpc3RvcnkgPSBudWxsO1xuICAgICAgICB0aGlzLmludGVydmFsX2hpc3RvcnkgPSBudWxsO1xuICAgIH1cbiAgICAvKiBPbiBDcmVhdGUgRXZlbnQgSGFuZGxpbmcgY29udHJvbCAqL1xuICAgIG9uQ3JlYXRlKCkge1xuICAgIH1cblxuICAgIG9uQ2hhbmdlKGZpZWxkLCB2YWx1ZSwgZGF0YURpY3QpIHtcbiAgICAgICAgaWYgKGZpZWxkID09PSBcInN0b3JhZ2VfdGFibGVfdHlwZVwiKXtcbiAgICAgICAgICAgIHRoaXMudG9nZ2xlVk0oZGF0YURpY3QpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2hhbmdlX2hlbHBfbGlua19ieV9pbnB1dF90eXBlKGlucHV0X3R5cGUpIHtcbiAgICAgICAgLyogSWYgdmFsdWUgb2YgaW5wdXRfdHlwZSBpcyBcInN0b3JhZ2VfdGFibGVcIiwgaGlkZSB0aGUgdm0gbWV0cmljcyBjb21wb25lbnQgYW5kIHNob3cgc3RvcmFnZSB0YWJsZSBjb21wb25lbnQgb3RoZXJ3aXNlIHNob3cgdm0gbWV0cmljcyBjb21wb25lbnQgYW5kIGhpZGUgc3RvcmFnZSB0YWJsZSBjb21wb25lbnQgKi9cbiAgICAgICAgaWYgKGlucHV0X3R5cGUgPT09IFwic3RvcmFnZV90YWJsZVwiKSB7XG4gICAgICAgICAgICB0aGlzLnV0aWwuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0geyAuLi5wcmV2U3RhdGUuZGF0YSB9O1xuICAgICAgICAgICAgICAgIGRhdGEuc3RvcmFnZV9pbnB1dF9oZWxwX2xpbmsuZGlzcGxheSA9IHRydWU7XG4gICAgICAgICAgICAgICAgZGF0YS5zdG9yYWdlX3ZpcnR1YWxfbWV0cmljc19pbnB1dF9oZWxwX2xpbmsuZGlzcGxheSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGEgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICB0aGlzLnV0aWwuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0geyAuLi5wcmV2U3RhdGUuZGF0YSB9O1xuICAgICAgICAgICAgICAgIGRhdGEuc3RvcmFnZV9pbnB1dF9oZWxwX2xpbmsuZGlzcGxheSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGRhdGEuc3RvcmFnZV92aXJ0dWFsX21ldHJpY3NfaW5wdXRfaGVscF9saW5rLmRpc3BsYXkgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGEgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBGdW5jdGlvbjogXHR0b2dnbGVWTVxuICAgICogRGVzY3JpcHRpb246IFx0VG9nZ2xlIGV2ZW50IGhhbmRsZXJcbiAgICAqKi9cbiAgICB0b2dnbGVWTShkYXRhRGljdCkge1xuICAgICAgICAvKiBpZiB0aGUgdG9nZ2xlIHZhbHVlIHdhcyBjaGFuZ2VkIHRvIFZNIG1ldHJpY3MgKi9cbiAgICAgICAgaWYgKGRhdGFEaWN0LmRhdGEuc3RvcmFnZV90YWJsZV90eXBlLnZhbHVlID09PSBcInZtX21ldHJpY3NcIikge1xuXG4gICAgICAgICAgICB0aGlzLnV0aWwuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0geyAuLi5wcmV2U3RhdGUuZGF0YSB9O1xuICAgICAgICAgICAgICAgIHRoaXMudGFibGVfbGlzdF9oaXN0b3J5ID0gZGF0YS50YWJsZV9saXN0LnZhbHVlO1xuICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWxfaGlzdG9yeSA9IGRhdGEuY29sbGVjdGlvbl9pbnRlcnZhbC52YWx1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNvdXJjZXR5cGVfaGlzdG9yeSA9IGRhdGEuc291cmNldHlwZS52YWx1ZTtcbiAgICAgICAgICAgICAgICBkYXRhLnRhYmxlX2xpc3QudmFsdWUgPSBcIldBRE1ldHJpY3NQVDFNKlwiO1xuICAgICAgICAgICAgICAgIGRhdGEudGFibGVfbGlzdC5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgZGF0YS5jb2xsZWN0aW9uX2ludGVydmFsLnZhbHVlID0gXCI2MFwiO1xuICAgICAgICAgICAgICAgIGRhdGEuY29sbGVjdGlvbl9pbnRlcnZhbC5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgZGF0YS5zb3VyY2V0eXBlLnZhbHVlID0gXCJtc2NzOnZtOm1ldHJpY3NcIjtcbiAgICAgICAgICAgICAgICBkYXRhLnNvdXJjZXR5cGUuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGEgfTtcbiAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChkYXRhRGljdC5kYXRhLnN0b3JhZ2VfdGFibGVfdHlwZS52YWx1ZSA9PT0gXCJzdG9yYWdlX3RhYmxlXCIpIHtcblxuICAgICAgICAgICAgdGhpcy51dGlsLnNldFN0YXRlKChwcmV2U3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHsgLi4ucHJldlN0YXRlLmRhdGEgfTtcbiAgICAgICAgICAgICAgICBkYXRhLnRhYmxlX2xpc3QudmFsdWUgPSB0aGlzLnRhYmxlX2xpc3RfaGlzdG9yeTtcbiAgICAgICAgICAgICAgICBkYXRhLnRhYmxlX2xpc3QuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBkYXRhLmNvbGxlY3Rpb25faW50ZXJ2YWwudmFsdWUgPSB0aGlzLmludGVydmFsX2hpc3Rvcnk7XG4gICAgICAgICAgICAgICAgZGF0YS5jb2xsZWN0aW9uX2ludGVydmFsLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZGF0YS5zb3VyY2V0eXBlLnZhbHVlID0gdGhpcy5zb3VyY2V0eXBlX2hpc3Rvcnk7XG4gICAgICAgICAgICAgICAgZGF0YS5zb3VyY2V0eXBlLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jaGFuZ2VfaGVscF9saW5rX2J5X2lucHV0X3R5cGUoZGF0YURpY3QuZGF0YS5zdG9yYWdlX3RhYmxlX3R5cGUudmFsdWUpXG4gICAgfVxuXG4gICAgLyogT24gUmVuZGVyIEV2ZW50IEhhbmRsaW5nIGNvbnRyb2wgKi9cbiAgICBvblJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgcGFyYW1fdmFsdWVzID0ge1xuICAgICAgICAgICAgXCJ0YWJsZV9saXN0XCI6IHRoaXMuc3RhdGUuZGF0YS50YWJsZV9saXN0LnZhbHVlLFxuICAgICAgICAgICAgXCJzb3VyY2V0eXBlXCI6IHRoaXMuc3RhdGUuZGF0YS5zb3VyY2V0eXBlLnZhbHVlLFxuICAgICAgICAgICAgXCJjb2xsZWN0aW9uX2ludGVydmFsXCI6IHRoaXMuc3RhdGUuZGF0YS5jb2xsZWN0aW9uX2ludGVydmFsLnZhbHVlXG4gICAgICAgIH1cbiAgICAgICAgLyogSWYgaW5wdXQgaXMgVk0gTWV0cmljcywgZGlzYWJsZSB0aGUgaW5wdXRzLiBPdGhlcndpc2Uga2VlcCB0aGVtIGVuYWJsZWQgKi9cbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuZGF0YS5zb3VyY2V0eXBlLnZhbHVlID09PSBcIm1zY3M6dm06bWV0cmljc1wiICYmIHRoaXMuc3RhdGUuZGF0YS50YWJsZV9saXN0LnZhbHVlID09PSBcIldBRE1ldHJpY3NQVDFNKlwiKSB7XG4gICAgICAgICAgICB0aGlzLnV0aWwuc2V0U3RhdGUoKHByZXZTdGF0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0geyAuLi5wcmV2U3RhdGUuZGF0YSB9O1xuICAgICAgICAgICAgICAgIGRhdGEuc3RvcmFnZV90YWJsZV90eXBlLnZhbHVlID0gXCJ2bV9tZXRyaWNzXCI7XG4gICAgICAgICAgICAgICAgZGF0YS5zdG9yYWdlX3RhYmxlX3R5cGUuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGRhdGEudGFibGVfbGlzdC52YWx1ZSA9IHBhcmFtX3ZhbHVlc1tcInRhYmxlX2xpc3RcIl07XG4gICAgICAgICAgICAgICAgZGF0YS50YWJsZV9saXN0LmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBkYXRhLmNvbGxlY3Rpb25faW50ZXJ2YWwudmFsdWUgPSBwYXJhbV92YWx1ZXNbXCJjb2xsZWN0aW9uX2ludGVydmFsXCJdO1xuICAgICAgICAgICAgICAgIGRhdGEuY29sbGVjdGlvbl9pbnRlcnZhbC5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgZGF0YS5zb3VyY2V0eXBlLnZhbHVlID0gcGFyYW1fdmFsdWVzW1wic291cmNldHlwZVwiXTtcbiAgICAgICAgICAgICAgICBkYXRhLnNvdXJjZXR5cGUuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGEgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy51dGlsLnNldFN0YXRlKChwcmV2U3RhdGUpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHsgLi4ucHJldlN0YXRlLmRhdGEgfTtcbiAgICAgICAgICAgICAgICBkYXRhLnN0b3JhZ2VfdGFibGVfdHlwZS52YWx1ZSA9IFwic3RvcmFnZV90YWJsZVwiO1xuICAgICAgICAgICAgICAgIGRhdGEuc3RvcmFnZV90YWJsZV90eXBlLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZGF0YS50YWJsZV9saXN0LnZhbHVlID0gcGFyYW1fdmFsdWVzW1widGFibGVfbGlzdFwiXTtcbiAgICAgICAgICAgICAgICBkYXRhLnRhYmxlX2xpc3QuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBkYXRhLmNvbGxlY3Rpb25faW50ZXJ2YWwudmFsdWUgPSBwYXJhbV92YWx1ZXNbXCJjb2xsZWN0aW9uX2ludGVydmFsXCJdO1xuICAgICAgICAgICAgICAgIGRhdGEuY29sbGVjdGlvbl9pbnRlcnZhbC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGRhdGEuc291cmNldHlwZS52YWx1ZSA9IHBhcmFtX3ZhbHVlc1tcInNvdXJjZXR5cGVcIl07XG4gICAgICAgICAgICAgICAgZGF0YS5zb3VyY2V0eXBlLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jaGFuZ2VfaGVscF9saW5rX2J5X2lucHV0X3R5cGUodGhpcy5zdGF0ZS5kYXRhLnN0b3JhZ2VfdGFibGVfdHlwZS52YWx1ZSlcbiAgICB9XG5cbiAgICBvblNhdmUoZGF0YURpY3QpIHtcbiAgICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG5cbiAgICBvblNhdmVTdWNjZXNzKCkge1xuICAgIH1cbiAgICAvKiBBY3Rpb24gbmVlZHMgdG8gcGVyZm9ybSBvbiBzYXZlIGZhaWx1cmUgKi9cbiAgICBvblNhdmVGYWlsKCkge1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5wdXRBenVyZUF1ZGl0SG9vaztcbiJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZXhwb3J0cyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImdsb2JhbENvbmZpZyIsInNlcnZpY2VOYW1lIiwic3RhdGUiLCJtb2RlIiwidXRpbCIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJpc19uZXdfaW5wdXQiLCJ0YWJsZV9saXN0X2hpc3RvcnkiLCJzb3VyY2V0eXBlX2hpc3RvcnkiLCJpbnRlcnZhbF9oaXN0b3J5IiwiX2NyZWF0ZUNsYXNzIiwidmFsdWUiLCJmaWVsZCIsImRhdGFEaWN0IiwidG9nZ2xlVk0iLCJpbnB1dF90eXBlIiwic2V0U3RhdGUiLCJwcmV2U3RhdGUiLCJkYXRhIiwic3RvcmFnZV9pbnB1dF9oZWxwX2xpbmsiLCJkaXNwbGF5Iiwic3RvcmFnZV92aXJ0dWFsX21ldHJpY3NfaW5wdXRfaGVscF9saW5rIiwic3RvcmFnZV90YWJsZV90eXBlIiwiX3RoaXMiLCJ0YWJsZV9saXN0IiwiY29sbGVjdGlvbl9pbnRlcnZhbCIsInNvdXJjZXR5cGUiLCJkaXNhYmxlZCIsImNoYW5nZV9oZWxwX2xpbmtfYnlfaW5wdXRfdHlwZSIsInBhcmFtX3ZhbHVlcyJdLCJzb3VyY2VSb290IjoiIn0=