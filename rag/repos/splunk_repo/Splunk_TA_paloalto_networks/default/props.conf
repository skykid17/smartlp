##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##

[pan_log]
pulldown_type = false
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 100
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_decryption

[pan:log]
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){5}
MAX_TIMESTAMP_LOOKAHEAD = 100
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_decryption

[pan:firewall]
category = Network & Security
description = Syslog from Palo Alto Networks Next-generation Firewall
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TRANSFORMS-sourcetype = pan_threat, pan_traffic, pan_system, pan_config, pan_hipmatch, pan_correlation, pan_userid, pan_globalprotect, pan_decryption

[pan:firewall_cloud]
category = Network & Security
description = Firewall logs from Palo Alto Networks Strata Logging Service
pulldown_type = true
SHOULD_LINEMERGE = false
TIME_PREFIX = TimeGeneratedHighResolution":"
MAX_TIMESTAMP_LOOKAHEAD = 50
KV_MODE = json
REPORT-search = extract_threat_id_cloud, extract_threat_name_cloud, extract_dest_hostname_cloud, extract_major_content_type_cloud, extract_object_attrs_cloud, extract_auth_src_cloud, extract_auth_user_cloud

EVAL-app = case(Subtype IN ("auth"), "PAN-OS", LogSubtype IN ("globalprotect"), "Palo Alto Networks Firewall", LogType IN ("TRAFFIC", "DECRYPTION"), Application)
FIELDALIAS-fwcloud_app_is_saas = IsSaaSApplication as app:is_saas
FIELDALIAS-fwcloud_bytes = Bytes as bytes
FIELDALIAS-fwcloud_bytes_out = BytesReceived as bytes_in
FIELDALIAS-fwcloud_bytes_in = BytesSent as bytes_out
EVAL-client_ip = coalesce(SourceAddress, PrivateIPv4)
FIELDALIAS-fwcloud_client_location = SourceLocation as client_location
EVAL-description = coalesce(Description, EventDescription)
EVAL-dest = case(LogType IN ("SYSTEM", "CONFIG"), LogSourceName, LogSubtype IN ("globalprotect"), DeviceName, LogType IN ("THREAT", "TRAFFIC", "DECRYPTION"), DestinationAddress)
EVAL-dest_host = case(Subtype IN ("auth"), LogSourceName, LogSubtype IN ("globalprotect"), DeviceName)
FIELDALIAS-fwcloud_dest_interface = OutboundInterface as dest_interface
FIELDALIAS-fwcloud_dest_ip = DestinationAddress as dest_ip
FIELDALIAS-fwcloud_dest_location = DestinationLocation as dest_location
FIELDALIAS-fwcloud_dest_port = DestinationPort as dest_port
FIELDALIAS-fwcloud_dest_user = DestinationUser as dest_user
FIELDALIAS-fwcloud_dest_zone = ToZone as dest_zone
EVAL-direction = replace(DirectionOfAttack, " ", "-")
EVAL-dvc_name = coalesce(DeviceName, LogSourceName)
EVAL-event_id = coalesce(EventName, EventIDValue)
FIELDALIAS-fwcloud_file_hash = FileHash as file_hash
FIELDALIAS-fwcloud_file_name = FileName as file_name
FIELDALIAS-fwcloud_file_type = FileType as file_type
FIELDALIAS-fwcloud_http_category = URLCategory as http_category
EVAL-log_subtype = coalesce(Stage, Subtype, SubType, LogSubtype)
FIELDALIAS-fwcloud_packets = PacketsTotal as packets
FIELDALIAS-fwcloud_packets_in = PacketsReceived as packets_in
FIELDALIAS-fwcloud_packets_out = PacketsSent as packets_out
FIELDALIAS-fwcloud_recipient = RecipientEmail as recipient
FIELDALIAS-fwcloud_report_id = ReportID as report_id
FIELDALIAS-fwcloud_rule = Rule as rule
FIELDALIAS-fwcloud_rule_id = RuleUUID as rule_id
FIELDALIAS-fwcloud_sender = SenderEmail as sender
FIELDALIAS-fwcloud_serial_number = DeviceSN as serial_number
EVAL-serial_number = coalesce(DeviceSN, LogSourceID)
FIELDALIAS-fwcloud_server_ip = DestinationAddress as server_ip
FIELDALIAS-fwcloud_server_location = DestinationLocation as server_location
FIELDALIAS-fwcloud_session_end_reason = SessionEndReason as session_end_reason
FIELDALIAS-fwcloud_session_id = SessionID as session_id
EVAL-severity = coalesce(Severity, VendorSeverity)
EVAL-signature = case(Subtype IN ("auth"), EventName, LogType IN ("THREAT"), threat_name)
FIELDALIAS-fwcloud_signature_id = threat_id as signature_id
EVAL-src = case(Subtype IN ("url-filtering"), LogSourceName, LogType IN ("CONFIG"), IPaddress, Subtype IN ("auth"), src_auth, LogSubtype IN ("globalprotect"), EndpointDeviceName, LogType IN ("THREAT", "TRAFFIC", "DECRYPTION"), SourceAddress)
EVAL-src_host = case(LogSubtype IN ("globalprotect"), EndpointDeviceName)
FIELDALIAS-fwcloud_src_interface = InboundInterface as src_interface
EVAL-src_ip = coalesce(SourceAddress, PublicIPv4, PublicIPv6)
FIELDALIAS-fwcloud_src_location = SourceLocation as src_location
FIELDALIAS-fwcloud_src_port = SourcePort as src_port
EVAL-src_user = coalesce(SourceUser, SourceUserName)
FIELDALIAS-fwcloud_src_zone = FromZone as src_zone
FIELDALIAS-fwcloud_start_time = SessionStartTime as start_time
FIELDALIAS-fwcloud_threat_category = ThreatCategory as threat_category
FIELDALIAS-fwcloud_threat = ThreatID as threat
FIELDALIAS-fwcloud_type = LogType as type
FIELDALIAS-fwcloud_transport = Protocol as transport
FIELDALIAS-fwcloud_log_type = LogType as log_type
EVAL-user = case(LogType IN ("CONFIG"), AdminUsername, Subtype IN ("auth"), src_user_cloud, SourceUser!="null",'SourceUser',SourceUserName !="null",'SourceUserName',src_user!="null",'src_user',dest_user!="null",'dest_user',recipient!="null",'recipient',sender!="null",'sender',true(),"unknown")
FIELDALIAS-fwcloud_url = URL as url
FIELDALIAS-fwcloud_vendor_action = Action as vendor_action
FIELDALIAS-fwcloud_verdict = Verdict as verdict
EVAL-virtual_system = coalesce(VirtualSystem, VirtualLocation)
FIELDALIAS-fwcloud_vsys = VirtualSystem as vsys
FIELDALIAS-fwcloud_vsys_id = VirtualSystemID as vsys_id
FIELDALIAS-fwcloud_vsys_name = VirtualSystemName as vsys_name
EVAL-src_translated_ip = case(LogSubtype IN ("globalprotect"), PrivateIPv4, LogType IN ("THREAT", "TRAFFIC", "DECRYPTION"), NATSource)
EVAL-src_mac = case(match(HostID,"[a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}"), HostID)
FIELDALIAS-file_path = URL AS file_path
EVAL-ids_type = "network"
FIELDALIAS-dest_translated_ip = NATDestination AS dest_translated_ip
EVAL-duration = case(LogSubtype IN ("globalprotect"), LoginDuration, LogType IN ("TRAFFIC"), SessionDuration)
FIELDALIAS-protocol = Protocol AS protocol
FIELDALIAS-src_translated_port = NATSourcePort AS src_translated_port
FIELDALIAS-dest_translated_port = NATDestinationPort AS dest_translated_port

EVAL-dvc = case(LogType IN ("SYSTEM", "CONFIG"), LogSourceName, LogType IN ("THREAT", "TRAFFIC", "DECRYPTION"), DeviceName)

EVAL-dest_name = replace(dest_hostname, "^([^:/]+).*", "\1")

FIELDALIAS-fwcloud_vendor_protocol  = protocol as vendor_protocol

EVAL-category = coalesce(http_category, threat_category)

EVAL-vendor_product = "Palo Alto Networks Firewall"
LOOKUP-pan_threat_id              = threat_lookup threat_id

# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                  = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                 = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class             = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

# Firewall System CDL Logs
FIELDALIAS-fwcloud_module = EventName as module

# Firewall CONFIG CDL Logs
FIELDALIAS-fwcloud_admin = AdminUserName as admin
FIELDALIAS-fwcloud_client = Client as client
FIELDALIAS-fwcloud_cmd =  EventName as cmd
FIELDALIAS-fwcloud_command = EventName as command
FIELDALIAS-fwcloud_configuration_path =  EventPath as configuration_path
FIELDALIAS-fwcloud_host_name = LogSourceName as host_name
FIELDALIAS-fwcloud_path =  EventPath as path

# URL Logs
FIELDALIAS-fwcloud_referrer = Referer as referrer
FIELDALIAS-fwcloud_http_referrer = Referer as http_referrer
FIELDALIAS-fwcloud_content_type = ContentType as content_type
FIELDALIAS-fwcloud_http_content_type = ContentType as http_content_type
FIELDALIAS-fwcloud_http_user_agent = UserAgent as http_user_agent
FIELDALIAS-fwcloud_user_agent = UserAgent as user_agent
FIELDALIAS-fwcloud_http_referrer_name = HTTPRefererFQDN as http_referrer_name
EVAL-http_method = upper(HTTPMethod)
EVAL-http_user_agent_length                     = len(user_agent)
EVAL-url_length                                 = len(url)

# GlobalProtect CDL Logs
FIELDALIAS-fwcloud_auth_method = AuthMethod as auth_method
FIELDALIAS-fwcloud_host_id = HostID as host_id
FIELDALIAS-fwcloud_tunnel_type = TunnelType as tunnel_type
FIELDALIAS-fwcloud_sequence_number = SequenceNo as sequence_number
FIELDALIAS = EventStatus as reason
FIELDALIAS-fwcloud_src_region = SourceRegion as src_region
FIELDALIAS-fwcloud_stage= Stage as stage
FIELDALIAS-fwcloud_machine_name = EndpointDeviceName as machine_name
FIELDALIAS-fwcloud_public_ip = PublicIPv4 as public_ip
FIELDALIAS-fwcloud_public_ipv6 = PublicIPv6 as public_ipv6
FIELDALIAS-fwcloud_private_ipv6 = PrivateIPv6 as private_ipv6
FIELDALIAS-fwcloud_private_ip = PrivateIPv4 as private_ip
FIELDALIAS-fwcloud_login_duration = LoginDuration as login_duration

FIELDALIAS-event_id = EventName as event_id
LOOKUP-system_actions = system_actions_lookup event_id OUTPUTNEW object_category, action
LOOKUP-vendor_action = pan_vendor_action_lookup vendor_action OUTPUTNEW action
EVAL-action = case(EventName IN ("auth-success"), "success", LogSubtype IN ("globalprotect"), EventStatus)
EVAL-change_type = case(Subtype IN ("url-filtering"), "filesystem")
EVAL-object = case(Subtype IN ("url-filtering"), Subtype)
EVAL-result = case(Subtype IN ("url-filtering"), EventName, LogType IN ("GLOBALPROTECT"), EventStatus, LogType IN ("CONFIG"), EventResult)
EVAL-status = case(match(EventDescription,"(?i)succeeded"),"success",match(EventDescription,"(?i)upgraded"),"success",match(EventDescription,"(?i)cleared"),"cleared",match(EventDescription,"(?i)GlobalProtect gateway agent message"),"success",match(EventDescription,"(?i)Failed"),"failure", EventResult IN ("Succeeded"), "success")
EVAL-object_path = case(LogType IN ("CONFIG"), EventPath)
EVAL-user_type = case(AdminUsername IN ("admin"), "admin")

[pan_threat]
rename = pan:threat

[pan:threat]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_FORMAT = %Y/%m/%d %H:%M:%S

REPORT-search = extract_threat, extract_threat_id, extract_threat_name, extract_dest_hostname, extract_http_referrer_name, extract_major_content_type, extract_filename, extract_url_domain

FIELDALIAS-app                      = app as application
FIELDALIAS-virtual_system           = vsys as virtual_system

# Field Aliases to map sepcific fields to the Splunk Common Information Model--Intrusion Detection
EVAL-vendor_action                  = action
LOOKUP-vendor_action                = pan_vendor_action_lookup vendor_action OUTPUT action
FIELDALIAS-src_for_pan_threat       = src_ip as src
FIELDALIAS-dest_for_pan_threat      = dest_ip as dest
EVAL-dest_name                      = replace(dest_hostname, "^([^:/]+).*", "\1")
FIELDALIAS-dvc_for_pan_threat       = dvc_name as dvc
FIELDALIAS-http_content_type_for_pan_threat     = content_type as http_content_type
FIELDALIAS-http_user_agent_for_pan_threat       = user_agent as http_user_agent
FIELDALIAS-http_referrer_for_pan_threat         = referrer as http_referrer
FIELDALIAS-http_referrer_domain_pan_threat      = http_referrer_name as http_referrer_domain
EVAL-http_user_agent_length                     = len(user_agent)
EVAL-url_length                                 = len(url)

FIELDALIAS-signature                = threat_name as signature
FIELDALIAS-signature_id             = threat_id as signature_id

# Reformat email related fields
EVAL-sender          = split(replace(sender,"^From: (.*?);?$","\1"),";")
EVAL-recipient       = split(replace(recipient,"^To: (.*?);?$","\1"),";")
EVAL-subject         = replace(subject,"^Sub: ","")

EVAL-user                           = coalesce(src_user,dest_user,recipient,sender,"unknown")
# All url logs have an http_method field, this makes ES and Web Proxy app work better. Also make method uppercase for CIM.
EVAL-http_method                    = if(log_subtype == "url", if(isnull(http_method), "unknown", upper(http_method)), null)
# Misc field is used by pan_url logs for full URL accessed.  Alias to url field.
FIELDALIAS-file_name                = misc as file_name
FIELDALIAS-url_for_pan_threat       = misc as url
FIELDALIAS-file_path                = misc as file_path
# Determine client and server ip address based on direction of flow
EVAL-server_ip       = if(version >= 2049 OR (version < 2049 AND (isnull(direction) OR direction="client-to-server")), dest_ip, src_ip)
EVAL-client_ip       = if(version >= 2049 OR (version < 2049 AND (isnull(direction) OR direction="client-to-server")), src_ip, dest_ip)
# Determine client and server geo location based on direction of flow
EVAL-server_location = if(isnull(direction) OR direction="client-to-server", dest_location, src_location)
EVAL-client_location = if(isnull(direction) OR direction="client-to-server", src_location, dest_location)
# Set report_id field for wildfire logs. report_id could be in report_id or threat_id, depending on PAN-OS version.
EVAL-report_id       = if(log_subtype=="wildfire", coalesce(report_id,threat_id), null())

# In CIM IDS Datamodel, category means the threat category, not the URL category
EVAL-http_category   = if(log_subtype=="url", raw_category, null())
EVAL-verdict         = if(log_subtype=="wildfire", raw_category, null())
EVAL-threat_category = if(log_subtype!="url" AND log_subtype!="file", if(threat_category=="unknown",log_subtype,coalesce(threat_category,log_subtype)), null())
EVAL-category        = if(log_subtype!="url" AND log_subtype!="file" AND log_subtype!="spyware" AND log_subtype!="wildfire",threat_category,raw_category)
EVAL-protocol        = case(transport IN ("tcp", "udp"), "ip", transport=="icmp", "icmp", true(), protocol)
EVAL-protocol_version = if(match(coalesce(src_ip,dest_ip),":"), "ipv6", if(match(coalesce(src_ip,dest_ip), "(?:\d+\.\d+\.\d+\.\d+)"),"ipv4", null))
EVAL-vendor_protocol = case(transport IN ("tcp", "udp"), "ip", transport=="icmp", "icmp", true(), protocol)

# Decode hex flags
EVAL-flags           = mvappend(if(floor(tonumber(session_flags,16) / pow(2, 31))%2==0,null(),"pcap"),if(floor(tonumber(session_flags,16) / pow(2, 28))%2==0,null(),"credential_detected"),if(floor(tonumber(session_flags,16) / pow(2, 25))%2==0,null(),"ipv6"),if(floor(tonumber(session_flags,16) / pow(2, 24))%2==0,null(),"decrypted"),if(floor(tonumber(session_flags,16) / pow(2, 23))%2==0,null(),"denied_by_url_filtering"),if(floor(tonumber(session_flags,16) / pow(2, 22))%2==0,null(),"nat"),if(floor(tonumber(session_flags,16) / pow(2, 21))%2==0,null(),"captive_portal"),if(floor(tonumber(session_flags,16) / pow(2, 19))%2==0,null(),"x_forwarded_for"),if(floor(tonumber(session_flags,16) / pow(2, 18))%2==0,null(),"http_proxy"),if(floor(tonumber(session_flags,16) / pow(2, 15))%2==0,null(),"container_page"),if(floor(tonumber(session_flags,16) / pow(2, 13))%2==0,null(),"implicit_application"),if(floor(tonumber(session_flags,16) / pow(2, 11))%2==0,null(),"symmetric_return"))

LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product,ids_type
LOOKUP-pan_threat_id              = threat_lookup threat_id
LOOKUP-pan_app                    = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges
# as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                  = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                 = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class             = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas


[pan_traffic]
rename = pan:traffic

[pan:traffic]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_FORMAT = %Y/%m/%d %H:%M:%S

REPORT-search = extract_traffic

FIELDALIAS-virtual_system            = vsys as virtual_system
# Field Aliases to map specific fields to the Splunk Common Information Model - Network Traffic
EVAL-vendor_action                   = action
LOOKUP-vendor_action                 = pan_vendor_action_lookup vendor_action OUTPUT action
FIELDALIAS-dest_for_pan_traffic      = dest_ip as dest
EVAL-dvc                             = coalesce(dvc_name, host)
FIELDALIAS-src_for_pan_traffic       = src_ip as src
FIELDALIAS-session_start_signature   = rule as signature
FIELDALIAS-protocol                  = transport AS protocol
EVAL-protocol_version                = if(match(coalesce(src_ip,dest_ip),":"), "ipv6", if(match(coalesce(src_ip,dest_ip), "(?:\d+\.\d+\.\d+\.\d+)"),"ipv4", null))

# Set user field
EVAL-user                            = coalesce(src_user,dest_user,"unknown")
# Determine client and server ip address based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_ip                       =  dest_ip
EVAL-client_ip                       =  src_ip
# Determine client and server geo location based on direction of flow
# There is no direction field in traffic logs, so assume source is client
EVAL-server_location                 = dest_location
EVAL-client_location                 = src_location

LOOKUP-vendor_info_for_pan_config    = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
LOOKUP-pan_app                       = app_lookup app
# IP Classification based on ip_classification lookup table
# This lookup table can be modified by user to mark IP ranges,as serving specific purposes (eg. DMZ_Servers)
LOOKUP-src_class                     = classification_lookup cidr as src_ip OUTPUT classification as src_class
LOOKUP-dest_class                    = classification_lookup cidr as dest_ip OUTPUT classification as dest_class
LOOKUP-app_saas_class                = sanctioned_saas_lookup app OUTPUT sanctioned_saas as app:is_sanctioned_saas

# Decode hex flags
EVAL-flags           = mvappend(if(floor(tonumber(session_flags,16) / pow(2, 31))%2==0,null(),"pcap"),if(floor(tonumber(session_flags,16) / pow(2, 25))%2==0,null(),"ipv6"),if(floor(tonumber(session_flags,16) / pow(2, 24))%2==0,null(),"decrypted"),if(floor(tonumber(session_flags,16) / pow(2, 23))%2==0,null(),"denied_by_url_filtering"),if(floor(tonumber(session_flags,16) / pow(2, 22))%2==0,null(),"nat"),if(floor(tonumber(session_flags,16) / pow(2, 21))%2==0,null(),"captive_portal"),if(floor(tonumber(session_flags,16) / pow(2, 19))%2==0,null(),"x_forwarded_for"),if(floor(tonumber(session_flags,16) / pow(2, 18))%2==0,null(),"http_proxy"),if(floor(tonumber(session_flags,16) / pow(2, 15))%2==0,null(),"container_page"),if(floor(tonumber(session_flags,16) / pow(2, 13))%2==0,null(),"implicit_application"),if(floor(tonumber(session_flags,16) / pow(2, 11))%2==0,null(),"symmetric_return"))


[pan_system]
rename = pan:system

[pan:system]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_system, extract_object_attrs, extract_globalprotect_user, extract_globalprotect_ip, extract_globalprotect_loginip, extract_globalprotect_clientversion, extract_globalprotect_message, extract_user_auth, extract_reason_auth, extract_auth_dest_ip, extract_auth_src

FIELDALIAS-virtual_system         = vsys as virtual_system
# Field Aliases to map specific fields to the Splunk Common Information Model - Update
FIELDALIAS-dvc_for_pan_system     = dvc_name AS dvc
FIELDALIAS-dest_for_pan_system    = dvc_name AS dest
FIELDALIAS-result                 = event_id as result
FIELDALIAS-src_user               = user as src_user
EVAL-src                          = if(log_subtype=="auth", src_auth, dvc_name)
EVAL-reason                       = if(log_subtype=="auth",reason_auth,description)
FIELDALIAS-body                   = description as body
FIELDALIAS-object                 = log_subtype AS object
FIELDALIAS-signature              = event_id AS signature
EVAL-change_type                  = "filesystem"
LOOKUP-system_actions             = system_actions_lookup event_id OUTPUT object_category, action
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
EVAL-status = case(match(description,"(?i)succeeded"),"success",match(description,"(?i)upgraded"),"success",match(description,"(?i)cleared"),"cleared",match(description,"(?i)GlobalProtect gateway agent message"),"success",match(description,"(?i)Failed"),"failure")
EVAL-app = "PAN-OS"
EVAL-type = "event"


# GlobalProtect logs introduced in PANOS 9.1
[pan_globalprotect]
rename = pan:globalprotect

[pan:globalprotect]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
REPORT-search = extract_globalprotect, extract_globalprotect_dest_loginip

FIELDALIAS-type = log_type as type
FIELDALIAS-status_for_results = status as result
FIELDALIAS-stage_for_log_subtype = stage as log_subtype
EVAL-dest = coalesce(dvc_name, machine_name)
FIELDALIAS-public_ip_for_src_ip = public_ip as src_ip
FIELDALIAS-src = machine_name as src
FIELDALIAS-private_ip_for_client_ip = private_ip as client_ip
FIELDALIAS-opaque_for_description = opaque as description
FIELDALIAS-src_user_for_user= src_user as user
FIELDALIAS-login_duration_for_duration= login_duration as duration
FIELDALIAS-action = status AS action
EVAL-app = "Palo Alto Firewall"
EVAL-src_mac = case(match(host_id,"[a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}[\:\-][a-fA-F0-9]{2}"), host_id)
FIELDALIAS_src_translated_port = private_ip AS src_translated_ip

[pan_decryption]
rename = pan:decryption

[pan:decryption]
SHOULD_LINEMERGE = false
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_decryption

FIELDALIAS-type = log_type as type

FIELDALIAS-dest = dest_ip AS dest
FIELDALIAS-dvc = dvc_name AS dvc
FIELDALIAS-src = src_ip AS src
FIELDALIAS = IP_PROTOCOL as transport

LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product

EVAL-vendor_action                   = action
LOOKUP-vendor_action                 = pan_vendor_action_lookup vendor_action OUTPUT action

[pan_config]
rename = pan:config

[pan:config]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32

REPORT-search = extract_config


FIELDALIAS-virtual_system      = vsys as virtual_system
FIELDALIAS-cmd                 = command as cmd
FIELDALIAS-config              = configuration_path as path
# Field Aliases to map specific fields to the Splunk Common Information Model - Change Analysis
FIELDALIAS-object              = configuration_path as object
FIELDALIAS-object_path         = configuration_path as object_path
FIELDALIAS-dvc_for_pan_config  = dvc_name as dvc
FIELDALIAS-dest_for_pan_config = host_name as dest
FIELDALIAS-user_for_pan_config = admin as user
FIELDALIAS-src_user_for_pan_config = admin as src_user
FIELDALIAS-dvc_ip              = host_name as dvc_ip
EVAL-action                    = case(command=="rename","modified")
EVAL-change_type               = "filesystem"
EVAL-status = if(result=="Succeeded" OR result=="Submitted", "success", null)

# Manually set log_subtype because it isn't in the log
EVAL-log_subtype = "config"
LOOKUP-vendor_info_for_pan_config = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product


[pan:correlation]
SHOULD_LINEMERGE = false
EVENT_BREAKER_ENABLE = true
KV_MODE = none
TIME_PREFIX = ^(?:[^,]*,){6}
MAX_TIMESTAMP_LOOKAHEAD = 32
TIME_FORMAT = %Y/%m/%d %H:%M:%S
REPORT-search = extract_correlation
FIELDALIAS-virtual_system              = vsys as virtual_system
FIELDALIAS-src_for_pan_correlation     = src_ip as src
FIELDALIAS-client_ip                   = src_ip as client_ip
FIELDALIAS-dest_for_pan_correlation    = host as dest
FIELDALIAS-dvc_for_pan_correlation     = host as dvc
FIELDALIAS-user_for_pan_correlation    = src_user as user
FIELDALIAS-user_name = src_user as user_name
EVAL-log_subtype                       = "correlation"
FIELDALIAS-category                    = object AS category
FIELDALIAS-threat_category             = object AS threat_category
FIELDALIAS-threat_name                 = evidence AS threat_name
FIELDALIAS-signature                   = object AS signature
FIELDALIAS-body                        = evidence AS body
FIELDALIAS-description                 = evidence AS description
EVAL-vendor_action                     = "allowed"
EVAL-action                            = "allowed"
EVAL-type                              = case(severity IN ("informational","low"),"event",severity IN ("medium","high","critical"),"alert",1==1,log_type)
EVAL-app                               = "Palo Alto Networks Firewall"


[pan:iot_alert]
EVAL-app = "Palo Alto Networks IoT Security"
FIELDALIAS-ticket_id = zb_ticketid as id
FIELDALIAS-signature_id = msg.ruleid as signature_id
FIELDALIAS-iot_alert_dest = msg.toip AS dest
FIELDALIAS-iot_alert_src = hostname AS src
FIELDALIAS-iot_alert_user = deviceid AS user
FIELDALIAS-iot_alert_dest_type = profile AS dest_type
FIELDALIAS-iot_alert_severity_id = severityNumber AS severity_id
FIELDALIAS-iot_alert_signature = name AS signature
FIELDALIAS-iot_alert_src_type = profile AS src_type
FIELDALIAS-iot_alert_subject = name AS subject
FIELDALIAS-src_ip = msg.fromip AS src_ip
LOOKUP-vendor_info_for_pan_iot_alert = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
EVAL-type = case(type=="policy_alert","alert")
SHOULD_LINEMERGE = 0
TIME_PREFIX = date\"\: \"
TRUNCATE = 15000
pulldown_type = 1

[pan:iot_vulnerability]
FIELDALIAS-iot_vulnerability_severity_id = risk_score AS severity_id
FIELDALIAS-iot_vulnerability_cve = vulnerability_name AS signature
FIELDALIAS-iot_vulnerability_signature_id = zb_ticketid AS signature_id
FIELDALIAS-severity = risk_level AS severity
FIELDALIAS-iot_vulnerability_dest = ip AS dest
FIELDALIAS-iot_vulnerability_dvc = deviceid AS dvc
FIELDALIAS-iot_vulnerability_cvss = cvss_score AS cvss
LOOKUP-vendor_info_for_pan_iot_vulnerability = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
SHOULD_LINEMERGE = 0
TIME_PREFIX = date\"\: \"
pulldown_type = 1

[pan:iot_device]
FIELDALIAS-iot_device_mac = MAC AS mac
FIELDALIAS-iot_device_name = hostname AS name
FIELDALIAS-iot_device_src_ip = ip_address as src_ip
FIELDALIAS-iot_device_version = os/firmware_version AS version
FIELDALIAS-iot_device_os = os_combined AS os
FIELDALIAS-iot_device_family = profile AS family
FIELDALIAS-iot_device_serial = Serial_Number AS serial
FIELDALIAS-iot_device_ip = ip_address AS ip
FIELDALIAS-iot_device_user = AD_Username AS user
LOOKUP-vendor_info_for_pan_iot_device = pan_vendor_info_lookup sourcetype OUTPUT vendor,product,vendor_product
SHOULD_LINEMERGE = 0
TIME_PREFIX = last_activity\"\: \"
pulldown_type = 1

[pan:data:security]
KV_MODE = JSON
SHOULD_LINEMERGE = 0
pulldown_type = 1
TRUNCATE = 9999999
TIME_PREFIX = timestamp\"\: \"

FIELDALIAS-severity_id = severity AS severity_id
LOOKUP-pan_severity = pan_severity_lookup severity_id OUTPUT severity

EVAL-app = "Data Security"

EVAL-description = case(log_type IN ("remediation", "policy_violation", "activity_monitoring"), log_type, log_type=="incident", policy_rule_name)
EVAL-dest = case(log_type IN ("policy_violation", "activity_monitoring"), tenant_name, log_type=="remediation", container_name, log_type=="incident", asset_id)
EVAL-src = case(log_type IN ("policy_violation", "activity_monitoring"), item_name)
EVAL-src_type = case(log_type=="policy_violation", "Jira", log_type=="activity_monitoring", "issue", log_type=="remediation", "alert")
EVAL-type = case(log_type IN ("policy_violation", "remediation"), "alert", log_type=="activity_monitoring", log_type)
EVAL-vendor_account = case(log_type IN ("policy_violation", "activity_monitoring"), cloud_app_instance)
EVAL-id = case(log_type IN ("policy_violation","remediation"), incident_id)
EVAL-action = case(log_type=="activity_monitoring", action, log_type=="remediation", action_taken)
EVAL-object = case(log_type IN ("remediation", "incident"), item_name)
EVAL-object_category = case(log_type=="remediation", item_type)
EVAL-object_id = case(log_type=="remediation", asset_id, log_type=="incident", item_cloud_url)
EVAL-rule = case(log_type=="remediation", policy_rule_name)
EVAL-user = case(log_type IN ("remediation", "policy_violation"), item_owner_email)
EVAL-user_name = case(log_type IN ("remediation", "policy_violation"), item_owner, log_type=="activity_monitoring", user)
EVAL-affect_dest = case(log_type=="incident", asset_id)
EVAL-src_user = case(log_type=="incident", item_owner)
EVAL-ticket_id = case(log_type=="incident", incident_id)
EVAL-time_submitted = case(log_type=="incident", timestamp)
EVAL-incident = case(log_type=="incident", incident_id)
EVAL-signature = case(log_type=="policy_violation", policy_rule_name)

[pan:xdr_incident]
KV_MODE = JSON
SHOULD_LINEMERGE = 0
pulldown_type = 1
TRUNCATE = 0
TIME_PREFIX =  modification_time\"\:\s
EVAL-app = "Cortex XDR"
EVAL-assigned_user_pretty_name = replace(assigned_user_pretty_name,"null", "UNASSIGNED")
EVAL-score = coalesce(if(manual_score="null", null(), manual_score), if(rule_based_score="null", null(), rule_based_score))
EVAL-type = "event"
EVAL-severity = coalesce('incident.severity',severity)
EVAL-status = coalesce('incident.status',status)
EVAL-description = coalesce('incident.description',description)
EVAL-ticket_id = coalesce('incident.incident_id',incident_id)
EVAL-src_user = coalesce('incident.users{}','users{}')
EVAL-dest = coalesce('incident.hosts{}','hosts{}')
EVAL-time_submitted = coalesce('incident.creation_time',creation_time)
FIELDALIAS-incident_sources = incident_sources{} as src_type
EVAL-user = if(assigned_user_pretty_name!="null",assigned_user_pretty_name, "UNASSIGNED")
EVAL-comments = if(resolution_comment!="null",resolution_comment, "NO COMMENTS")
