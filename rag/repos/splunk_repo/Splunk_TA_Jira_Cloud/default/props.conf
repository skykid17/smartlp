#
# SPDX-FileCopyrightText: 2024 Splunk, Inc.
# SPDX-License-Identifier: LicenseRef-Splunk-8-2021
#
#
[jira:cloud:audit:log]

EVAL-action = case( summary IN ("User created","Custom field created","Field Configuration scheme created","Global permission added","Group created","Issue Security scheme copied","Issue Security scheme created","Notification scheme created","Permission scheme copied","Permission scheme created","Project component created","Project created","Project version created","Status created","Workflow created","Workflow scheme created"), "created",   \
summary IN ("User updated","Archived project restored","Custom field restored","Custom field trashed","Custom field updated","Deleted project restored","Field Configuration scheme added to project","Field Configuration scheme updated","Issue Security scheme added to project","Issue Security scheme updated","Issue Security scheme updated","Notification scheme added to project","Notification scheme updated","Permission scheme added to project","Permission scheme updated","Permission scheme updated","Project archived","Project component updated","Project marked as deleted","Project roles changed","Project updated","Project version archived","Project version released","Project version unarchived","Project version unreleased","Project version updated","Status updated","User added to group","User removed from group","User removed from project","Workflow scheme added to project","Workflow scheme updated","Workflow updated"), "modified",  \
summary IN ("Custom field deleted","Field Configuration scheme deleted","Global permission deleted","Group deleted","Issue Security scheme deleted","Notification scheme deleted","Permission scheme deleted","Project component deleted","Project deleted","Project role deleted","Project version deleted","Status deleted","Workflow deleted","Workflow scheme deleted"), "deleted"  )

EVAL-change_type = case( summary IN ("User created","User updated","User added to group","User removed from group","User removed from project"), "AAA", \
summary IN ("Archived project restored","Custom field created","Custom field deleted","Custom field restored","Custom field trashed","Custom field updated","Deleted project restored","Field Configuration scheme added to project","Field Configuration scheme created","Field Configuration scheme deleted","Field Configuration scheme updated","Global permission added","Global permission deleted","Group created","Group deleted","Issue Security scheme added to project","Issue Security scheme copied","Issue Security scheme created","Issue Security scheme deleted","Issue Security scheme updated","Issue Security scheme updated","Notification scheme added to project","Notification scheme created","Notification scheme deleted","Notification scheme updated","Permission scheme added to project","Permission scheme copied","Permission scheme created","Permission scheme deleted","Permission scheme updated","Permission scheme updated","Project archived","Project component created","Project component deleted","Project component updated","Project created","Project deleted","Project marked as deleted","Project role deleted","Project roles changed","Project updated","Project version archived","Project version created","Project version deleted","Project version released","Project version unarchived","Project version unreleased","Project version updated","Status created","Status deleted","Status updated","Workflow created","Workflow deleted","Workflow scheme added to project","Workflow scheme created","Workflow scheme deleted","Workflow scheme updated","Workflow updated"), "filesystem" )

FIELDALIAS-dest = host AS dest
FIELDALIAS-dvc = host AS dvc

FIELDALIAS-object = objectItem.name AS object
EVAL-object_attrs = case( 'changedValues{}.fieldName' != "" , mvzip(spath(_raw, "changedValues{}.fieldName"), spath(_raw, "changedValues{}.changedTo"),"=") )
FIELDALIAS-object_category = objectItem.typeName AS object_category
FIELDALIAS-object_id = objectItem.id AS object_id

FIELDALIAS-parent_object = objectItem.parentName AS parent_object
FIELDALIAS-parent_object_id = objectItem.parentId AS parent_object_id

FIELDALIAS-result = summary AS result
FIELDALIAS-result_id = id AS result_id

FIELDALIAS-src = remoteAddress AS src_ip remoteAddress AS src

EVAL-status = "success"

EVAL-user = if( summary IN ("User created","User updated"), 'objectItem.id', authorAccountId )

EVAL-vendor_product = "Jira Cloud"

[jira:cloud:issues]
TRUNCATE = 0
KV_MODE = json

FIELDALIAS-dest = host AS dest
FIELDALIAS-incident_from_summary = fields.summary AS incident
FIELDALIAS-priority = fields.priority.name AS priority
FIELDALIAS-src_user = fields.reporter.displayName AS src_user
FIELDALIAS-status = fields.status.name AS status
FIELDALIAS-ticket_id = key AS ticket_id
FIELDALIAS-time_submitted = fields.created AS time_submitted

EVAL-description = case('fields.description' != "null" AND 'fields.description' != "", mvjoin('fields.description', " "), 'fields.description.content{}.content{}.text' != "null" AND 'fields.description.content{}.content{}.text' != "", mvjoin('fields.description.content{}.content{}.text', " "),  true(), null())
EVAL-user = case('fields.assignee.displayName' != "null" AND 'fields.assignee.displayName' != "", 'fields.assignee.displayName', true(), null())
EVAL-vendor_product = "Jira Cloud"

## Line breaker for multiline exception traceback
[source::.../var/log/splunk/splunk_ta_jira_cloud*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}

[source::...\\var\\log\\splunk\\splunk_ta_jira_cloud*.log*]
SHOULD_LINEMERGE = false
LINE_BREAKER=([\r\n]+)\d{4}-\d{2}-\d{2}
