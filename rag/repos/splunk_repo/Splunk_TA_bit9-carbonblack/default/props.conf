##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
[bit9:carbonblack:json]
LINE_BREAKER = (?:}("\|\|")(?:{")?|([\r\n]+))
SHOULD_LINEMERGE = false
KV_MODE = JSON
TIME_PREFIX = (?:\"timestamp\"\:(?!\")|\"message\"\:)
MAX_TIMESTAMP_LOOKAHEAD = 0
pulldown_type = true
EVENT_BREAKER_ENABLE = true


##############################################################
## General
##############################################################

FIELDALIAS-os = docs{}.os_type AS os

REPORT-event_type 	  = carbonblack_is_alert_transform
REPORT-event_type_edr = carbonblack_is_edr_alert_transform
REPORT-operation_type = carbonblack_is_network_transform, carbonblack_is_file_transform, carbonblack_is_registry_transform, carbonblack_is_process_transform, carbonblack_is_binary_transform
REPORT-operation_type_edr = carbonblack_is_edr_file_transform, carbonblack_is_edr_process_transform

REPORT-endpoint = carbonblack_endpoint_transform, carbonblack_endpoint_transform2
REPORT-process_from_path = carbonblack_process_name_transform,carbonblack_parent_process_name_transform

FIELDALIAS-vendor_type = type as vendor_type

EVAL-dvc = COALESCE(endpoint, hostname, computer_name)
EVAL-file_hash = case(type IN("binarystore.file.added","ingress.event.filemod","ingress.event.module","watchlist.storage.hit.binary","watchlist.hit.binary"), COALESCE(if(md5="",null,md5),'docs{}.md5'), true(), file_hash)
EVAL-file_access_time = case(type IN("ingress.event.filemod","ingress.event.module"),timestamp)
EVAL-file_modify_time = case(type IN("binarystore.file.added","ingress.event.filemod","ingress.event.module"),timestamp)
EVAL-file_create_time = case(type=="binarystore.file.added" OR (type=="ingress.event.filemod" AND action=="create"),timestamp)
EVAL-vendor = "Carbon Black"
EVAL-product = "EDR"
EVAL-vendor_product = "Carbon Black EDR"
EVAL-status = if(status=="Unresolved" OR type=="ingress.event.regmod","success",status)
EVAL-dest_nt_domain = if(mvcount(split(COALESCE(username,'docs{}.username'),"\\"))==2,mvindex(split(COALESCE(username,'docs{}.username'),"\\"),0),null)
EVAL-user = COALESCE(mvindex(split(COALESCE(username,'docs{}.username'),"\\"),-1), 'docs{}.username', child_username)
EVAL-user_name = COALESCE(mvindex(split(COALESCE(username,'docs{}.username'),"\\"),-1), 'docs{}.username', child_username)

EVAL-parent_process = COALESCE(parent_process,'docs{}.parent_name',if(isnotnull(is_edr_process),parent_process_from_path,null))
EVAL-parent_process_name = COALESCE(parent_process_name,parent_process,'docs{}.parent_name',if(isnotnull(is_edr_process),parent_process_from_path,null))
EVAL-parent_process_exec = COALESCE(parent_process_name,parent_process,'docs{}.parent_name',if(isnotnull(is_edr_process),parent_process_from_path,null))
EVAL-parent_process_path = COALESCE(if(isnotnull(is_edr_process),parent_path,null),parent_process_path)
EVAL-parent_process_id = if(type == "ingress.event.procstart" OR type == "ingress.event.procend",parent_pid,COALESCE(parent_process_id,'docs{}.parent_pid'))
EVAL-process_guid = COALESCE(process_guid,'docs{}.process_guid')
EVAL-parent_process_guid = if(event_type=="childproc",parent_guid,COALESCE(parent_process_guid,'docs{}.parent_guid'))
EVAL-process_exec = COALESCE(process_exec,process_name,'docs{}.process_name',process_from_path,if(file_name!="0" AND isnotnull(is_edr_process), file_name, process))
EVAL-process_path = COALESCE(if(event_type=="childproc",path,process_path),case(isnotnull(is_edr_process),COALESCE('docs{}.path',path)))
EVAL-process_name = COALESCE(process_name,'docs{}.process_name',process_from_path,if(file_name!="0" AND isnotnull(is_edr_process), file_name, process))
EVAL-process_hash = COALESCE(process_md5,'docs{}.process_md5',if(isnotnull(is_edr_process),if(md5="" OR isnull(md5),'docs{}.md5',md5),null))
EVAL-parent_process_hash = if(isnotnull(is_edr_process),if(parent_md5="" OR isnull(parent_md5),'docs{}.parent_md5',parent_md5),null)

##############################################################
## ALERTS CIM
##############################################################
FIELDALIAS-notification_type = type as notification_type
EVAL-app = COALESCE(app,'docs{}.product_name',"Carbon Black EDR")
EVAL-body = case(isnotnull(is_edr_alert), alert_type, true(), ioc_attr)
EVAL-signature = case(isnotnull(is_edr_alert),watchlist_name,is_alert!="" OR alert_type!="",type)
EVAL-signature_id = if(isnotnull(is_edr_alert),watchlist_id,signature_id)
EVAL-severity_id = if(isnotnull(is_edr_alert),alert_severity,severity_id)
EVAL-id = COALESCE(unique_id,id)
EVAL-type = case(isnotnull(is_edr_alert),"alert",is_alert!="" OR alert_type!="","alert",true(),type)

EVAL-subject = "Type:"+notification_type + ", Watchlist_name:" + watchlist_name
EVAL-severity = if(is_alert !="" OR is_edr_alert!="" OR alert_type!="",if(alert_severity < 20, "informational", if((alert_severity >= 20 AND alert_severity < 40), "low", if((alert_severity >= 40 AND alert_severity < 60), "medium", if((alert_severity >= 60 AND alert_severity < 80), "high", if((alert_severity >= 80), "critical", "unknown"))))),null)


##############################################################
## CHANGE ANALYSIS CIM
##############################################################
REPORT-object_info = carbonblack_file_and_path_transform,carbonblack_file_and_path_transform2,carbonblack_registry_transform

EVAL-size = COALESCE(size,'docs{}.orig_mod_len')
EVAL-file_size = COALESCE(size,'docs{}.orig_mod_len')/1024

EVAL-change_type = if((is_file != "" OR is_binary != ""),"filesystem", if(is_registry != "", "registry", if(is_process != "", "process", null)))

EVAL-file_name = if(is_edr_file != "" OR is_binary != "", COALESCE(file_name_transformed,file_name), null)
EVAL-file_path = if(is_edr_file != "" OR is_binary != "", COALESCE(replace(file_path_transformed,"\\\\(.)","\1"),file_path), null)

EVAL-registry_path = if(is_registry != "", path,null)
EVAL-registry_key = if(is_registry != "", registry_key,null)
EVAL-registry_key_name = if(is_registry != "", registry_key,null)
EVAL-registry_value = if(is_registry != "",COALESCE(registry_value,file_name),null)
EVAL-registry_hive = if(is_registry != "",case(match(path,"registry\\\machine\\\software\\\classes"),"HKEY_CLASSES_ROOT",match(path,"registry\\\machine\\\system"),"HKEY_CURRENT_CONFIG",match(path,"registry\\\machine"),"HKEY_LOCAL_MACHINE",match(path,"registry\\\user"),"HKEY_USERS"),null)
EVAL-registry_value_name = if(is_registry != "",COALESCE(registry_value,file_name),null)

EVAL-object = case(is_file!="",file_name,is_registry!="", COALESCE(registry_key,file_name))
EVAL-object_path = case(is_file!="",file_path,is_registry!="",COALESCE(registry_path,file_path))


FIELDALIAS-vendor_action = action as vendor_action
LOOKUP-bit9_cbs_actions_lookup = bit9_cbs_actions_lookup vendor_action OUTPUTNEW action

##############################################################
## APPLICATION STATE CIM
##############################################################
EVAL-process_id = COALESCE(pid,process_pid,'docs{}.process_pid',process_id)
EVAL-process = COALESCE('docs{}.cmdline',if(command_line="",null,command_line),if(child_command_line="",null,child_command_line),process_from_path,if(file_name!="0" AND isnotnull(is_edr_process), file_name, process))

##############################################################
## NETWORK TRAFFIC CIM
##############################################################

EVAL-dest_ip = COALESCE(if(direction == "outbound",remote_ip,if(direction == "inbound",local_ip,null)),ipv4,comms_ip)
EVAL-dest_translated_ip = COALESCE(if(direction == "outbound",remote_ip,if(direction == "inbound",local_ip,null)),ipv4)
EVAL-dest = case(isnotnull(is_edr_alert),cb_server,domain!="",domain, true(),COALESCE(if(direction == "outbound",remote_ip,if(direction == "inbound",local_ip,null)),ipv4, endpoint, server_name, computer_name,if(type=="binarystore.file.added",cb_server,null)))
EVAL-src  = COALESCE(hostname, computer_name)
EVAL-dest_port = if(direction == "outbound",COALESCE(remote_port,port),if(direction == "inbound",local_port,null))
EVAL-src_port = if(direction == "outbound",local_port,if(direction == "inbound",COALESCE(remote_port,port),null))
EVAL-dest_translated_port = if(direction == "outbound",COALESCE(remote_port,port),if(direction == "inbound",local_port,null))
EVAL-src_translated_port = if(direction == "outbound",local_port,if(direction == "inbound",COALESCE(remote_port,port),null))
EVAL-transport = if(protocol=="6","tcp",if(protocol=="17","udp","unknown"))
EVAL-protocol = if(is_network=="netconn","ip",null)
EVAL-protocol_version = case(is_network=="netconn" AND isnotnull(local_ip),if(match(local_ip,":"),"ipv6","ipv4"), is_network=="netconn" AND isnotnull(remote_ip),if(match(remote_ip,":"),"ipv6","ipv4"))

##############################################################
## IDS CIM
##############################################################
EVAL-action = case(is_network=="netconn" OR type=="ingress.event.moduleload" OR type=="ingress.event.process" OR type=="ingress.event.procstart" OR type=="ingress.event.remotethread" OR type=="ingress.event.crossprocopen" OR type=="ingress.event.childproc" OR type=="ingress.event.procend" OR (is_alert!="" OR alert_type!="") AND (isnull(is_file) AND isnull(is_registry) AND isnull(is_binary)),"allowed", type IN("binarystore.file.added","ingress.event.module"), "modified")
EVAL-category = if(is_alert!="" OR alert_type!="",COALESCE(watchlist_name,report_id),null)
EVAL-ids_type = if(is_alert!="" OR alert_type!="","host",null)