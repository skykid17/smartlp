##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##


[crowdstrike:events:external]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike external security events
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="UTCTimestamp":\s*
TIME_FORMAT=%s%3N
MAX_TIMESTAMP_LOOKAHEAD=13
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time

# lookup for app/file details resolution at search time
LOOKUP-crowdstrike_ta_appinfo_resolution_for_security_events = crowdstrike_ta_build_appinfo_resolution_lookup SHA256HashData OUTPUT CompanyName AS appinfo_company_name FileDescription AS appinfo_file_description FileName AS appinfo_file_name FileVersion AS appinfo_file_version ProductName AS appinfo_product_name ProductVersion AS appinfo_product_version detectionCount AS appinfo_detection_count


[crowdstrike:events:ztha]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike zero trust host assesmet security events
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="modified_time":\s*"
TIME_FORMAT=%Y-%m-%dT%H:%M:%S.%9N%Z
MAX_TIMESTAMP_LOOKAHEAD=30
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time


[crowdstrike:inventory:aidmaster]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike aidmaster inventory updates
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="Time":\s*"
TIME_FORMAT=%s.%7N
MAX_TIMESTAMP_LOOKAHEAD=18
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time


[crowdstrike:inventory:managedassets]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike managed assets inventory updates
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="_time":\s*"
TIME_FORMAT=%s.%3N
MAX_TIMESTAMP_LOOKAHEAD=14
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time


[crowdstrike:inventory:notmanaged]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike not managed inventory updates
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="_time":\s*"
TIME_FORMAT=%s.%3N
MAX_TIMESTAMP_LOOKAHEAD=14
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time


[crowdstrike:inventory:appinfo]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike appinfo inventory updates
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="_time":\s*"
TIME_FORMAT=%s.%3N
MAX_TIMESTAMP_LOOKAHEAD=14
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time


[crowdstrike:inventory:userinfo]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike userinfo inventory updates
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="_time":\s*"
TIME_FORMAT=%s.%3N
MAX_TIMESTAMP_LOOKAHEAD=14
TRUNCATE=100000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time


[crowdstrike:events:sensor]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike sensor events
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="timestamp":\s*
TIME_FORMAT=%s%3N
MAX_TIMESTAMP_LOOKAHEAD=15
TRUNCATE=200000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time
TRANSFORMS-crowdstrike_ta_indextime_host_resolution = crowdstrike_ta_index_time_event_host_resolution_trigger_idxtm,crowdstrike_ta_index_time_event_host_resolution_trigger_shtm
TRANSFORMS-crowdstrike_ta_rewrite_event_time = crowdstrike_ta_extract_timestamp_events_sensor,crowdstrike_ta_rewrite_timestamp_events_sensor

# lookup for agent host resolution at search time
LOOKUP-crowdstrike_ta_host_resolution_for_security_events = crowdstrike_ta_combined_host_resolution_lookup aid AS host_res_aid OUTPUT ComputerName AS aid_computer_name MachineDomain AS aid_machine_domain OU AS aid_ou SiteName AS aid_site_name SystemProductName AS aid_system_product_name Version AS aid_os_version Continent AS aid_continent Country AS aid_country City AS aid_city GatewayIP AS aid_gateway_IP GatewayMAC AS aid_gateway_mac LocalAddressIP4 AS aid_local_address_ip4 MAC AS aid_mac

# lookup for app/file details resolution at search time
LOOKUP-crowdstrike_ta_appinfo_resolution_for_security_events = crowdstrike_ta_build_appinfo_resolution_lookup SHA256HashData OUTPUT CompanyName AS appinfo_company_name FileDescription AS appinfo_file_description FileName AS appinfo_file_name FileVersion AS appinfo_file_version ProductName AS appinfo_product_name ProductVersion AS appinfo_product_version detectionCount AS appinfo_detection_count

# lookup for user details resolution at search time
LOOKUP-crowdstrike_ta_userinfo_resolution_for_security_events = crowdstrike_ta_build_userinfo_resolution_lookup UserSid OUTPUT AccountType AS userinfo_account_type User AS userinfo_user UserName AS userinfo_user_name

# crowdstrike bitmask lookups to resolve flag fields
LOOKUP-crowdstrike_ta_AsepFlags = crowdstrike_ta_bitmask_lookup_AsepFlags bitmask as AsepFlags OUTPUTNEW result AS AsepFlags_meaning
LOOKUP-crowdstrike_ta_CodeSigningFlags = crowdstrike_ta_bitmask_lookup_CodeSigningFlags bitmask as CodeSigningFlags OUTPUTNEW result AS CodeSigningFlags_meaning
LOOKUP-crowdstrike_ta_ConfigIDPlatform = crowdstrike_ta_bitmask_lookup_ConfigIDPlatform bitmask as ConfigIDPlatform OUTPUTNEW result AS ConfigIDPlatform_meaning
LOOKUP-crowdstrike_ta_ConfigurationDescriptorAttributes = crowdstrike_ta_bitmask_lookup_ConfigurationDescriptorAttributes bitmask as ConfigurationDescriptorAttributes OUTPUTNEW result AS ConfigurationDescriptorAttributes_meaning
LOOKUP-crowdstrike_ta_ConnectionFlags = crowdstrike_ta_bitmask_lookup_ConnectionFlags bitmask as ConnectionFlags OUTPUTNEW result AS ConnectionFlags_meaning
LOOKUP-crowdstrike_ta_DcPolicyFlags = crowdstrike_ta_bitmask_lookup_DcPolicyFlags bitmask as DcPolicyFlags OUTPUTNEW result AS DcPolicyFlags_meaning
LOOKUP-crowdstrike_ta_DcPolicyMassStorageBlockPermissions = crowdstrike_ta_bitmask_lookup_DcPolicyMassStorageBlockPermissions bitmask as DcPolicyMassStorageBlockPermissions OUTPUTNEW result AS DcPolicyMassStorageBlockPermissions_meaning
LOOKUP-crowdstrike_ta_DllCharacteristics = crowdstrike_ta_bitmask_lookup_DllCharacteristics bitmask as DllCharacteristics OUTPUTNEW result AS DllCharacteristics_meaning
LOOKUP-crowdstrike_ta_EnabledPrivilegesBitmask = crowdstrike_ta_bitmask_lookup_EnabledPrivilegesBitmask bitmask as EnabledPrivilegesBitmask OUTPUTNEW result AS EnabledPrivilegesBitmask_meaning
LOOKUP-crowdstrike_ta_EtwNegotiatedFlags = crowdstrike_ta_bitmask_lookup_EtwNegotiatedFlags bitmask as EtwNegotiatedFlags OUTPUTNEW result AS EtwNegotiatedFlags_meaning
LOOKUP-crowdstrike_ta_FileAttributes = crowdstrike_ta_bitmask_lookup_FileAttributes bitmask as FileAttributes OUTPUTNEW result AS FileAttributes_meaning
LOOKUP-crowdstrike_ta_FileEcpBitmask = crowdstrike_ta_bitmask_lookup_FileEcpBitmask bitmask as FileEcpBitmask OUTPUTNEW result AS FileEcpBitmask_meaning
LOOKUP-crowdstrike_ta_FsOperationClassificationFlags = crowdstrike_ta_bitmask_lookup_FsOperationClassificationFlags bitmask as FsOperationClassificationFlags OUTPUTNEW result AS FsOperationClassificationFlags_meaning
LOOKUP-crowdstrike_ta_LfoUploadFlags = crowdstrike_ta_bitmask_lookup_LfoUploadFlags bitmask as LfoUploadFlags OUTPUTNEW result AS LfoUploadFlags_meaning
LOOKUP-crowdstrike_ta_ModuleCharacteristics = crowdstrike_ta_bitmask_lookup_ModuleCharacteristics bitmask as ModuleCharacteristics OUTPUTNEW result AS ModuleCharacteristics_meaning
LOOKUP-crowdstrike_ta_PrivilegesBitmask = crowdstrike_ta_bitmask_lookup_PrivilegesBitmask bitmask as PrivilegesBitmask OUTPUTNEW result AS PrivilegesBitmask_meaning
LOOKUP-crowdstrike_ta_ProcessBehaviorBitfield = crowdstrike_ta_bitmask_lookup_ProcessBehaviorBitfield bitmask as ProcessBehaviorBitfield OUTPUTNEW result AS ProcessBehaviorBitfield_meaning
LOOKUP-crowdstrike_ta_ProcessParameterFlags = crowdstrike_ta_bitmask_lookup_ProcessParameterFlags bitmask as ProcessParameterFlags OUTPUTNEW result AS ProcessParameterFlags_meaning
LOOKUP-crowdstrike_ta_ProcessSxsFlags = crowdstrike_ta_bitmask_lookup_ProcessSxsFlags bitmask as ProcessSxsFlags OUTPUTNEW result AS ProcessSxsFlags_meaning
LOOKUP-crowdstrike_ta_RegClassificationFlags = crowdstrike_ta_bitmask_lookup_RegClassificationFlags bitmask as RegClassificationFlags OUTPUTNEW result AS RegClassificationFlags_meaning
LOOKUP-crowdstrike_ta_RegConfigFlags = crowdstrike_ta_bitmask_lookup_RegConfigFlags bitmask as RegConfigFlags OUTPUTNEW result AS RegConfigFlags_meaning
LOOKUP-crowdstrike_ta_RegKeyChangeType = crowdstrike_ta_bitmask_lookup_RegKeyChangeType bitmask as RegKeyChangeType OUTPUTNEW result AS RegKeyChangeType_meaning
LOOKUP-crowdstrike_ta_SignInfoFlags = crowdstrike_ta_bitmask_lookup_SignInfoFlags bitmask as SignInfoFlags OUTPUTNEW result AS SignInfoFlags_meaning
LOOKUP-crowdstrike_ta_SupportedArchitectures = crowdstrike_ta_bitmask_lookup_SupportedArchitectures bitmask as SupportedArchitectures OUTPUTNEW result AS SupportedArchitectures_meaning
LOOKUP-crowdstrike_ta_UACFlags = crowdstrike_ta_bitmask_lookup_UACFlags bitmask as UACFlags OUTPUTNEW result AS UACFlags_meaning
LOOKUP-crowdstrike_ta_UserFlags = crowdstrike_ta_bitmask_lookup_UserFlags bitmask as UserFlags OUTPUTNEW result AS UserFlags_meaning
LOOKUP-crowdstrike_ta_UserGroupsBitmask = crowdstrike_ta_bitmask_lookup_UserGroupsBitmask bitmask as UserGroupsBitmask OUTPUTNEW result AS UserGroupsBitmask_meaning
LOOKUP-crowdstrike_ta_UserLogonFlags = crowdstrike_ta_bitmask_lookup_UserLogonFlags bitmask as UserLogonFlags OUTPUTNEW result AS UserLogonFlags_meaning
LOOKUP-crowdstrike_ta_VolumeDeviceCharacteristics = crowdstrike_ta_bitmask_lookup_VolumeDeviceCharacteristics bitmask as VolumeDeviceCharacteristics OUTPUTNEW result AS VolumeDeviceCharacteristics_meaning
LOOKUP-crowdstrike_ta_WindowFlags = crowdstrike_ta_bitmask_lookup_WindowFlags bitmask as WindowFlags OUTPUTNEW result AS WindowFlags_meaning
LOOKUP-crowdstrike_ta_ModifiedRegisters = crowdstrike_ta_bitmask_lookup_ModifiedRegisters bitmask AS ModifiedRegisters OUTPUTNEW result AS ModifiedRegisters_meaning

# crowdstrike lookups to resolve enumerations
LOOKUP-crowdstrike_ta_VolumeFileSystemType = crowdstrike_ta_lookup_VolumeFileSystemType VolumeFileSystemType as VolumeFileSystemType OUTPUTNEW VolumeFileSystemType_meaning AS VolumeFileSystemType_meaning
LOOKUP-crowdstrike_ta_StandbyBucket = crowdstrike_ta_lookup_StandbyBucket StandbyBucket AS StandbyBucket OUTPUTNEW StandbyBucket_meaning AS StandbyBucket_meaning
LOOKUP-crowdstrike_ta_AndroidModuleState = crowdstrike_ta_lookup_AndroidModuleState AndroidModuleState AS AndroidModuleState OUTPUTNEW AndroidModuleState_meaning AS AndroidModuleState_meaning
LOOKUP-crowdstrike_ta_HttpVisibilityState = crowdstrike_ta_lookup_HttpVisibilityState HttpVisibilityState AS HttpVisibilityState OUTPUTNEW HttpVisibilityState_meaning AS HttpVisibilityState_meaning
LOOKUP-crowdstrike_ta_UpdateFlag = crowdstrike_ta_lookup_UpdateFlag UpdateFlag AS UpdateFlag OUTPUTNEW UpdateFlag_meaning AS UpdateFlag_meaning
LOOKUP-crowdstrike_ta_FirmwareAnalysisErrorSource = crowdstrike_ta_lookup_FirmwareAnalysisErrorSource FirmwareAnalysisErrorSource AS FirmwareAnalysisErrorSource OUTPUTNEW FirmwareAnalysisErrorSource_meaning AS FirmwareAnalysisErrorSource_meaning
LOOKUP-crowdstrike_ta_HttpInternalSource = crowdstrike_ta_lookup_HttpInternalSource HttpInternalSource AS HttpInternalSource OUTPUTNEW HttpInternalSource_meaning AS HttpInternalSource_meaning
LOOKUP-crowdstrike_ta_BuildType = crowdstrike_ta_lookup_BuildType BuildType AS BuildType OUTPUTNEW BuildType_meaning AS BuildType_meaning
LOOKUP-crowdstrike_ta_ConnectType = crowdstrike_ta_lookup_ConnectType ConnectType AS ConnectType OUTPUTNEW ConnectType_meaning AS ConnectType_meaning
LOOKUP-crowdstrike_ta_HttpVisibilityStatusReason = crowdstrike_ta_lookup_HttpVisibilityStatusReason HttpVisibilityStatusReason AS HttpVisibilityStatusReason OUTPUTNEW HttpVisibilityStatusReason_meaning AS HttpVisibilityStatusReason_meaning
LOOKUP-crowdstrike_ta_PreviousMemoryRegionProtection = crowdstrike_ta_lookup_PreviousMemoryRegionProtection PreviousMemoryRegionProtection AS PreviousMemoryRegionProtection OUTPUTNEW PreviousMemoryRegionProtection_meaning AS PreviousMemoryRegionProtection_meaning
LOOKUP-crowdstrike_ta_RuleAction = crowdstrike_ta_lookup_RuleAction RuleAction AS RuleAction OUTPUTNEW RuleAction_meaning AS RuleAction_meaning
LOOKUP-crowdstrike_ta_FileWrittenFlags = crowdstrike_ta_lookup_FileWrittenFlags FileWrittenFlags AS FileWrittenFlags OUTPUTNEW FileWrittenFlags_meaning AS FileWrittenFlags_meaning
LOOKUP-crowdstrike_ta_PciAttachmentState = crowdstrike_ta_lookup_PciAttachmentState PciAttachmentState AS PciAttachmentState OUTPUTNEW PciAttachmentState_meaning AS PciAttachmentState_meaning
LOOKUP-crowdstrike_ta_Status = crowdstrike_ta_lookup_Status Status AS Status OUTPUTNEW Status_meaning AS Status_meaning
LOOKUP-crowdstrike_ta_ErrorStatus = crowdstrike_ta_lookup_ErrorStatus ErrorStatus AS ErrorStatus OUTPUTNEW ErrorStatus_meaning AS ErrorStatus_meaning
LOOKUP-crowdstrike_ta_ParentAuthenticationId = crowdstrike_ta_lookup_ParentAuthenticationId ParentAuthenticationId AS ParentAuthenticationId OUTPUTNEW ParentAuthenticationId_meaning AS ParentAuthenticationId_meaning
LOOKUP-crowdstrike_ta_LightningLatencyState = crowdstrike_ta_lookup_LightningLatencyState LightningLatencyState AS LightningLatencyState OUTPUTNEW LightningLatencyState_meaning AS LightningLatencyState_meaning
LOOKUP-crowdstrike_ta_CloudErrorCode = crowdstrike_ta_lookup_CloudErrorCode CloudErrorCode AS CloudErrorCode OUTPUTNEW CloudErrorCode_meaning AS CloudErrorCode_meaning
LOOKUP-crowdstrike_ta_TargetAndroidComponentType = crowdstrike_ta_lookup_TargetAndroidComponentType TargetAndroidComponentType AS TargetAndroidComponentType OUTPUTNEW TargetAndroidComponentType_meaning AS TargetAndroidComponentType_meaning
LOOKUP-crowdstrike_ta_AsepValueType = crowdstrike_ta_lookup_AsepValueType AsepValueType AS AsepValueType OUTPUTNEW AsepValueType_meaning AS AsepValueType_meaning
LOOKUP-crowdstrike_ta_DcPolicyBlockTechnique = crowdstrike_ta_lookup_DcPolicyBlockTechnique DcPolicyBlockTechnique AS DcPolicyBlockTechnique OUTPUTNEW DcPolicyBlockTechnique_meaning AS DcPolicyBlockTechnique_meaning
LOOKUP-crowdstrike_ta_DriverLoadFlags = crowdstrike_ta_lookup_DriverLoadFlags DriverLoadFlags AS DriverLoadFlags OUTPUTNEW DriverLoadFlags_meaning AS DriverLoadFlags_meaning
LOOKUP-crowdstrike_ta_TemplateDisposition = crowdstrike_ta_lookup_TemplateDisposition TemplateDisposition AS TemplateDisposition OUTPUTNEW TemplateDisposition_meaning AS TemplateDisposition_meaning
LOOKUP-crowdstrike_ta_ConnectionExchange = crowdstrike_ta_lookup_ConnectionExchange ConnectionExchange AS ConnectionExchange OUTPUTNEW ConnectionExchange_meaning AS ConnectionExchange_meaning
LOOKUP-crowdstrike_ta_CloudPlatform = crowdstrike_ta_lookup_CloudPlatform CloudPlatform AS CloudPlatform OUTPUTNEW CloudPlatform_meaning AS CloudPlatform_meaning
LOOKUP-crowdstrike_ta_NetworkProfile = crowdstrike_ta_lookup_NetworkProfile NetworkProfile AS NetworkProfile OUTPUTNEW NetworkProfile_meaning AS NetworkProfile_meaning
LOOKUP-crowdstrike_ta_RegConfigValueType = crowdstrike_ta_lookup_RegConfigValueType RegConfigValueType AS RegConfigValueType OUTPUTNEW RegConfigValueType_meaning AS RegConfigValueType_meaning
LOOKUP-crowdstrike_ta_ConnectionProtocol = crowdstrike_ta_lookup_ConnectionProtocol ConnectionProtocol AS ConnectionProtocol OUTPUTNEW ConnectionProtocol_meaning AS ConnectionProtocol_meaning
LOOKUP-crowdstrike_ta_DcPolicyAction = crowdstrike_ta_lookup_DcPolicyAction DcPolicyAction AS DcPolicyAction OUTPUTNEW DcPolicyAction_meaning AS DcPolicyAction_meaning
LOOKUP-crowdstrike_ta_PowerPluggedType = crowdstrike_ta_lookup_PowerPluggedType PowerPluggedType AS PowerPluggedType OUTPUTNEW PowerPluggedType_meaning AS PowerPluggedType_meaning
LOOKUP-crowdstrike_ta_CrashLoadedModulesVersion = crowdstrike_ta_lookup_CrashLoadedModulesVersion CrashLoadedModulesVersion AS CrashLoadedModulesVersion OUTPUTNEW CrashLoadedModulesVersion_meaning AS CrashLoadedModulesVersion_meaning
LOOKUP-crowdstrike_ta_DnsResponseType = crowdstrike_ta_lookup_DnsResponseType DnsResponseType AS DnsResponseType OUTPUTNEW DnsResponseType_meaning AS DnsResponseType_meaning
LOOKUP-crowdstrike_ta_ProvisionState = crowdstrike_ta_lookup_ProvisionState ProvisionState AS ProvisionState OUTPUTNEW ProvisionState_meaning AS ProvisionState_meaning
LOOKUP-crowdstrike_ta_ConnectionCipher = crowdstrike_ta_lookup_ConnectionCipher ConnectionCipher AS ConnectionCipher OUTPUTNEW ConnectionCipher_meaning AS ConnectionCipher_meaning
LOOKUP-crowdstrike_ta_ContainerizationErrorCode = crowdstrike_ta_lookup_ContainerizationErrorCode ContainerizationErrorCode AS ContainerizationErrorCode OUTPUTNEW ContainerizationErrorCode_meaning AS ContainerizationErrorCode_meaning
LOOKUP-crowdstrike_ta_AppProvider = crowdstrike_ta_lookup_AppProvider AppProvider AS AppProvider OUTPUTNEW AppProvider_meaning AS AppProvider_meaning
LOOKUP-crowdstrike_ta_RFMState = crowdstrike_ta_lookup_RFMState RFMState AS RFMState OUTPUTNEW RFMState_meaning AS RFMState_meaning
LOOKUP-crowdstrike_ta_CallStackModuleNamesVersion = crowdstrike_ta_lookup_CallStackModuleNamesVersion CallStackModuleNamesVersion AS CallStackModuleNamesVersion OUTPUTNEW CallStackModuleNamesVersion_meaning AS CallStackModuleNamesVersion_meaning
LOOKUP-crowdstrike_ta_ControlStatus = crowdstrike_ta_lookup_ControlStatus ControlStatus AS ControlStatus OUTPUTNEW ControlStatus_meaning AS ControlStatus_meaning
LOOKUP-crowdstrike_ta_CrashThreadCallStackVersion = crowdstrike_ta_lookup_CrashThreadCallStackVersion CrashThreadCallStackVersion AS CrashThreadCallStackVersion OUTPUTNEW CrashThreadCallStackVersion_meaning AS CrashThreadCallStackVersion_meaning
LOOKUP-crowdstrike_ta_MeasurementType = crowdstrike_ta_lookup_MeasurementType MeasurementType AS MeasurementType OUTPUTNEW MeasurementType_meaning AS MeasurementType_meaning
LOOKUP-crowdstrike_ta_ProcessCreateFlags = crowdstrike_ta_lookup_ProcessCreateFlags ProcessCreateFlags AS ProcessCreateFlags OUTPUTNEW ProcessCreateFlags_meaning AS ProcessCreateFlags_meaning
LOOKUP-crowdstrike_ta_StackHashVersion = crowdstrike_ta_lookup_StackHashVersion StackHashVersion AS StackHashVersion OUTPUTNEW StackHashVersion_meaning AS StackHashVersion_meaning
LOOKUP-crowdstrike_ta_ErrorSource = crowdstrike_ta_lookup_ErrorSource ErrorSource AS ErrorSource OUTPUTNEW ErrorSource_meaning AS ErrorSource_meaning
LOOKUP-crowdstrike_ta_UmppaInjectionType = crowdstrike_ta_lookup_UmppaInjectionType UmppaInjectionType AS UmppaInjectionType OUTPUTNEW UmppaInjectionType_meaning AS UmppaInjectionType_meaning
LOOKUP-crowdstrike_ta_LocationStatus = crowdstrike_ta_lookup_LocationStatus LocationStatus AS LocationStatus OUTPUTNEW LocationStatus_meaning AS LocationStatus_meaning
LOOKUP-crowdstrike_ta_PosixFileType = crowdstrike_ta_lookup_PosixFileType PosixFileType AS PosixFileType OUTPUTNEW PosixFileType_meaning AS PosixFileType_meaning
LOOKUP-crowdstrike_ta_ModuleLoadMechanism = crowdstrike_ta_lookup_ModuleLoadMechanism ModuleLoadMechanism AS ModuleLoadMechanism OUTPUTNEW ModuleLoadMechanism_meaning AS ModuleLoadMechanism_meaning
LOOKUP-crowdstrike_ta_ScriptingLanguageId = crowdstrike_ta_lookup_ScriptingLanguageId ScriptingLanguageId AS ScriptingLanguageId OUTPUTNEW ScriptingLanguageId_meaning AS ScriptingLanguageId_meaning
LOOKUP-crowdstrike_ta_UserLogoffType = crowdstrike_ta_lookup_UserLogoffType UserLogoffType AS UserLogoffType OUTPUTNEW UserLogoffType_meaning AS UserLogoffType_meaning
LOOKUP-crowdstrike_ta_HostProcessType = crowdstrike_ta_lookup_HostProcessType HostProcessType AS HostProcessType OUTPUTNEW HostProcessType_meaning AS HostProcessType_meaning
LOOKUP-crowdstrike_ta_CurrentFunctionalityLevel = crowdstrike_ta_lookup_CurrentFunctionalityLevel CurrentFunctionalityLevel AS CurrentFunctionalityLevel OUTPUTNEW CurrentFunctionalityLevel_meaning AS CurrentFunctionalityLevel_meaning
LOOKUP-crowdstrike_ta_ScreenshotType = crowdstrike_ta_lookup_ScreenshotType ScreenshotType AS ScreenshotType OUTPUTNEW ScreenshotType_meaning AS ScreenshotType_meaning
LOOKUP-crowdstrike_ta_SHA256HashData = crowdstrike_ta_lookup_SHA256HashData SHA256HashData AS SHA256HashData OUTPUTNEW SHA256HashData_meaning AS SHA256HashData_meaning
LOOKUP-crowdstrike_ta_ExclusionSource = crowdstrike_ta_lookup_ExclusionSource ExclusionSource AS ExclusionSource OUTPUTNEW ExclusionSource_meaning AS ExclusionSource_meaning
LOOKUP-crowdstrike_ta_RegCreateDisposition = crowdstrike_ta_lookup_RegCreateDisposition RegCreateDisposition AS RegCreateDisposition OUTPUTNEW RegCreateDisposition_meaning AS RegCreateDisposition_meaning
LOOKUP-crowdstrike_ta_VnodeType = crowdstrike_ta_lookup_VnodeType VnodeType AS VnodeType OUTPUTNEW VnodeType_meaning AS VnodeType_meaning
LOOKUP-crowdstrike_ta_FontLoadOperation = crowdstrike_ta_lookup_FontLoadOperation FontLoadOperation AS FontLoadOperation OUTPUTNEW FontLoadOperation_meaning AS FontLoadOperation_meaning
LOOKUP-crowdstrike_ta_ServiceErrorControl = crowdstrike_ta_lookup_ServiceErrorControl ServiceErrorControl AS ServiceErrorControl OUTPUTNEW ServiceErrorControl_meaning AS ServiceErrorControl_meaning
LOOKUP-crowdstrike_ta_NetworkContainmentState = crowdstrike_ta_lookup_NetworkContainmentState NetworkContainmentState AS NetworkContainmentState OUTPUTNEW NetworkContainmentState_meaning AS NetworkContainmentState_meaning
LOOKUP-crowdstrike_ta_AsepClass = crowdstrike_ta_lookup_AsepClass AsepClass AS AsepClass OUTPUTNEW AsepClass_meaning AS AsepClass_meaning
LOOKUP-crowdstrike_ta_UACPromptType = crowdstrike_ta_lookup_UACPromptType UACPromptType AS UACPromptType OUTPUTNEW UACPromptType_meaning AS UACPromptType_meaning
LOOKUP-crowdstrike_ta_SafetyNetFailureType = crowdstrike_ta_lookup_SafetyNetFailureType SafetyNetFailureType AS SafetyNetFailureType OUTPUTNEW SafetyNetFailureType_meaning AS SafetyNetFailureType_meaning
LOOKUP-crowdstrike_ta_LogonType = crowdstrike_ta_lookup_LogonType LogonType AS LogonType OUTPUTNEW LogonType_meaning AS LogonType_meaning
LOOKUP-crowdstrike_ta_InstanceMetadataProvider = crowdstrike_ta_lookup_InstanceMetadataProvider InstanceMetadataProvider AS InstanceMetadataProvider OUTPUTNEW InstanceMetadataProvider_meaning AS InstanceMetadataProvider_meaning
LOOKUP-crowdstrike_ta_ChannelId = crowdstrike_ta_lookup_ChannelId ChannelId AS ChannelId OUTPUTNEW ChannelId_meaning AS ChannelId_meaning
LOOKUP-crowdstrike_ta_HookedObjectType = crowdstrike_ta_lookup_HookedObjectType HookedObjectType AS HookedObjectType OUTPUTNEW HookedObjectType_meaning AS HookedObjectType_meaning
LOOKUP-crowdstrike_ta_MemoryDescriptionFlags = crowdstrike_ta_lookup_MemoryDescriptionFlags MemoryDescriptionFlags AS MemoryDescriptionFlags OUTPUTNEW MemoryDescriptionFlags_meaning AS MemoryDescriptionFlags_meaning
LOOKUP-crowdstrike_ta_AmsiRegistrationState = crowdstrike_ta_lookup_AmsiRegistrationState AmsiRegistrationState AS AmsiRegistrationState OUTPUTNEW AmsiRegistrationState_meaning AS AmsiRegistrationState_meaning
LOOKUP-crowdstrike_ta_Malicious = crowdstrike_ta_lookup_Malicious Malicious AS Malicious OUTPUTNEW Malicious_meaning AS Malicious_meaning
LOOKUP-crowdstrike_ta_OciContainerEngineType = crowdstrike_ta_lookup_OciContainerEngineType OciContainerEngineType AS OciContainerEngineType OUTPUTNEW OciContainerEngineType_meaning AS OciContainerEngineType_meaning
LOOKUP-crowdstrike_ta_ScriptContentSource = crowdstrike_ta_lookup_ScriptContentSource ScriptContentSource AS ScriptContentSource OUTPUTNEW ScriptContentSource_meaning AS ScriptContentSource_meaning
LOOKUP-crowdstrike_ta_LfoUploadExtendedStatus = crowdstrike_ta_lookup_LfoUploadExtendedStatus LfoUploadExtendedStatus AS LfoUploadExtendedStatus OUTPUTNEW LfoUploadExtendedStatus_meaning AS LfoUploadExtendedStatus_meaning
LOOKUP-crowdstrike_ta_UACCredentialCaptureActionType = crowdstrike_ta_lookup_UACCredentialCaptureActionType UACCredentialCaptureActionType AS UACCredentialCaptureActionType OUTPUTNEW UACCredentialCaptureActionType_meaning AS UACCredentialCaptureActionType_meaning
LOOKUP-crowdstrike_ta_AppPathFlag = crowdstrike_ta_lookup_AppPathFlag AppPathFlag AS AppPathFlag OUTPUTNEW AppPathFlag_meaning AS AppPathFlag_meaning
LOOKUP-crowdstrike_ta_FirewallAction = crowdstrike_ta_lookup_FirewallAction FirewallAction AS FirewallAction OUTPUTNEW FirewallAction_meaning AS FirewallAction_meaning
LOOKUP-crowdstrike_ta_AccountStatus = crowdstrike_ta_lookup_AccountStatus AccountStatus AS AccountStatus OUTPUTNEW AccountStatus_meaning AS AccountStatus_meaning
LOOKUP-crowdstrike_ta_FileSystemOperationType = crowdstrike_ta_lookup_FileSystemOperationType FileSystemOperationType AS FileSystemOperationType OUTPUTNEW FileSystemOperationType_meaning AS FileSystemOperationType_meaning
LOOKUP-crowdstrike_ta_ExecutionPivot = crowdstrike_ta_lookup_ExecutionPivot ExecutionPivot AS ExecutionPivot OUTPUTNEW ExecutionPivot_meaning AS ExecutionPivot_meaning
LOOKUP-crowdstrike_ta_ExclusionType = crowdstrike_ta_lookup_ExclusionType ExclusionType AS ExclusionType OUTPUTNEW ExclusionType_meaning AS ExclusionType_meaning
LOOKUP-crowdstrike_ta_DcPolicyMatchMethod = crowdstrike_ta_lookup_DcPolicyMatchMethod DcPolicyMatchMethod AS DcPolicyMatchMethod OUTPUTNEW DcPolicyMatchMethod_meaning AS DcPolicyMatchMethod_meaning
LOOKUP-crowdstrike_ta_HookedPointerType = crowdstrike_ta_lookup_HookedPointerType HookedPointerType AS HookedPointerType OUTPUTNEW HookedPointerType_meaning AS HookedPointerType_meaning
LOOKUP-crowdstrike_ta_RegClassification = crowdstrike_ta_lookup_RegClassification RegClassification AS RegClassification OUTPUTNEW RegClassification_meaning AS RegClassification_meaning
LOOKUP-crowdstrike_ta_SELinuxEnforcementPolicy = crowdstrike_ta_lookup_SELinuxEnforcementPolicy SELinuxEnforcementPolicy AS SELinuxEnforcementPolicy OUTPUTNEW SELinuxEnforcementPolicy_meaning AS SELinuxEnforcementPolicy_meaning
LOOKUP-crowdstrike_ta_ConnectionHash = crowdstrike_ta_lookup_ConnectionHash ConnectionHash AS ConnectionHash OUTPUTNEW ConnectionHash_meaning AS ConnectionHash_meaning
LOOKUP-crowdstrike_ta_SEHValidationFailureFlags = crowdstrike_ta_lookup_SEHValidationFailureFlags SEHValidationFailureFlags AS SEHValidationFailureFlags OUTPUTNEW SEHValidationFailureFlags_meaning AS SEHValidationFailureFlags_meaning
LOOKUP-crowdstrike_ta_UmppcEntryReason = crowdstrike_ta_lookup_UmppcEntryReason UmppcEntryReason AS UmppcEntryReason OUTPUTNEW UmppcEntryReason_meaning AS UmppcEntryReason_meaning
LOOKUP-crowdstrike_ta_MachOSubType = crowdstrike_ta_lookup_MachOSubType MachOSubType AS MachOSubType OUTPUTNEW MachOSubType_meaning AS MachOSubType_meaning
LOOKUP-crowdstrike_ta_FalconServiceState = crowdstrike_ta_lookup_FalconServiceState FalconServiceState AS FalconServiceState OUTPUTNEW FalconServiceState_meaning AS FalconServiceState_meaning
LOOKUP-crowdstrike_ta_QuarantinedFileState = crowdstrike_ta_lookup_QuarantinedFileState QuarantinedFileState AS QuarantinedFileState OUTPUTNEW QuarantinedFileState_meaning AS QuarantinedFileState_meaning
LOOKUP-crowdstrike_ta_DeactivationErrorCode = crowdstrike_ta_lookup_DeactivationErrorCode DeactivationErrorCode AS DeactivationErrorCode OUTPUTNEW DeactivationErrorCode_meaning AS DeactivationErrorCode_meaning
LOOKUP-crowdstrike_ta_MemoryRegionProtection = crowdstrike_ta_lookup_MemoryRegionProtection MemoryRegionProtection AS MemoryRegionProtection OUTPUTNEW MemoryRegionProtection_meaning AS MemoryRegionProtection_meaning
LOOKUP-crowdstrike_ta_FirewallProfile = crowdstrike_ta_lookup_FirewallProfile FirewallProfile AS FirewallProfile OUTPUTNEW FirewallProfile_meaning AS FirewallProfile_meaning
LOOKUP-crowdstrike_ta_CreateProcessType = crowdstrike_ta_lookup_CreateProcessType CreateProcessType AS CreateProcessType OUTPUTNEW CreateProcessType_meaning AS CreateProcessType_meaning
LOOKUP-crowdstrike_ta_EtwChannelType = crowdstrike_ta_lookup_EtwChannelType EtwChannelType AS EtwChannelType OUTPUTNEW EtwChannelType_meaning AS EtwChannelType_meaning
LOOKUP-crowdstrike_ta_PayloadClassificationFlags = crowdstrike_ta_lookup_PayloadClassificationFlags PayloadClassificationFlags AS PayloadClassificationFlags OUTPUTNEW PayloadClassificationFlags_meaning AS PayloadClassificationFlags_meaning
LOOKUP-crowdstrike_ta_QueryStatus = crowdstrike_ta_lookup_QueryStatus QueryStatus AS QueryStatus OUTPUTNEW QueryStatus_meaning AS QueryStatus_meaning
LOOKUP-crowdstrike_ta_ExceptionInformation0 = crowdstrike_ta_lookup_ExceptionInformation0 ExceptionInformation0 AS ExceptionInformation0 OUTPUTNEW ExceptionInformation0_meaning AS ExceptionInformation0_meaning
LOOKUP-crowdstrike_ta_ReasonOfFunctionalityLevel = crowdstrike_ta_lookup_ReasonOfFunctionalityLevel ReasonOfFunctionalityLevel AS ReasonOfFunctionalityLevel OUTPUTNEW ReasonOfFunctionalityLevel_meaning AS ReasonOfFunctionalityLevel_meaning
LOOKUP-crowdstrike_ta_SyntheticPR2Flags = crowdstrike_ta_lookup_SyntheticPR2Flags SyntheticPR2Flags AS SyntheticPR2Flags OUTPUTNEW SyntheticPR2Flags_meaning AS SyntheticPR2Flags_meaning
LOOKUP-crowdstrike_ta_UACElevationReason = crowdstrike_ta_lookup_UACElevationReason UACElevationReason AS UACElevationReason OUTPUTNEW UACElevationReason_meaning AS UACElevationReason_meaning
LOOKUP-crowdstrike_ta_RegOperationType = crowdstrike_ta_lookup_RegOperationType RegOperationType AS RegOperationType OUTPUTNEW RegOperationType_meaning AS RegOperationType_meaning
LOOKUP-crowdstrike_ta_LinkedAuthenticationId = crowdstrike_ta_lookup_LinkedAuthenticationId LinkedAuthenticationId AS LinkedAuthenticationId OUTPUTNEW LinkedAuthenticationId_meaning AS LinkedAuthenticationId_meaning
LOOKUP-crowdstrike_ta_ConnectionDirection = crowdstrike_ta_lookup_ConnectionDirection ConnectionDirection AS ConnectionDirection OUTPUTNEW ConnectionDirection_meaning AS ConnectionDirection_meaning
LOOKUP-crowdstrike_ta_ServiceStart = crowdstrike_ta_lookup_ServiceStart ServiceStart AS ServiceStart OUTPUTNEW ServiceStart_meaning AS ServiceStart_meaning
LOOKUP-crowdstrike_ta_HIDDescriptorCountryCode = crowdstrike_ta_lookup_HIDDescriptorCountryCode HIDDescriptorCountryCode AS HIDDescriptorCountryCode OUTPUTNEW HIDDescriptorCountryCode_meaning AS HIDDescriptorCountryCode_meaning
LOOKUP-crowdstrike_ta_EndpointDescriptorAttributes = crowdstrike_ta_lookup_EndpointDescriptorAttributes EndpointDescriptorAttributes AS EndpointDescriptorAttributes OUTPUTNEW EndpointDescriptorAttributes_meaning AS EndpointDescriptorAttributes_meaning
LOOKUP-crowdstrike_ta_SignatureErrorState = crowdstrike_ta_lookup_SignatureErrorState SignatureErrorState AS SignatureErrorState OUTPUTNEW SignatureErrorState_meaning AS SignatureErrorState_meaning
LOOKUP-crowdstrike_ta_FirmwareType = crowdstrike_ta_lookup_FirmwareType FirmwareType AS FirmwareType OUTPUTNEW FirmwareType_meaning AS FirmwareType_meaning
LOOKUP-crowdstrike_ta_RequestType = crowdstrike_ta_lookup_RequestType RequestType AS RequestType OUTPUTNEW RequestType_meaning AS RequestType_meaning
LOOKUP-crowdstrike_ta_BluetoothStatus = crowdstrike_ta_lookup_BluetoothStatus BluetoothStatus AS BluetoothStatus OUTPUTNEW BluetoothStatus_meaning AS BluetoothStatus_meaning
LOOKUP-crowdstrike_ta_AndroidModuleId = crowdstrike_ta_lookup_AndroidModuleId AndroidModuleId AS AndroidModuleId OUTPUTNEW AndroidModuleId_meaning AS AndroidModuleId_meaning
LOOKUP-crowdstrike_ta_LfoUploadCloudStatus = crowdstrike_ta_lookup_LfoUploadCloudStatus LfoUploadCloudStatus AS LfoUploadCloudStatus OUTPUTNEW LfoUploadCloudStatus_meaning AS LfoUploadCloudStatus_meaning
LOOKUP-crowdstrike_ta_BatteryStatus = crowdstrike_ta_lookup_BatteryStatus BatteryStatus AS BatteryStatus OUTPUTNEW BatteryStatus_meaning AS BatteryStatus_meaning
LOOKUP-crowdstrike_ta_PtAnalysisTrigger = crowdstrike_ta_lookup_PtAnalysisTrigger PtAnalysisTrigger AS PtAnalysisTrigger OUTPUTNEW PtAnalysisTrigger_meaning AS PtAnalysisTrigger_meaning
LOOKUP-crowdstrike_ta_UserSid = crowdstrike_ta_lookup_UserSid UserSid AS UserSid OUTPUTNEW UserSid_meaning AS UserSid_meaning
LOOKUP-crowdstrike_ta_CpuVendor = crowdstrike_ta_lookup_CpuVendor CpuVendor AS CpuVendor OUTPUTNEW CpuVendor_meaning AS CpuVendor_meaning
LOOKUP-crowdstrike_ta_ServiceType = crowdstrike_ta_lookup_ServiceType ServiceType AS ServiceType OUTPUTNEW ServiceType_meaning AS ServiceType_meaning
LOOKUP-crowdstrike_ta_RegType = crowdstrike_ta_lookup_RegType RegType AS RegType OUTPUTNEW RegType_meaning AS RegType_meaning
LOOKUP-crowdstrike_ta_BootTimeFunctionalityLevel = crowdstrike_ta_lookup_BootTimeFunctionalityLevel BootTimeFunctionalityLevel AS BootTimeFunctionalityLevel OUTPUTNEW BootTimeFunctionalityLevel_meaning AS BootTimeFunctionalityLevel_meaning
LOOKUP-crowdstrike_ta_InjectedThreadFlag = crowdstrike_ta_lookup_InjectedThreadFlag InjectedThreadFlag AS InjectedThreadFlag OUTPUTNEW InjectedThreadFlag_meaning AS InjectedThreadFlag_meaning
LOOKUP-crowdstrike_ta_SystemTableIndex = crowdstrike_ta_lookup_SystemTableIndex SystemTableIndex AS SystemTableIndex OUTPUTNEW SystemTableIndex_meaning AS SystemTableIndex_meaning
LOOKUP-crowdstrike_ta_Protocol = crowdstrike_ta_lookup_Protocol Protocol AS Protocol OUTPUTNEW Protocol_meaning AS Protocol_meaning
LOOKUP-crowdstrike_ta_IntegrityLevel = crowdstrike_ta_lookup_IntegrityLevel IntegrityLevel AS IntegrityLevel OUTPUTNEW IntegrityLevel_meaning AS IntegrityLevel_meaning
LOOKUP-crowdstrike_ta_ExceptionCode = crowdstrike_ta_lookup_ExceptionCode ExceptionCode AS ExceptionCode OUTPUTNEW ExceptionCode_meaning AS ExceptionCode_meaning
LOOKUP-crowdstrike_ta_ShowWindowFlags = crowdstrike_ta_lookup_ShowWindowFlags ShowWindowFlags AS ShowWindowFlags OUTPUTNEW ShowWindowFlags_meaning AS ShowWindowFlags_meaning
LOOKUP-crowdstrike_ta_PayloadClassification = crowdstrike_ta_lookup_PayloadClassification PayloadClassification AS PayloadClassification OUTPUTNEW PayloadClassification_meaning AS PayloadClassification_meaning
LOOKUP-crowdstrike_ta_ClientId = crowdstrike_ta_lookup_ClientId ClientId AS ClientId OUTPUTNEW ClientId_meaning AS ClientId_meaning
LOOKUP-crowdstrike_ta_HookId = crowdstrike_ta_lookup_HookId HookId AS HookId OUTPUTNEW HookId_meaning AS HookId_meaning
LOOKUP-crowdstrike_ta_FileSubType = crowdstrike_ta_lookup_FileSubType FileSubType AS FileSubType OUTPUTNEW FileSubType_meaning AS FileSubType_meaning
LOOKUP-crowdstrike_ta_AmsiStatusCode = crowdstrike_ta_lookup_AmsiStatusCode AmsiStatusCode AS AmsiStatusCode OUTPUTNEW AmsiStatusCode_meaning AS AmsiStatusCode_meaning
LOOKUP-crowdstrike_ta_FsOperationClassification = crowdstrike_ta_lookup_FsOperationClassification FsOperationClassification AS FsOperationClassification OUTPUTNEW FsOperationClassification_meaning AS FsOperationClassification_meaning
LOOKUP-crowdstrike_ta_BillingType = crowdstrike_ta_lookup_BillingType BillingType AS BillingType OUTPUTNEW BillingType_meaning AS BillingType_meaning
LOOKUP-crowdstrike_ta_CSAStatus = crowdstrike_ta_lookup_CSAStatus CSAStatus AS CSAStatus OUTPUTNEW CSAStatus_meaning AS CSAStatus_meaning
LOOKUP-crowdstrike_ta_NetworkExtensionType = crowdstrike_ta_lookup_NetworkExtensionType NetworkExtensionType AS NetworkExtensionType OUTPUTNEW NetworkExtensionType_meaning AS NetworkExtensionType_meaning
LOOKUP-crowdstrike_ta_IoControlCode = crowdstrike_ta_lookup_IoControlCode IoControlCode AS IoControlCode OUTPUTNEW IoControlCode_meaning AS IoControlCode_meaning
LOOKUP-crowdstrike_ta_AndroidManifestFragmentType = crowdstrike_ta_lookup_AndroidManifestFragmentType AndroidManifestFragmentType AS AndroidManifestFragmentType OUTPUTNEW AndroidManifestFragmentType_meaning AS AndroidManifestFragmentType_meaning
LOOKUP-crowdstrike_ta_UACMSIAction = crowdstrike_ta_lookup_UACMSIAction UACMSIAction AS UACMSIAction OUTPUTNEW UACMSIAction_meaning AS UACMSIAction_meaning
LOOKUP-crowdstrike_ta_WhitelistingSource = crowdstrike_ta_lookup_WhitelistingSource WhitelistingSource AS WhitelistingSource OUTPUTNEW WhitelistingSource_meaning AS WhitelistingSource_meaning
LOOKUP-crowdstrike_ta_ScriptControlErrorCode = crowdstrike_ta_lookup_ScriptControlErrorCode ScriptControlErrorCode AS ScriptControlErrorCode OUTPUTNEW ScriptControlErrorCode_meaning AS ScriptControlErrorCode_meaning
LOOKUP-crowdstrike_ta_TokenObjectCheckType = crowdstrike_ta_lookup_TokenObjectCheckType TokenObjectCheckType AS TokenObjectCheckType OUTPUTNEW TokenObjectCheckType_meaning AS TokenObjectCheckType_meaning
LOOKUP-crowdstrike_ta_RegConfigClass = crowdstrike_ta_lookup_RegConfigClass RegConfigClass AS RegConfigClass OUTPUTNEW RegConfigClass_meaning AS RegConfigClass_meaning
LOOKUP-crowdstrike_ta_InterfaceGuid = crowdstrike_ta_lookup_InterfaceGuid InterfaceGuid AS InterfaceGuid OUTPUTNEW InterfaceGuid_meaning AS InterfaceGuid_meaning
LOOKUP-crowdstrike_ta_AppType = crowdstrike_ta_lookup_AppType AppType AS AppType OUTPUTNEW AppType_meaning AS AppType_meaning
LOOKUP-crowdstrike_ta_HttpMethod = crowdstrike_ta_lookup_HttpMethod HttpMethod AS HttpMethod OUTPUTNEW HttpMethod_meaning AS HttpMethod_meaning
LOOKUP-crowdstrike_ta_PtCompatibilityFlags = crowdstrike_ta_lookup_PtCompatibilityFlags PtCompatibilityFlags AS PtCompatibilityFlags OUTPUTNEW PtCompatibilityFlags_meaning AS PtCompatibilityFlags_meaning
LOOKUP-crowdstrike_ta_PupAdwareConfidence = crowdstrike_ta_lookup_PupAdwareConfidence PupAdwareConfidence AS PupAdwareConfidence OUTPUTNEW PupAdwareConfidence_meaning AS PupAdwareConfidence_meaning
LOOKUP-crowdstrike_ta_FileKnownStatus = crowdstrike_ta_lookup_FileKnownStatus FileKnownStatus AS FileKnownStatus OUTPUTNEW FileKnownStatus_meaning AS FileKnownStatus_meaning
LOOKUP-crowdstrike_ta_SuppressType = crowdstrike_ta_lookup_SuppressType SuppressType AS SuppressType OUTPUTNEW SuppressType_meaning AS SuppressType_meaning
LOOKUP-crowdstrike_ta_HarmfulAppCategory = crowdstrike_ta_lookup_HarmfulAppCategory HarmfulAppCategory AS HarmfulAppCategory OUTPUTNEW HarmfulAppCategory_meaning AS HarmfulAppCategory_meaning
LOOKUP-crowdstrike_ta_BlockingClassId = crowdstrike_ta_lookup_BlockingClassId BlockingClassId AS BlockingClassId OUTPUTNEW BlockingClassId_meaning AS BlockingClassId_meaning
LOOKUP-crowdstrike_ta_FileEventType = crowdstrike_ta_lookup_FileEventType FileEventType AS FileEventType OUTPUTNEW FileEventType_meaning AS FileEventType_meaning
LOOKUP-crowdstrike_ta_SuspectStackFlag = crowdstrike_ta_lookup_SuspectStackFlag SuspectStackFlag AS SuspectStackFlag OUTPUTNEW SuspectStackFlag_meaning AS SuspectStackFlag_meaning
LOOKUP-crowdstrike_ta_AuthenticationId = crowdstrike_ta_lookup_AuthenticationId AuthenticationId AS AuthenticationId OUTPUTNEW AuthenticationId_meaning AS AuthenticationId_meaning
LOOKUP-crowdstrike_ta_WellKnownTargetFunction = crowdstrike_ta_lookup_WellKnownTargetFunction WellKnownTargetFunction AS WellKnownTargetFunction OUTPUTNEW WellKnownTargetFunction_meaning AS WellKnownTargetFunction_meaning
LOOKUP-crowdstrike_ta_TokenType = crowdstrike_ta_lookup_TokenType TokenType AS TokenType OUTPUTNEW TokenType_meaning AS TokenType_meaning
LOOKUP-crowdstrike_ta_ImageSubsystem = crowdstrike_ta_lookup_ImageSubsystem ImageSubsystem AS ImageSubsystem OUTPUTNEW ImageSubsystem_meaning AS ImageSubsystem_meaning
LOOKUP-crowdstrike_ta_ImpersonationLevel = crowdstrike_ta_lookup_ImpersonationLevel ImpersonationLevel AS ImpersonationLevel OUTPUTNEW ImpersonationLevel_meaning AS ImpersonationLevel_meaning
LOOKUP-crowdstrike_ta_UserModeHookSource = crowdstrike_ta_lookup_UserModeHookSource UserModeHookSource AS UserModeHookSource OUTPUTNEW UserModeHookSource_meaning AS UserModeHookSource_meaning
LOOKUP-crowdstrike_ta_PatternHandlingErrorType = crowdstrike_ta_lookup_PatternHandlingErrorType PatternHandlingErrorType AS PatternHandlingErrorType OUTPUTNEW PatternHandlingErrorType_meaning AS PatternHandlingErrorType_meaning
LOOKUP-crowdstrike_ta_FalconServiceComponent = crowdstrike_ta_lookup_FalconServiceComponent FalconServiceComponent AS FalconServiceComponent OUTPUTNEW FalconServiceComponent_meaning AS FalconServiceComponent_meaning
LOOKUP-crowdstrike_ta_RegTamperType = crowdstrike_ta_lookup_RegTamperType RegTamperType AS RegTamperType OUTPUTNEW RegTamperType_meaning AS RegTamperType_meaning
LOOKUP-crowdstrike_ta_AccessoryConnectionType = crowdstrike_ta_lookup_AccessoryConnectionType AccessoryConnectionType AS AccessoryConnectionType OUTPUTNEW AccessoryConnectionType_meaning AS AccessoryConnectionType_meaning
LOOKUP-crowdstrike_ta_AllocationType = crowdstrike_ta_lookup_AllocationType AllocationType AS AllocationType OUTPUTNEW AllocationType_meaning AS AllocationType_meaning
LOOKUP-crowdstrike_ta_DeviceConnectionStatus = crowdstrike_ta_lookup_DeviceConnectionStatus DeviceConnectionStatus AS DeviceConnectionStatus OUTPUTNEW DeviceConnectionStatus_meaning AS DeviceConnectionStatus_meaning
LOOKUP-crowdstrike_ta_VnodeModificationType = crowdstrike_ta_lookup_VnodeModificationType VnodeModificationType AS VnodeModificationType OUTPUTNEW VnodeModificationType_meaning AS VnodeModificationType_meaning
LOOKUP-crowdstrike_ta_ThreadExecutionControlType = crowdstrike_ta_lookup_ThreadExecutionControlType ThreadExecutionControlType AS ThreadExecutionControlType OUTPUTNEW ThreadExecutionControlType_meaning AS ThreadExecutionControlType_meaning
LOOKUP-crowdstrike_ta_ServiceServiceSidType = crowdstrike_ta_lookup_ServiceServiceSidType ServiceServiceSidType AS ServiceServiceSidType OUTPUTNEW ServiceServiceSidType_meaning AS ServiceServiceSidType_meaning
LOOKUP-crowdstrike_ta_cim_dest = crowdstrike_ta_host_resolution_lookup aid AS dest_aid OUTPUT ComputerName AS dest
LOOKUP-crowdstrike_ta_cim_dvc = crowdstrike_ta_host_resolution_lookup aid AS dvc_aid OUTPUT ComputerName AS dvc
LOOKUP-crowdstrike_ta_cim_src = crowdstrike_ta_host_resolution_lookup aid AS src_aid OUTPUT ComputerName AS src
LOOKUP-crowdstrike_ta_cim_dest_host = crowdstrike_ta_host_resolution_lookup aid AS dest_host_aid OUTPUT ComputerName AS dest_host

# identity field for user resolution to be handled by SES Asset & Identity
FIELDALIAS-ses_ai_identity = UserSid AS identity

# CIM mapping fiesld extractions
EXTRACT-crowdstrike_ta_serial = [^0-9a-f]+(?<serial>[0-9a-f]+(?:-[0-9a-f]+){4})\s+ in BootArgs

EVAL-dvc = case(event_simpleName IN ("SensitiveWmiQuery", "NewExecutableRenamed", "FileRenameInfo", "UserLogoff", "InstalledApplication", "CriticalEnvironmentVariableChanged"), \
                coalesce(device_hostname, aid_computer_name))
EVAL-dvc_aid = case(isnull(device_hostname) AND isnull(aid_computer_name) AND event_simpleName IN ("ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "AsepValueUpdate", "AsepKeyUpdate", "SensitiveWmiQuery", "NewExecutableRenamed", "HostedServiceStarted", "ModifyServiceBinary", "CreateService", "ScheduledTaskRegistered", "RarFileWritten", "ELFFileWritten", "FileRenameInfo", "UserIdentity", "ServiceStarted", "OsVersionInfo", "QuarantinedFile", "QuarantinedFileState", "UserLogoff", "UserLogonFailed", "UserLogonFailed2", "ProcessRollup2", "ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "CommandHistory", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "CriticalFileAccessed", "NewScriptWritten", "PeVersionInfo", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "FileCreateInfo", "InstalledApplication", "InstanceMetadata", "KernelModeLoadImage", "HostInfo", "ProcessRollup2Stats", "LFODownloadConfirmation", "SystemCapacity", "CriticalEnvironmentVariableChanged"),  aid)
EVAL-process_integrity_level=case(event_simpleName IN ("ProcessRollup2", "SyntheticProcessRollup2", "EndOfProcess", "ImageHash", "CommandHistory", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule"), IntegrityLevel)

LOOKUP-crowdstrike_ta_resolve_transport = crowdstrike_ta_lookup_Protocol Protocol AS Protocol OUTPUT Protocol_lc_meaning AS transport
LOOKUP-crowdstrike_ta_process_integrity_level = crowdstrike_ta_lookup_IntegrityLevel IntegrityLevel AS process_integrity_level OUTPUT IntegrityLevel_lc_meaning AS process_integrity_level

EVAL-action = case( event_simpleName IN ("FileRenameInfo", "NewExecutableRenamed", "CriticalEnvironmentVariableChanged"), "modified", \
        event_simpleName="UserLogoff", "logoff", \
        event_simpleName="UserLogon", "success", \
        event_simpleName IN ("UserLogonFailed", "UserLogonFailed2"), "failure", \
        event_simpleName IN ("ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "CommandHistory", "PrivilegedProcessHandleFromUnsignedModule", "ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "KernelModeLoadImage", "ProcessRollup2Stats"), "allowed", \
        event_simpleName IN ("ProcessBlocked", "QuarantinedFile", "QuarantinedFileState"), "blocked", \
        event_simpleName IN ("FileCreateInfo", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "NewScriptWritten", "PackedExecutableWritten", "ELFFileWritten", "RarFileWritten", "AsepKeyUpdate", "InstalledApplication", "LFODownloadConfirmation", "DmpFileWritten"), "created", \
        event_simpleName="PeVersionInfo", "information", \
        event_simpleName="ExecutableDeleted", "deleted", \
        event_simpleName="AsepValueUpdate", case(like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_DELETE_VALUE_KEY"), "deleted", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_SET_VALUE_KEY"), "modified", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_CREATE_KEY"), "created", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_DELETE_KEY"), "deleted", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_SET_KEY_SECURITY"), "modified", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_LOAD_KEY"), "read", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_RENAME_KEY"), "modified", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_OPEN_KEY"), "read", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_QUERY_NAME_KEY"), "read", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_SET_VALUE_KEY_ANTI_TAMPER"), "modified", \
                                                like(json_extract(lookup("crowdstrike_ta_lookup_RegOperationType", json_object("RegOperationType", RegOperationType), json_array("RegOperationType_meaning")), "RegOperationType_meaning"), "REG_DELETE_VALUE_KEY_ANTI_TAMPER"), "deleted"), \
        event_simpleName IN ("FileOpenInfo", "CriticalFileAccessed", "SensitiveWmiQuery", "RemovableMediaVolumeMounted", "FsVolumeMounted"), "read")

EVAL-additional_answer_count = case(event_simpleName="DnsRequest", "0")
EVAL-answer = case(event_simpleName="DnsRequest", if(isnull(IP4Records) AND isnull(IP6Records) ,null(), mvindex(split(coalesce(IP4Records, "")+coalesce(IP6Records, ""), ";"), 0, -2)))
EVAL-answer_count = case(event_simpleName="DnsRequest", if(isnull(IP4Records) AND isnull(IP6Records), 0, mvcount(split(coalesce(IP4Records, "")+coalesce(IP6Records, ""), ";"))-1))
EVAL-app = case(event_simpleName IN ("UserLogon","UserLogonFailed","UserLogonFailed2"), lower(event_platform)+if(UserLogonFlags IN ("4", "8", "12"), ":local", ""), event_simpleName IN ("AssociateIndicator", "ScriptControlScanInfo", "ScriptControlDetectInfo"), "CrowdStrike FDR")
EVAL-authentication_method = case(event_simpleName IN ("UserLogon", "UserLogonFailed2"), LogonType)
EVAL-category = case(event_simpleName IN ("QuarantinedFile", "QuarantinedFileState"), "quarantine")
EVAL-change_type = case(event_simpleName IN ("SensitiveWmiQuery", "NewExecutableRenamed", "FileRenameInfo") AND event_platform="Win", "Filesystem", event_simpleName="UserLogoff", "AAA", event_simpleName IN ("InstalledApplication", "CriticalEnvironmentVariableChanged"), "Filesystem")
EVAL-creation_time = case(event_simpleName IN ("NetworkConnectIP4", "NetworkListenIP4", "NetworkCloseIP4", "NetworkCloseIP6", "NetworkConnectIP6", "NetworkListenIP6", "NetworkReceiveAcceptIP4", "NetworkReceiveAcceptIP6"), ContextTimeStamp)
EVAL-command = case(event_simpleName IN ("SensitiveWmiQuery"), WmiQuery)
EVAL-cpu_cores = case(event_simpleName="SystemCapacity", PhysicalCoreCount)
EVAL-cpu_count = case(event_simpleName="SystemCapacity", PhysicalCoreCount)
EVAL-cpu_mhz = case(event_simpleName="SystemCapacity", CpuClockSpeed)
EVAL-date = case(event_simpleName="QuarantinedFile", timestamp, event_simpleName="QuarantinedFileState", ContextTimeStamp)
EVAL-description = case(event_simpleName="UserIdentity", "user is logged on", event_simpleName="OsVersionInfo", "operating system", event_simpleName="LocalIpAddressIP4", "new IPv4 network address", event_simpleName="LocalIpAddressIP6", "new IPv6 network address", event_simpleName IN ("AssociateIndicator", "ScriptControlScanInfo", "ScriptControlDetectInfo"), event_simpleName, event_simpleName="ScheduledTaskRegistered", "Periodic scan task")

EVAL-dest = case(event_simpleName IN ("ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "AsepValueUpdate", "AsepKeyUpdate", "SensitiveWmiQuery", "NewExecutableRenamed", "HostedServiceStarted", "ModifyServiceBinary", "CreateService", "ScheduledTaskRegistered", "RarFileWritten", "ELFFileWritten", "FileRenameInfo", "UserIdentity", "ServiceStarted", "OsVersionInfo", "QuarantinedFile", "QuarantinedFileState", "UserLogoff", "UserLogonFailed", "UserLogonFailed2", "ProcessRollup2", "ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "CommandHistory", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "CriticalFileAccessed", "NewScriptWritten", "PeVersionInfo", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "FileCreateInfo", "InstalledApplication", "InstanceMetadata", "KernelModeLoadImage", "HostInfo", "ProcessRollup2Stats", "LFODownloadConfirmation", "SystemCapacity", "CriticalEnvironmentVariableChanged", "AssociateIndicator", "RemovableMediaVolumeMounted", "FsVolumeMounted", "ScriptControlDetectInfo", "ScriptControlScanInfo", "DmpFileWritten"), coalesce(device_hostname, aid_computer_name), \
        event_simpleName IN ("LocalIpAddressIP4", "NetworkListenIP4", "NetworkReceiveAcceptIP4"), LocalAddressIP4, \
        event_simpleName IN ("LocalIpAddressIP6", "NetworkListenIP6", "NetworkReceiveAcceptIP6"), LocalAddressIP6, \
        event_simpleName IN ("NetworkConnectIP4", "NetworkCloseIP4"), RemoteAddressIP4, \
        event_simpleName IN ("NetworkCloseIP6", "NetworkConnectIP6"), RemoteAddressIP6, \
        event_simpleName="UserLogon", if(LogonServer="", null(), LogonServer), \
        event_simpleName="DnsRequest", RespondingDnsServer)
EVAL-dest_aid = case(isnull(device_hostname) AND isnull(aid_computer_name) AND event_simpleName IN ("ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "AsepValueUpdate", "AsepKeyUpdate", "SensitiveWmiQuery", "NewExecutableRenamed", "HostedServiceStarted", "ModifyServiceBinary", "CreateService", "ScheduledTaskRegistered", "RarFileWritten", "ELFFileWritten", "FileRenameInfo", "UserIdentity", "ServiceStarted", "OsVersionInfo", "QuarantinedFile", "QuarantinedFileState", "UserLogoff", "UserLogonFailed", "UserLogonFailed2", "ProcessRollup2", "ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "CommandHistory", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "CriticalFileAccessed", "NewScriptWritten", "PeVersionInfo", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "FileCreateInfo", "InstalledApplication", "InstanceMetadata", "KernelModeLoadImage", "HostInfo", "ProcessRollup2Stats", "LFODownloadConfirmation", "SystemCapacity", "CriticalEnvironmentVariableChanged", "AssociateIndicator", "RemovableMediaVolumeMounted", "FsVolumeMounted", "ScriptControlDetectInfo", "ScriptControlScanInfo", "DmpFileWritten"),  aid)
EVAL-dest_host = case(event_simpleName IN ("LocalIpAddressIP4", "LocalIpAddressIP6"), coalesce(device_hostname, aid_computer_name))
EVAL-dest_host_aid = case(isnull(device_hostname) AND isnull(aid_computer_name) AND event_simpleName IN ("LocalIpAddressIP4", "LocalIpAddressIP6"),  aid)
EVAL-dest_ip = case(event_simpleName IN ("ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "AsepValueUpdate", "AsepKeyUpdate", "SensitiveWmiQuery", "NewExecutableRenamed", "HostedServiceStarted", "ModifyServiceBinary", "CreateService", "ScheduledTaskRegistered", "CriticalFileAccessed", "RemovableMediaVolumeMounted", "ScriptControlScanInfo", "ScriptControlDetectInfo", "UserLogonFailed2"), aip)
EVAL-dest_name = case(event_simpleName IN ("SensitiveWmiQuery"), ClientComputerName)
EVAL-dest_nt_domain = case(event_simpleName IN ("UserLogon", "UserLogoff"), LogonDomain)
EVAL-dest_port = case(event_simpleName IN ("NetworkConnectIP4", "NetworkCloseIP4", "NetworkCloseIP6", "NetworkConnectIP6"), RemotePort, \
        event_simpleName IN ("NetworkListenIP4", "NetworkListenIP6", "NetworkReceiveAcceptIP4", "NetworkReceiveAcceptIP6"), LocalPort)
EVAL-enabled = case(event_simpleName IN ("OsVersionInfo", "LocalIpAddressIP4", "LocalIpAddressIP6", "InstanceMetadata", "HostInfo", "UserIdentity"), "true")
EVAL-family = case(event_simpleName="OsVersionInfo" AND event_platform="Lin", case(event_simpleName="OsVersionInfo" AND event_platform="Lin", mvindex(split(OSVersionString, " "), -1)), event_simpleName="InstanceMetadata", json_extract(InstanceMetadata,"architecture"), event_simpleName="SystemCapacity", CpuProcessorName)
EVAL-file_access_time = case(event_simpleName IN ("RarFileWritten", "ELFFileWritten", "FileCreateInfo", "FileRenameInfo", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "NewScriptWritten", "ExecutableDeleted", "FileOpenInfo", "CriticalFileAccessed", "RemovableMediaVolumeMounted", "FsVolumeMounted"), ContextTimeStamp, event_simpleName IN ("PackedExecutableWritten"), timestamp/1000, event_simpleName IN ("PeVersionInfo"), timestamp)
EVAL-file_create_time = case(event_simpleName IN ("RarFileWritten", "ELFFileWritten", "FileCreateInfo", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "NewScriptWritten", "DmpFileWritten"), ContextTimeStamp, event_simpleName IN ("PackedExecutableWritten"), timestamp/1000)
EVAL-file_hash = case(event_simpleName IN ("ELFFileWritten", "QuarantinedFile", "QuarantinedFileState", "PeFileWritten", "PeVersionInfo", "PackedExecutableWritten", "NewExecutableWritten"), SHA256HashData, event_simpleName="ExecutableDeleted", FileIdentifier, event_simpleName="NewScriptWritten" AND event_platform="Win", FileIdentifier, event_simpleName="NewScriptWritten" AND event_platform IN ("Mac", "Lin"), SHA256HashData)

EVAL-file_modify_time = case(event_simpleName IN ("FileCreateInfo", "FileRenameInfo", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "NewScriptWritten", "ExecutableDeleted", "FileOpenInfo"), ContextTimeStamp, \
        event_simpleName IN ("PackedExecutableWritten"), timestamp/1000)

EVAL-file_name = case(event_simpleName IN ("QuarantinedFile", "QuarantinedFileState", "PeVersionInfo"), mvindex(split(ImageFileName, if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName IN ("RemovableMediaVolumeMounted", "FsVolumeMounted"), mvindex(split(VolumeName, if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName="LFODownloadConfirmation", TargetFileName, \
        event_simpleName IN ("RarFileWritten", "ELFFileWritten", "FileRenameInfo", "NewExecutableWritten", "DirectoryCreate", "CriticalFileAccessed", "NewScriptWritten", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "FileCreateInfo", "PeFileWritten", "DmpFileWritten"), mvindex(split(TargetFileName, if(event_platform="Win", "\\", "/")), -1))

EVAL-file_path = case(event_simpleName IN ("RemovableMediaVolumeMounted", "FsVolumeMounted"), VolumeName, event_platform="Win", \
        case(event_simpleName IN ("PeVersionInfo", "QuarantinedFile"), ImageFileName, \
        event_simpleName IN ("QuarantinedFileState"), QuarantinedFileName, \
        event_simpleName IN ("RarFileWritten", "ELFFileWritten", "FileCreateInfo", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "NewScriptWritten", "PackedExecutableWritten", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "DmpFileWritten"), TargetFileName), \
    event_simpleName="LFODownloadConfirmation", DownloadPath, \
    event_platform IN ("Mac", "Lin"), case(event_simpleName IN("CriticalFileAccessed", "DirectoryCreate", "ExecutableDeleted", "NewExecutableWritten", "NewScriptWritten", "PeFileWritten", "FileOpenInfo"), TargetFileName))

EVAL-file_size = case(event_simpleName IN ("PeFileWritten", "NewScriptWritten", "NewExecutableWritten"), round(Size/1000), event_simpleName="DmpFileWritten", round(Size/1000))
EVAL-interface = case(event_simpleName IN ("LocalIpAddressIP4", "LocalIpAddressIP6"), InterfaceAlias)
EVAL-ip = case(event_simpleName="LocalIpAddressIP4", LocalAddressIP4, event_simpleName="LocalIpAddressIP6", LocalAddressIP6)
EVAL-mac = case(event_simpleName IN ("LocalIpAddressIP4", "LocalIpAddressIP6"), if(PhysicalAddress="", null(), PhysicalAddress))
EVAL-message_type = case(event_simpleName="DnsRequest", "Query")

EVAL-object = case(event_simpleName="FileRenameInfo", TargetFileName, \
        event_simpleName="UserLogoff", UserName, \
        event_simpleName="InstalledApplication", AppName, \
        event_simpleName="CriticalEnvironmentVariableChanged", EnvironmentVariableName, \
        event_simpleName IN ("NewExecutableRenamed"), SourceFileName, \
        event_simpleName IN ("SensitiveWmiQuery"), ClientComputerName)

EVAL-object_attrs = case(event_simpleName="FileRenameInfo", "file name", event_simpleName IN ("SensitiveWmiQuery"), event_platform, event_simpleName="InstalledApplication", AppVersion, event_simpleName="CriticalEnvironmentVariableChanged", EnvironmentVariableValue, event_simpleName="UserLogoff", "login session")

EVAL-object_category = case(event_simpleName="FileRenameInfo", "file", \
        event_simpleName="UserLogoff", "user", \
        event_simpleName="InstalledApplication", "application", \
        event_simpleName="CriticalEnvironmentVariableChanged", EnvironmentVariableName, \
        event_simpleName IN ("SensitiveWmiQuery"), "OS")

EVAL-object_id = case(event_platform IN ("Win","Mac", "Lin"), case(event_simpleName="UserLogoff", coalesce(UserSid, UID)))
EVAL-object_path = case(event_platform="Win", case(event_simpleName IN ("NewExecutableRenamed", "FileRenameInfo"), SourceFileName, \
        event_simpleName IN ("SensitiveWmiQuery"), WmiNamespaceName))
EVAL-original_file_name = case(event_simpleName="PeVersionInfo", OriginalFilename)
EVAL-os = case(event_simpleName IN ("ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "OsVersionInfo", "ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "CommandHistory", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "KernelModeLoadImage", "HostInfo", "ProcessRollup2Stats"), if(event_platform="Mac", "MacOS", coalesce(aid_os_version, event_platform)))
EVAL-parent_process_exec = case(event_simpleName IN ("ProcessRollup2", "ProcessBlocked"), ParentBaseFileName)
EVAL-parent_process_id = case(event_simpleName IN ("ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ProcessBlocked", "ProcessRollup2Stats"), ParentProcessId)
EVAL-parent_process_name = case(event_simpleName IN ("ProcessRollup2", "ProcessBlocked"), ParentBaseFileName)

EVAL-process = case(event_simpleName IN ("WmiCreateProcess", "ScreenshotTakenEtw", "ProcessRollup2", "SyntheticProcessRollup2", "ProcessBlocked", "ProcessRollup2Stats"), replace(trim(CommandLine, " "), "\"", ""), \
        event_simpleName IN ("ImageHash", "PrivilegedProcessHandleFromUnsignedModule"), ImageFileName, \
        event_simpleName="KernelModeLoadImage", mvindex(split(ImageFileName, if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName="CommandHistory", CommandHistory)

EVAL-process_exec = case(event_simpleName IN ("WmiCreateProcess", "DriverLoad", "ScreenshotTakenEtw", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "ImageHash", "ProcessRollup2", "SyntheticProcessRollup2"), mvindex(split(ImageFileName, if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName="ProcessRollup2Stats", mvindex(split(CommandLine, if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName="CommandHistory", mvindex(split(mvindex(split(CommandHistory, "¶"),0), if(event_platform="Win", "\\", "/")), -1))
EVAL-process_guid = case(event_simpleName="RemovableMediaVolumeMounted", VolumeSessionUUID, event_simpleName="NewExecutableWritten", id)
EVAL-process_hash = case(event_simpleName IN ("ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "KernelModeLoadImage", "ProcessRollup2Stats"), SHA256HashData)

EVAL-process_id = case(event_simpleName IN ("InjectedThread", "WmiCreateProcess", "ServiceStarted", "ProcessRollup2", "SyntheticProcessRollup2", "CommandHistory", "ProcessBlocked", "PeVersionInfo"), TargetProcessId, \
        event_simpleName IN ("ScreenshotTakenEtw", "DriverLoad", "AsepValueUpdate", "AsepKeyUpdate", "ModifyServiceBinary", "CreateService", "RarFileWritten", "ELFFileWritten", "NetworkConnectIP4", "NetworkListenIP4", "NetworkCloseIP4", "NetworkCloseIP6", "NetworkConnectIP6", "NetworkListenIP6", "NetworkReceiveAcceptIP4", "NetworkReceiveAcceptIP6", "EndOfProcess", "ImageHash", "PrivilegedProcessHandleFromUnsignedModule", "FileCreateInfo", "FileRenameInfo", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "CriticalFileAccessed", "NewScriptWritten", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "KernelModeLoadImage", "DmpFileWritten", "RemovableMediaVolumeMounted", "FsVolumeMounted"), ContextProcessId, \
        event_simpleName IN ("ScheduledTaskRegistered"), RpcClientProcessId)

EVAL-process_name=case(event_simpleName IN ("ProcessRollup2", "SyntheticProcessRollup2", "ProcessBlocked"), mvindex(split(if(like(CommandLine, "\"%\"%"), mvindex(split(CommandLine, "\""), 1), mvindex(split(CommandLine, " "), 0)), if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName IN ("WmiCreateProcess", "DriverLoad", "ScreenshotTakenEtw", "ImageHash", "PrivilegedProcessHandleFromUnsignedModule", "KernelModeLoadImage"), mvindex(split(ImageFileName, if(event_platform="Win", "\\", "/")), -1), \
        event_simpleName="CommandHistory", mvindex(split(CommandHistory, " "), 0))

EVAL-process_path = case(event_simpleName IN ("ProcessRollup2", "SyntheticProcessRollup2", "ProcessBlocked"), if(event_platform="Win", if(substr(CommandLine, 1, 1)="\"", mvindex(split(CommandLine, "\""), 1), mvindex(split(CommandLine, " "), 0)), ImageFileName), \
        event_simpleName IN ("WmiCreateProcess", "DriverLoad", "ScreenshotTakenEtw", "ImageHash", "PrivilegedProcessHandleFromUnsignedModule", "KernelModeLoadImage"), ImageFileName, \
        event_simpleName="ProcessRollup2Stats", CommandLine)

EVAL-query = case(event_simpleName="DnsRequest", DomainName)
EVAL-query_count = case(event_simpleName="DnsRequest", DnsRequestCount)
EVAL-query_type = case(event_simpleName="DnsRequest", json_extract(lookup("crowdstrike_ta_lookup_RequestType", json_object("RequestType", RequestType), json_array("RequestType_meaning")), "RequestType_meaning"))
EVAL-reason = case(event_simpleName="UserLogon", "success", event_simpleName IN ("UserLogonFailed", "UserLogonFailed2"), "failure")
EVAL-record_type = case(event_simpleName="DnsRequest", case(isnotnull(IP6Records), "AAAA", isnotnull(IP4Records), "A"))
EVAL-reply_code = case(event_simpleName="DnsRequest", json_extract(lookup("crowdstrike_ta_lookup_QueryStatus", json_object("QueryStatus", QueryStatus), json_array("QueryStatus_code")), "QueryStatus_code"))
EVAL-reply_code_id = case(event_simpleName="DnsRequest", QueryStatus)
EVAL-result = case(event_simpleName IN ("NewExecutableRenamed"), "NewExecutableRenamed", \
        event_simpleName="CriticalEnvironmentVariableChanged", "CriticalEnvironmentVariableChanged", \
        event_simpleName="InstalledApplication", "InstalledApplication", \
        event_simpleName="UserLogoff", event_simpleName, \
        event_simpleName IN ("SensitiveWmiQuery"), "SensitiveWmiQuery")
EVAL-result_id = case(event_simpleName="UserLogoff", AuthenticationId)
EVAL-registry_hive = case(event_simpleName IN ("AsepKeyUpdate", "AsepValueUpdate"), \
        case(like(RegObjectName, "\\REGISTRY\\MACHINE\\SAM\\%"), "HKEY_LOCAL_MACHINE\\SAM", \
             like(RegObjectName, "\\REGISTRY\\MACHINE\\SECURITY\\%"), "HKEY_LOCAL_MACHINE\\Security", \
             like(RegObjectName, "\\REGISTRY\\MACHINE\\SOFTWARE\\%"), "HKEY_LOCAL_MACHINE\\Software", \
             like(RegObjectName, "\\REGISTRY\\MACHINE\\SYSTEM\\%"), "HKEY_LOCAL_MACHINE\\System", \
             like(RegObjectName, "\\REGISTRY\\CONFIG\\%"), "HKEY_CURRENT_CONFIG", \
             like(RegObjectName, "\\REGISTRY\\USER\\.DEFAULT\\%"), "HKEY_CURRENT_USER\\.DEFAULT", \
             like(RegObjectName, "\\REGISTRY\\USER\\%"), "HKEY_CURRENT_USER"))

EVAL-registry_path = case(event_simpleName IN ("AsepValueUpdate", "AsepKeyUpdate"), RegObjectName)
EVAL-registry_value_data = case(event_simpleName IN ("AsepValueUpdate"), if(RegStringValue="", null(), RegStringValue))
EVAL-registry_value_name = case(event_simpleName IN ("AsepValueUpdate", "AsepKeyUpdate"), RegObjectName)
EVAL-registry_value_type = case(event_simpleName="AsepValueUpdate", json_extract(lookup("crowdstrike_ta_lookup_RegType", json_object("RegType", RegType), json_array("RegType_meaning")), "RegType_meaning"), event_simpleName="AsepKeyUpdate", "REG_BINARY")
EVAL-serial = case(event_simpleName="InstanceMetadata", json_extract(InstanceMetadata,"instanceId"), event_simpleName="HostInfo", mvindex(split(BootArgs, "="), -1), true(), serial)
EVAL-service = case(event_simpleName IN ("HostedServiceStarted", "ServiceStarted") AND event_platform="Win", ServiceDisplayName, \
    event_simpleName IN ("ScheduledTaskRegistered") AND event_platform="Win", mvindex(split(TaskExecCommand, if(event_platform="Win", "\\", "/")), -1), \
    event_simpleName IN ("ModifyServiceBinary", "CreateService") AND event_platform="Win", mvindex(split(ServiceImagePath, if(event_platform="Win", "\\", "/")), -1))
EVAL-service_exec = case(event_simpleName IN ("HostedServiceStarted", "ServiceStarted"), mvindex(split(ImageFileName, if(event_platform="Win", "\\", "/")), -1), \
    event_simpleName IN ("ScheduledTaskRegistered") AND event_platform="Win", mvindex(split(TaskExecCommand, if(event_platform="Win", "\\", "/")), -1), \
    event_simpleName IN ("ModifyServiceBinary", "CreateService") AND event_platform="Win", mvindex(split(ServiceImagePath, if(event_platform="Win", "\\", "/")), -1))
EVAL-service_name = case(event_simpleName IN ("HostedServiceStarted", "ServiceStarted") AND event_platform="Win", ServiceDisplayName, \
    event_simpleName IN ("ScheduledTaskRegistered"), mvindex(split(TaskExecCommand, if(event_platform="Win", "\\", "/")), -1), \
    event_simpleName IN ("ModifyServiceBinary", "CreateService") AND event_platform="Win", mvindex(split(ServiceImagePath, if(event_platform="Win", "\\", "/")), -1))
EVAL-service_path = case(event_simpleName="ServiceStarted" AND event_platform="Win", mvindex(split(CommandLine, " "), 0), \
    event_simpleName IN ("ScheduledTaskRegistered") AND event_platform="Win", TaskExecCommand, \
    event_simpleName IN ("ModifyServiceBinary", "CreateService") AND event_platform="Win",  ServiceImagePath, \
    event_simpleName IN ("HostedServiceStarted") AND event_platform="Win",  ImageFileName)
EVAL-severity=case(event_simpleName IN ("QuarantinedFileState", "QuarantinedFile"), "informational")
EVAL-signature=case(event_simpleName IN ("DnsRequest", "AssociateIndicator", "ScriptControlScanInfo", "ScriptControlDetectInfo"), name)
EVAL-signature_id = case(event_simpleName="QuarantinedFile" AND event_platform="Win", PatternId)

EVAL-src = case(event_simpleName IN ("FileRenameInfo", "UserLogoff", "UserLogonFailed", "DnsRequest", "InstalledApplication", "CriticalEnvironmentVariableChanged", "UserLogon", "AssociateIndicator", "ScriptControlDetectInfo", "ScriptControlScanInfo"), coalesce(device_hostname, aid_computer_name), \
    event_simpleName IN ("UserLogonFailed2"), ClientComputerName, \
    event_simpleName IN ("NetworkConnectIP4", "NetworkCloseIP4"), LocalAddressIP4, \
    event_simpleName IN ("NetworkCloseIP6", "NetworkConnectIP6"), LocalAddressIP6, \
    event_simpleName IN ("NetworkListenIP4", "NetworkReceiveAcceptIP4"), RemoteAddressIP4, \
    event_simpleName IN ("NetworkListenIP6", "NetworkReceiveAcceptIP6"), RemoteAddressIP6)
EVAL-src_aid = case(isnull(device_hostname) AND isnull(aid_computer_name) AND event_simpleName IN ("ScreenshotTakenEtw", "WmiCreateProcess", "InjectedThread", "DriverLoad", "AsepValueUpdate", "AsepKeyUpdate", "SensitiveWmiQuery", "NewExecutableRenamed", "HostedServiceStarted", "ModifyServiceBinary", "CreateService", "ScheduledTaskRegistered", "RarFileWritten", "ELFFileWritten", "FileRenameInfo", "UserIdentity", "ServiceStarted", "OsVersionInfo", "QuarantinedFile", "QuarantinedFileState", "UserLogoff", "UserLogonFailed", "UserLogonFailed2", "ProcessRollup2", "ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2", "ImageHash", "CommandHistory", "ProcessBlocked", "PrivilegedProcessHandleFromUnsignedModule", "NewExecutableWritten", "PeFileWritten", "DirectoryCreate", "CriticalFileAccessed", "NewScriptWritten", "PeVersionInfo", "PackedExecutableWritten", "ExecutableDeleted", "FileOpenInfo", "FileCreateInfo", "InstalledApplication", "InstanceMetadata", "KernelModeLoadImage", "HostInfo", "ProcessRollup2Stats", "LFODownloadConfirmation", "SystemCapacity", "CriticalEnvironmentVariableChanged", "DnsRequest", "AssociateIndicator", "ScriptControlDetectInfo", "ScriptControlScanInfo"),  aid, \
                    isnull(device_hostname) AND isnull(aid_computer_name) AND event_simpleName IN  ("UserLogon") AND event_platform IN ("Mac", "Lin", "Win"), aid)
EVAL-src_ip = case(event_simpleName IN ("LocalIpAddressIP4", "LocalIpAddressIP6", "UserLogon", "ScriptControlDetectInfo", "ScriptControlScanInfo", "UserLogonFailed2"), aip)
EVAL-src_nt_domain = case(event_simpleName IN ("UserLogon", "UserLogoff"), LogonDomain)
EVAL-src_port = case(event_simpleName IN ("NetworkConnectIP4", "NetworkCloseIP4", "NetworkCloseIP6", "NetworkConnectIP6"), LocalPort, \
        event_simpleName IN ("NetworkListenIP4", "NetworkListenIP6", "NetworkReceiveAcceptIP4", "NetworkReceiveAcceptIP6"), RemotePort)
EVAL-src_user = case(event_simpleName="UserLogoff", coalesce(UserSid, UID))
EVAL-src_user_id = case(event_simpleName IN ("UserLogon", "UserLogonFailed"), UserSid)
EVAL-src_user_name = case(event_simpleName="UserLogoff", UserName)

EVAL-state = case(event_simpleName IN ("NetworkCloseIP6", "NetworkCloseIP4"), "closed", \
    event_simpleName IN ("NetworkConnectIP4", "NetworkConnectIP6", "NetworkReceiveAcceptIP4", "NetworkReceiveAcceptIP6"), if(Protocol="6", "established", "open"), \
    event_simpleName IN ("NetworkListenIP4", "NetworkListenIP6"), "listening", \
    event_simpleName IN ("NetworkCloseIP4", "NetworkCloseIP6"), "closed")

EVAL-status = case(event_simpleName = "UserIdentity", "logged on", \
    event_simpleName IN ("HostedServiceStarted", "ModifyServiceBinary", "CreateService", "ServiceStarted", "ScheduledTaskRegistered") AND event_platform = "Win", "started", \
    event_simpleName IN ("AsepValueUpdate", "AsepKeyUpdate", "SensitiveWmiQuery", "NewExecutableRenamed", "UserLogoff", "FileRenameInfo", "CriticalEnvironmentVariableChanged", "InstalledApplication"), "success")
EVAL-type = case(event_simpleName="ScriptControlScanInfo", "event", event_simpleName IN ("ScriptControlDetectInfo", "AssociateIndicator"), "alert")
EVAL-version = case(event_simpleName = "OsVersionInfo" AND event_platform != "Win", OSVersionString, event_simpleName = "OsVersionInfo" AND event_platform = "Win", ProductName, event_simpleName="InstanceMetadata", json_extract(InstanceMetadata,"version"))
EVAL-vendor_product = "CrowdStrike FDR"
EVAL-vendor_account = case(event_simpleName IN ("UserLogon", "UserLogonFailed", "UserLogonFailed2"), "CrowdStrike FDR")
EVAL-url_domain = case(event_simpleName="LFODownloadConfirmation", DownloadServer)
EVAL-user_name = case(event_simpleName = "UserLogoff", UserName)
EVAL-user_id = case(event_simpleName IN ("UserIdentity","UserLogon","UserLogonFailed","UserLogonFailed2","UserLogoff","ProcessRollup2", "EndOfProcess", "SyntheticProcessRollup2","ImageHash_Win","CommandHistory","ProcessBlocked","PrivilegedProcessHandleFromUnsignedModule","FileRenameInfo"), coalesce(UserSid, UID), event_simpleName="PeFileWritten", FileOperatorSid)

EVAL-user = case(event_simpleName = "PeFileWritten", UserName, \
    event_simpleName = "UserLogon", coalesce(if(UserPrincipal="", UserName, UserPrincipal), UserName), \
    event_simpleName IN ("SensitiveWmiQuery", "HostedServiceStarted", "CreateService", "ScheduledTaskRegistered", "WmiCreateProcess", "ScreenshotTakenEtw", "UserIdentity","ServiceStarted","UserLogonFailed","UserLogonFailed2","NewScriptWritten"), if(UserName="", null(), UserName), \
    event_simpleName IN ("UserLogoff","ProcessRollup2","EndOfProcess","SyntheticProcessRollup2", "CriticalFileAccessed", "AssociateIndicator"), coalesce(UserSid, UID))

EVAL-user_type = case(event_simpleName="UserLogonFailed", if(UserLogonFlags="2", "admin", "user"), \
        event_simpleName IN ("UserLogon", "UserLogoff", "UserLogonFailed2"), if(UserIsAdmin="1", "admin", "user"), \
        event_simpleName="SensitiveWmiQuery",  if(like(UserName,"%SYSTEM"), "admin", "user"))

EVAL-src_user_type = case(event_simpleName IN ("UserLogoff", "UserLogon", "UserLogonFailed2"), if(UserIsAdmin="1", "admin", "user"))

EVAL-transaction_id = case(event_simpleName="DnsRequest", id)
EVAL-transport_dest_port = case(event_simpleName IN ("NetworkConnectIP4", "NetworkCloseIP4", "NetworkCloseIP6", "NetworkConnectIP6"), json_extract(lookup("crowdstrike_ta_lookup_Protocol", json_object("Protocol", Protocol), json_array("Protocol_lc_meaning")), "Protocol_lc_meaning")+ "/" + RemotePort, \
        event_simpleName IN ("NetworkListenIP4", "NetworkListenIP6", "NetworkReceiveAcceptIP4", "NetworkReceiveAcceptIP6"), json_extract(lookup("crowdstrike_ta_lookup_Protocol", json_object("Protocol", Protocol), json_array("Protocol_lc_meaning")), "Protocol_lc_meaning")+ "/" + LocalPort)



# ithr - stands for "index time host resolution"
# is used when user chooses index time host resolution at modinput configuration UI
# after doing host resolution task sourcetype is rewritten to crowdstrike:events:sensor
[crowdstrike:events:sensor:ithr]
BREAK_ONLY_BEFORE_DATE = false
category=Structured
CHARSET=UTF-8
description=Crowdstrike sensor events
INDEXED_EXTRACTIONS=json
AUTO_KV_JSON = false
KV_MODE = none
LINE_BREAKER=([\r\n]+)
NO_BINARY_CHECK=true
pulldown_type=true
SHOULD_LINEMERGE=false
TIME_PREFIX="timestamp":\s*
TIME_FORMAT=%s%3N
MAX_TIMESTAMP_LOOKAHEAD=15
TRUNCATE=200000
TZ = UTC

TRANSFORMS-crowdstrike_ta_event_ingest_time = crowdstrike_ta_event_ingest_time
TRANSFORMS-crowdstrike_ta_indextime_host_resolution = crowdstrike_ta_index_time_event_host_resolution_trigger_idxtm,crowdstrike_ta_index_time_event_host_resolution_extract,crowdstrike_ta_index_time_event_host_resolution_trigger_shtm
TRANSFORMS-crowdstrike_ta_rewrite_event_time = crowdstrike_ta_extract_timestamp_events_sensor,crowdstrike_ta_rewrite_timestamp_events_sensor
TRANSFORMS-crowdstrike_ta_rewrite_sensor_ithr_sourcetype = crowdstrike_ta_rewrite_sensor_intermediate_sourcetype



[source::...var/log/splunk/splunk_ta_crowdstrike_fdr.log(\.\d+)?]
sourcetype = splunk_ta_crowdstrike_fdr
