{"visualizations": {"sqs_message_count": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisTitleText": "SQS messages count", "stackMode": "stacked"}, "title": "Events ingested by sourcetype", "dataSources": {"primary": "sqs_message_count_ds"}}, "s3_event_files": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "S3 located event files vs event files received in SQS notifications", "dataSources": {"primary": "s3_event_files_ds"}}, "bucket_resources_ingest": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "Bucket resources ingest by stage", "dataSources": {"primary": "bucket_resources_ingest_ds"}}, "average_event_ingestion": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "Event ingestion average delay", "dataSources": {"primary": "average_event_ingestion_ds"}}, "ingested_vs_expected": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "Ingested vs expected (missing and duplicated events)", "dataSources": {"primary": "ingested_vs_expected_ds"}}, "modular_input_ingest_rates_mb_hour": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "Modular inputs ingest rates (MB/hour)", "dataSources": {"primary": "modular_input_ingest_rates_mb_hour_ds"}}, "modular_input_ingest_rates_files_hour": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "Modular inputs ingest rates (files/hour)", "dataSources": {"primary": "modular_input_ingest_rates_files_hour_ds"}}, "average_batch_processing_time": {"type": "splunk.column", "options": {"xAxisTitleText": "Time", "yAxisScale": "linear", "legendDisplay": "top"}, "title": "Modular inputs average batch processing time (in seconds)", "dataSources": {"primary": "average_batch_processing_time_ds"}}}, "dataSources": {"sqs_message_count_ds": {"type": "ds.search", "options": {"query": "index=_internal sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"is processing SQS messages:\" sqs_msg_action IN (ingest, skip) | eval kind=mvindex(split(sqs_msg_pathPrefix, \"/\"), -2) | timechart span=1h count by kind", "queryParameters": {"earliest": "0", "latest": "now"}}}, "s3_event_files_ds": {"type": "ds.search", "options": {"query": "index=_internal sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"FDR S3 bucket monitor, new event file detected:\" |  mvexpand fdr_event_file |  eval s3_resource=\"s3://\"+fdr_bucket+\"/\" + fdr_event_file |  dedup s3_resource | table fdr_event_file_last_modified s3_resource s3_kind| join type=outer left=s3 right=sqs where s3.s3_resource = sqs.s3_resource [search index=_internal sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"is processing SQS messages:\" sqs_msg_fileList=* | eval fdr_event_file = split(sqs_msg_fileList, \",\") | mvexpand fdr_event_file | eval s3_resource=\"s3://\"+sqs_msg_bucket+\"/\" + fdr_event_file | dedup s3_resource | fields s3_resource] | rename s3.fdr_event_file_last_modified as fdr_event_file_last_modified s3.s3_resource as s3_resource sqs.s3_resource as sqs_resource | eval kind=mvindex(split(s3_resource, \"/\"), -3) | eval notify_action = if(isnull(sqs_resource), \"Missed\", \"Notified\") | eval action_by_kind = notify_action + \" \" + kind | eval missed_or_notified = if(isnull(sqs_resource), -1, 1) | eval _time = strptime(fdr_event_file_last_modified, \"%Y-%m-%d %H:%M:%S%z\") | table _time s3_resource sqs_resource fdr_event_file_last_modified action_by_kind missed_or_notified | timechart sum(missed_or_notified) by action_by_kind", "queryParameters": {"earliest": "-14d@d", "latest": "now"}}}, "bucket_resources_ingest_ds": {"type": "ds.search", "options": {"query": "index=_internal sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"is processing SQS messages:\" sqs_msg_action IN (ingest, skip) | eval fdr_event_file = split(sqs_msg_fileList, \",\") | eval notification_time = _time | mvexpand fdr_event_file | eval s3_resource=\"s3://\"+sqs_msg_bucket+\"/\" + fdr_event_file | dedup s3_resource | fields notification_time s3_resource sqs_msg_action | join type=outer left=sqs right=ingest where sqs.s3_resource = ingest.events_source_file [search index=_internal sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"has started ingestion: events_source_file=\" | dedup events_source_file | eval ingest_start_time = _time | fields ingest_start_time events_source_file] | join type=outer left=sqs right=processed where sqs.sqs.s3_resource = processed.s3_resource [search index=_internal sourcetype=\"splunk_ta_crowdstrike_fdr*\" run_task_result=* | rex field=_raw '\"path\":\\s*\"(?<path>[^\\\"]+)\"' | rex field=_raw '\"bucket\":\\s*\"(?<bucket>[^\\\"]+)\"' | eval s3_resource=\"s3://\" + bucket+ \"/\" + path | eval finish_time = _time | fields run_task_result s3_resource finish_time] | rename processed.finish_time as finish_time sqs.ingest.ingest_start_time as start_time sqs.sqs.notification_time as notification_time processed.run_task_result as ingest_result sqs.sqs_msg_action as action_on_notification ingest.s3_resource as start_resource | eval _time = strptime(coalesce(finish_time, start_time, notification_time), \"%s.%3N\") | fillnull value=\"missing\" | eval Ingested=if(ingest_result=\"done\", 1, 0) | eval Failed=if(ingest_result=\"failed\", 1, 0) | eval Skipped=if(action_on_notification=\"skip\", 1, 0) | eval InProgress=if(action_on_notification=\"ingest\" AND start_resource!=\"missing\" AND ingest_result=\"missing\", 1, 0) | eval Scheduled=if(action_on_notification=\"ingest\" AND start_resource=\"missing\" AND ingest_result=\"missing\", 1, 0) | timechart span=1h sum(Ingested) as \"Ingested\" sum(Failed) as \"Failed\" sum(InProgress) as \"In progress\" sum(Scheduled) as \"Scheduled\" sum(Skipped) as \"Skipped\"", "queryParameters": {"earliest": "-14d@d", "latest": "now"}}}, "average_event_ingestion_ds": {"type": "ds.search", "options": {"query": "index=* sourcetype=\"crowdstrike:*\" event_ingest_time=* | eval diff = event_ingest_time - _time | timechart span=1h avg(diff) AS \"Ingest Delay in Seconds\"", "queryParameters": {"earliest": "-14d@d", "latest": "now"}}}, "ingested_vs_expected_ds": {"type": "ds.search", "options": {"query": "index=* sourcetype=\"crowdstrike:*\" earliest=-2w | stats count by source | append [search index=\"_internal\" \"INGEST |< cs_input_stanza=\" cs_ingest_filter_matches=* earliest=-1w | stats latest(_time) as ingest_time latest(cs_ingest_filter_matches) as cs_ingest_filter_matches by cs_ingest_file_path | rename cs_ingest_file_path as source] | stats latest(ingest_time) as ingest_time sum(cs_ingest_filter_matches) as expected_count sum(count) as ingested_count by source | where isnotnull(ingest_time) | eval _time = strptime(ingest_time, \"%s.%3N\") | eval diff = tonumber(ingested_count)-tonumber(expected_count) | eval Missing = if(diff < 0, diff, 0) | eval Duplicated = if(diff > 0, diff, 0) | timechart span=1h sum(Duplicated) as Duplicated sum(Missing) as Missing", "queryParameters": {"earliest": "0", "latest": "now"}}}, "modular_input_ingest_rates_mb_hour_ds": {"type": "ds.search", "options": {"query": "index=\"_internal\" sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"Sent to pipeline: cs_input_stanza=\" | eval cs_megabytes_sent = cs_bytes_sent/1024/1024 | timechart span=1h sum(cs_megabytes_sent) by cs_input_stanza", "queryParameters": {"earliest": "-2d", "latest": "now"}}}, "modular_input_ingest_rates_files_hour_ds": {"type": "ds.search", "options": {"query": "index=\"_internal\" sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"Sent to pipeline: cs_input_stanza=\" | timechart span=1h count by cs_input_stanza", "queryParameters": {"earliest": "-2d", "latest": "now"}}}, "average_batch_processing_time_ds": {"type": "ds.search", "options": {"query": "index=\"_internal\" sourcetype=\"splunk_ta_crowdstrike_fdr*\" \"BATCH processing summary: cs_input_stanza=\" | timechart span=1h avg(cs_batch_time_taken) as \"Processing time\"", "queryParameters": {"earliest": "-2d", "latest": "now"}}}}, "layout": {"type": "grid", "structure": [{"item": "sqs_message_count", "position": {"x": 20, "y": 170, "w": 80, "h": 300}}, {"item": "s3_event_files", "position": {"x": 100, "y": 170, "w": 80, "h": 300}}, {"item": "bucket_resources_ingest", "position": {"x": 20, "y": 470, "w": 80, "h": 300}}, {"item": "average_event_ingestion", "position": {"x": 100, "y": 470, "w": 80, "h": 300}}, {"item": "ingested_vs_expected", "position": {"x": 20, "y": 770, "w": 80, "h": 300}}, {"item": "modular_input_ingest_rates_mb_hour", "position": {"x": 100, "y": 770, "w": 80, "h": 300}}, {"item": "modular_input_ingest_rates_files_hour", "position": {"x": 20, "y": 1070, "w": 80, "h": 300}}, {"item": "average_batch_processing_time", "position": {"x": 100, "y": 1070, "w": 80, "h": 300}}]}}